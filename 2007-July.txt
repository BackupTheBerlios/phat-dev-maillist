From loki.davison at gmail.com  Sun Jul  1 10:17:39 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Sun, 1 Jul 2007 18:17:39 +1000
Subject: [Phat-dev] basic glade support
In-Reply-To: <1183229205.6069.55.camel@majesterium>
References: <1183229205.6069.55.camel@majesterium>
Message-ID: <ec9314860707010117j6dd791d5l1b02533bbb930efc@mail.gmail.com>

On 7/1/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> i've implemented skeleton glade support. the catalog
> covers all the existing widgets, icons are in place and
> installed but they are all copies of the gtkwindow
> pixmap. (this will make it easy to fix them, just grab
> one, edit it and commit the changes)
>
> "./configure --enable-glade-plugin" will build it and it's
> disabled by default.
>
> i've setup a support code module
> (phat/glade-plugin/glade-phat.{c,h}) that is built,
> installed and works to a degree, but literally has nothing
> in it yet. it just serves to hook in the phat lib for glade
> until we add some glade support code for any widgets
> that require it.
>
> the build options may need tweaking along the way
> but otherwise, adding support code should be as simple
> as editing that module. (see the glade 3 source and api
> docs for examples)
>
> as expected, not all phat widgets work or work properly
> with glade yet and i / we will have to bring them inline
> with glade's expectations.
>
> i'm doing this first rather than importing the cairo knob
> for two reasons. firstly, we'd do well to start from
> widgets that work properly in glade and secondly, because
> we now have 3 quite different pixmap knobs
> (phat's, mine and torben's) and a cairo knob that
> requires a base class that breaks both the phat knob
> and torben's knob.
>
> so we need to decide what to put in and then all work from
> there.
>
> in particular this means deciding on whether to use
> an abstract knob class and derive the vector
> and pixmap knobs from that, or have the vector knob
> as the bass class and derive the pixmap knob from that..
> etc etc to infinity and beyond.
>
> loki, unless you have any objections, i'll check in the
> changes to trunk. a patch is attached if you want to look
> over it first. (no pixmaps (binaries))
>
> cheers,
> pete.
>
>
>

Looks good, minor spelling mistake in  the xml file for the keyboard.
Other than that it's good. Feel free to commit to trunk. What the
issues you mention with not all widgets working with glade? Not
providing stuff as properties?

Loki


From loki.davison at gmail.com  Sun Jul  1 10:53:37 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Sun, 1 Jul 2007 18:53:37 +1000
Subject: [Phat-dev] Knob requirements
In-Reply-To: <1183200434.3162.48.camel@localhost.localdomain>
References: <1183200434.3162.48.camel@localhost.localdomain>
Message-ID: <ec9314860707010153x5ae1df67y2c098fd5ce47779f@mail.gmail.com>

On 6/30/07, Damon Chaplin <damon at karuna.eclipse.co.uk> wrote:
>
> Hi,
>
> I've just been looking over Reason and a few other apps to get an idea
> of the requirements for knobs. Not all of these are essential, but I
> think most of them are. Anyway, I hope it's useful:
>
>
> Use Cases
>   o Continuous knob - selection of a value from a range of values.
>     e.g. Volume, Treble, Bass, Panning, Pitch, Attack.
>   o Discrete knob - selection of one particular value from several.
>     e.g. Resolution - 1/2, 1/4. 1/8, 1/16, 1/32, 1/64.
>     (I've seen one knob with 9 discrete positions. That is probably
>     about the most needed.)
>
>
> Display
>   o Various styles, colors and sizes of knobs.
>   o Label underneath knob to describe it, e.g. "Treble".
>     Sometimes this is placed beside the knob, e.g. when a column of
>     vertical knobs is used, or when knobs are crammed together in the
>     mixer. Also occasionally it has a box around it.
>   o Labels for ends of range for continuous knobs, e.g. "-" and "+".
>   o Labels for each discrete position, e.g. "1/2", "1/4", "1/8".
>     This also has a line pointing to the position on the knob.
>   o Some knobs have an LED at the top to indicate that they are set
>     to something other than the central position.
>   o Some knobs are highlighted with a colored rectangle to indicate
>     that they are controlled by automation.
>   o Knobs should also indicate if they have the keyboard focus.
>   o Tooltips optionally show the value of the knob when the mouse
>     is over the knob and as the value is changed.
>
>
> Interaction
>   o Linear or radial option for moving knob.
>   o For the linear style there could be a mouse range option, and
>     modifier keys could be pressed to allow more sensitive control.
>   o For continuous knobs there may be a detent in the middle.
>     (Has anyone seen a continuous knob with several detents?)
>   o For discrete knobs the labels could highlight when the mouse
>     moves over them and be clicked to select them.
>   o Keyboard control - should take keyboard focus and allow the knob
>     value to be changed by the keyboard, e.g. Up, Down, Page Up,
>     Page Down, Shift+Up, Shift+Down (for finer control).
>
>
> Accessibility
>   o The normal ATK accessibility functions should be used to describe
>     the knobs, and also possibly to describe the discrete positions.
>   o Although using different colors & styles for knobs is nice, it
>     should be possible to switch all knobs to support the user's
>     accessibility requirements (e.g. use the theme colors as much
>     as possible, or use low or high contrast knobs).
>   o The small fonts typically used in audio apps may be a problem
>     as well. It should probably be possible to support different fonts.
>
>
>
> I'm willing to help out with this, or with some of the other widgets.
> (I wrote the original Glade GUI designer, so I know GTK+ fairly well!)
>
> Damon
>

This seems like an interesting collection of features. The labels for
discrete positions sounds like a useful feature. Though i do wonder if
a knob is the best widget for discrete stuff.

My main issue with your feature ideas is how handy an super knob is
compared to the other widgets we could use. I think the env / adsr
widget is much more useful especially for apps like
http://home.gna.org/zynjacku/  and http://sysex.net/phasex/ The
screenshots say it all. Also metering widgets would be very nice.
Porting all the meters from meterbridge to phat would allow all the
apps that create dodgy dpm meters to either use one that's already
coded or one of the very cool looking ppm meters. ;)

Porting Thorsten's ardour slider to phat is also higher on the todo i
think. If your more keen on working on the knobs than other widgets
that's okay though too. If you want svn access get an account on
berlios and i'll add you.

Loki


From zenadsl6252 at zen.co.uk  Sun Jul  1 18:58:11 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sun, 01 Jul 2007 17:58:11 +0100
Subject: [Phat-dev] basic glade support
In-Reply-To: <ec9314860707010117j6dd791d5l1b02533bbb930efc@mail.gmail.com>
References: <1183229205.6069.55.camel@majesterium>
	<ec9314860707010117j6dd791d5l1b02533bbb930efc@mail.gmail.com>
Message-ID: <1183309091.6063.13.camel@majesterium>

On Sun, 2007-07-01 at 18:17 +1000, Loki Davison wrote:
> On 7/1/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > i've implemented skeleton glade support. 

> Looks good, minor spelling mistake in  the xml file for the keyboard.

keyoard? heh. ty.

> Other than that it's good. Feel free to commit to trunk. What the
> issues you mention with not all widgets working with glade? Not
> providing stuff as properties?

i had problems with GTypes not being resolved so some widgets
weren't loaded, that was fixed by running ldconfig. i'm not sure
i understand that behaviour but the phat lib is linked in place as
it's not yet installed at the time the glade plugin is built. 

other than that, some widgets have no properties, others 
crash glade when you interact with them and the keyboard 
widget sometimes goes schizo if you change it's orientation.
(both vertical and horizontal stay visible and usable).

i'll commit them as i fix them.


cheers,
pete.



From damon at karuna.eclipse.co.uk  Mon Jul  2 12:14:01 2007
From: damon at karuna.eclipse.co.uk (Damon Chaplin)
Date: Mon, 02 Jul 2007 11:14:01 +0100
Subject: [Phat-dev] Knob requirements
In-Reply-To: <ec9314860707010153x5ae1df67y2c098fd5ce47779f@mail.gmail.com>
References: <1183200434.3162.48.camel@localhost.localdomain>
	<ec9314860707010153x5ae1df67y2c098fd5ce47779f@mail.gmail.com>
Message-ID: <1183371241.3243.19.camel@localhost.localdomain>

On Sun, 2007-07-01 at 18:53 +1000, Loki Davison wrote:

> This seems like an interesting collection of features. The labels for
> discrete positions sounds like a useful feature. Though i do wonder if
> a knob is the best widget for discrete stuff.

I agree that the discrete knob may not be the best choice
usability-wise. But quite a few audio apps like to use an interface very
similar to a real piece of equipment so it can be useful there.


> My main issue with your feature ideas is how handy an super knob is
> compared to the other widgets we could use. I think the env / adsr
> widget is much more useful especially for apps like
> http://home.gna.org/zynjacku/  and http://sysex.net/phasex/ The
> screenshots say it all.

I'd like to see a list of requirements for all the widgets we want in
Phat. I just posted the knob list as that was the first one I did. (I've
also looked at sliders, buttons and switches and could post those lists
later.)

Maybe you could do the env / adsr requirements, as I don't really know
what is needed there. Are there any good examples anywhere?

Most of the widgets needed for Phat are pretty easy to write. If we can
agree on requirements then someone can volunteer for each widget and go
off and write it in a fairly short time. We only need to do a few
widgets each.


>  Also metering widgets would be very nice.
> Porting all the meters from meterbridge to phat would allow all the
> apps that create dodgy dpm meters to either use one that's already
> coded or one of the very cool looking ppm meters. ;)

OK. I'll have a go at that. Though they seem closely tied to JACK at the
moment - I suppose we want to remove that dependency.


> Porting Thorsten's ardour slider to phat is also higher on the todo i
> think.

I could have a look at that as well, if Thorsten is busy. Where is the
code in ardour?

Damon




From damon at karuna.eclipse.co.uk  Wed Jul  4 14:06:51 2007
From: damon at karuna.eclipse.co.uk (Damon Chaplin)
Date: Wed, 04 Jul 2007 13:06:51 +0100
Subject: [Phat-dev] Port of meterbridge widgets
Message-ID: <1183550811.3154.13.camel@localhost.localdomain>

On Mon, 2007-07-02 at 11:14 +0100, Damon Chaplin wrote:
> On Sun, 2007-07-01 at 18:53 +1000, Loki Davison wrote:

> >  Also metering widgets would be very nice.
> > Porting all the meters from meterbridge to phat would allow all the
> > apps that create dodgy dpm meters to either use one that's already
> > coded or one of the very cool looking ppm meters. ;)
> 
> OK. I'll have a go at that. Though they seem closely tied to JACK
> at the moment - I suppose we want to remove that dependency.

I've done an initial port of the DPM, PPM and VU meters:
  http://www.karuna.eclipse.co.uk/phat/myphat.tgz

I've removed the JACK code, and the level of each meter is simply set as
a value in the range 0 - 1 for now.

I don't know much about the technical side of audio myself so you guys
will have to decide on the appropriate API for these meters.

Also, do we want to support different styles/sizes of meters?
I'd like to at least support different styles for the DPM meters which I
think are the ones used most often in audio apps. I personally like the
red/orange/green LED-type meters (without the numbers).

Damon



From loki.davison at gmail.com  Thu Jul  5 09:09:27 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Thu, 5 Jul 2007 17:09:27 +1000
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <1183550811.3154.13.camel@localhost.localdomain>
References: <1183550811.3154.13.camel@localhost.localdomain>
Message-ID: <ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>

On 7/4/07, Damon Chaplin <damon at karuna.eclipse.co.uk> wrote:
> On Mon, 2007-07-02 at 11:14 +0100, Damon Chaplin wrote:
> > On Sun, 2007-07-01 at 18:53 +1000, Loki Davison wrote:
>
> > >  Also metering widgets would be very nice.
> > > Porting all the meters from meterbridge to phat would allow all the
> > > apps that create dodgy dpm meters to either use one that's already
> > > coded or one of the very cool looking ppm meters. ;)
> >
> > OK. I'll have a go at that. Though they seem closely tied to JACK
> > at the moment - I suppose we want to remove that dependency.
>
> I've done an initial port of the DPM, PPM and VU meters:
>   http://www.karuna.eclipse.co.uk/phat/myphat.tgz
>
> I've removed the JACK code, and the level of each meter is simply set as
> a value in the range 0 - 1 for now.
>
> I don't know much about the technical side of audio myself so you guys
> will have to decide on the appropriate API for these meters.
>
> Also, do we want to support different styles/sizes of meters?
> I'd like to at least support different styles for the DPM meters which I
> think are the ones used most often in audio apps. I personally like the
> red/orange/green LED-type meters (without the numbers).
>
> Damon
>

Awesome! ;) I'd say yes for sizes and styles. What they should be i'm
not sure though. These should all inherit from a meter parent class
though that has the get and set functions. I'm not sure about the rest
of the api and what is required, maybe Nedko can suggest something as
his app uses metering. Tell me when you've got an account on berlios
so i can add you to svn and you can commit these.

Loki


From torbenh at gmx.de  Fri Jul  6 21:41:42 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Fri, 6 Jul 2007 21:41:42 +0200
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
Message-ID: <20070706194142.GA12296@mobilat>


i merged all patches.
the complete archive is here:

http://galan.sourceforge.net/phat-0.4.1+meters+tech+glade.tar.bz2

here is a screenshot of glade managing phat...

http://galan.sourceforge.net/glade-phat02.png



On Thu, Jul 05, 2007 at 05:09:27PM +1000, Loki Davison wrote:
> On 7/4/07, Damon Chaplin <damon at karuna.eclipse.co.uk> wrote:
> > On Mon, 2007-07-02 at 11:14 +0100, Damon Chaplin wrote:
> > > On Sun, 2007-07-01 at 18:53 +1000, Loki Davison wrote:
> >
> > > >  Also metering widgets would be very nice.
> > > > Porting all the meters from meterbridge to phat would allow all the
> > > > apps that create dodgy dpm meters to either use one that's already
> > > > coded or one of the very cool looking ppm meters. ;)
> > >
> > > OK. I'll have a go at that. Though they seem closely tied to JACK
> > > at the moment - I suppose we want to remove that dependency.
> >
> > I've done an initial port of the DPM, PPM and VU meters:
> >   http://www.karuna.eclipse.co.uk/phat/myphat.tgz
> >
> > I've removed the JACK code, and the level of each meter is simply set as
> > a value in the range 0 - 1 for now.
> >
> > I don't know much about the technical side of audio myself so you guys
> > will have to decide on the appropriate API for these meters.
> >
> > Also, do we want to support different styles/sizes of meters?
> > I'd like to at least support different styles for the DPM meters which I
> > think are the ones used most often in audio apps. I personally like the
> > red/orange/green LED-type meters (without the numbers).
> >
> > Damon
> >
> 
> Awesome! ;) I'd say yes for sizes and styles. What they should be i'm
> not sure though. These should all inherit from a meter parent class
> though that has the get and set functions. I'm not sure about the rest
> of the api and what is required, maybe Nedko can suggest something as
> his app uses metering. Tell me when you've got an account on berlios
> so i can add you to svn and you can commit these.


on the metering API i would say we should be deriving from GtkAdjustment again.
a property for the pixmap would be nice.




-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From damon at karuna.eclipse.co.uk  Fri Jul  6 23:12:48 2007
From: damon at karuna.eclipse.co.uk (Damon Chaplin)
Date: Fri, 06 Jul 2007 22:12:48 +0100
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <20070706194142.GA12296@mobilat>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat>
Message-ID: <1183756368.3155.17.camel@localhost.localdomain>

On Fri, 2007-07-06 at 21:41 +0200, torbenh at gmx.de wrote:

> on the metering API i would say we should be deriving from GtkAdjustment again.
> a property for the pixmap would be nice.

I've been reading quite a lot about the different meter types. Wikipedia
covers most of the issues:

  http://en.wikipedia.org/wiki/Peak_programme_meter
  http://en.wikipedia.org/wiki/VU_meter

The BBC has even released some LGPL code for a PPM meter:

  http://www.bbc.co.uk/opensource/projects/baptools/


The attack and decay "ballistics" of the meters are quite complicated,
so I think it would be nice to do this within the widgets, rather than
force the developer to handle it. We can probably use the code from
meterbridge or from the BBC to do it.

So we'd have something like a process_samples() function, which can be
called with each bunch of samples received from JACK or wherever, and an
update_display() which is only called every 1/10 of a second or so.

If we do that I don't think we need a GtkAdjustment as well. It might
over-complicate things.

Damon

PS. Does anyone actually have a copy of the standards specifying the
DPM/PPM/VU meters? I found the EBU's spec for their PPM but the others
all cost money.




From torbenh at gmx.de  Sat Jul  7 13:42:38 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Sat, 7 Jul 2007 13:42:38 +0200
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <1183756368.3155.17.camel@localhost.localdomain>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat>
	<1183756368.3155.17.camel@localhost.localdomain>
Message-ID: <20070707114238.GC12296@mobilat>

On Fri, Jul 06, 2007 at 10:12:48PM +0100, Damon Chaplin wrote:
> On Fri, 2007-07-06 at 21:41 +0200, torbenh at gmx.de wrote:
> 
> > on the metering API i would say we should be deriving from GtkAdjustment again.
> > a property for the pixmap would be nice.
> 
> I've been reading quite a lot about the different meter types. Wikipedia
> covers most of the issues:
> 
>   http://en.wikipedia.org/wiki/Peak_programme_meter
>   http://en.wikipedia.org/wiki/VU_meter
> 
> The BBC has even released some LGPL code for a PPM meter:
> 
>   http://www.bbc.co.uk/opensource/projects/baptools/
> 
> 
> The attack and decay "ballistics" of the meters are quite complicated,
> so I think it would be nice to do this within the widgets, rather than
> force the developer to handle it. We can probably use the code from
> meterbridge or from the BBC to do it.
> 
> So we'd have something like a process_samples() function, which can be
> called with each bunch of samples received from JACK or wherever, and an
> update_display() which is only called every 1/10 of a second or so.
> 
> If we do that I don't think we need a GtkAdjustment as well. It might
> over-complicate things.

yes. 
but i would rather have the DSP part of the meter inside a LADSPA | LV2
plugin. Consider metering an audio stream on a remote host.
dsp code should run on the remote too. then send OSC or sumthing to the
local machine, which displays the meter...

however your API would even fit for a scope and most other sound
visualising things.

oh.. and i meant GtkRange..


> 
> Damon
> 
> PS. Does anyone actually have a copy of the standards specifying the
> DPM/PPM/VU meters? I found the EBU's spec for their PPM but the others
> all cost money.
> 
> 
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From mobarre at gmail.com  Sat Jul  7 16:07:50 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Sat, 7 Jul 2007 16:07:50 +0200
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <20070706194142.GA12296@mobilat>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat>
Message-ID: <3c808a150707070707h4412850dl9f98c44d1023bb7c@mail.gmail.com>

On 7/6/07, torbenh at gmx.de <torbenh at gmx.de> wrote:
>
> i merged all patches.
> the complete archive is here:
>
> http://galan.sourceforge.net/phat-0.4.1+meters+tech+glade.tar.bz2
>
> here is a screenshot of glade managing phat...
>
> http://galan.sourceforge.net/glade-phat02.png
>

This looks very promising !

Now, let's set up some glade stuff on my PC ;-)
__________________
Marc-Olivier Barre.


From t_w_ at freenet.de  Sat Jul  7 20:46:03 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Sat, 7 Jul 2007 20:46:03 +0200
Subject: [Phat-dev] Knob requirements
In-Reply-To: <1183371241.3243.19.camel@localhost.localdomain>
References: <1183200434.3162.48.camel@localhost.localdomain>
	<ec9314860707010153x5ae1df67y2c098fd5ce47779f@mail.gmail.com>
	<1183371241.3243.19.camel@localhost.localdomain>
Message-ID: <20070707184603.GB6268@charly.SWORD>

On Mon, Jul 02, 2007 at 11:14:01AM +0100, Damon Chaplin wrote:
> 
> > Porting Thorsten's ardour slider to phat is also higher on the todo i
> > think.
> 
> I could have a look at that as well, if Thorsten is busy. Where is the
> code in ardour?

(Lost internet connection for a few days).

I designed them, Pauls Davis (las in #ardour) did the implemenation.
No clue on the code side ;)


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From zenadsl6252 at zen.co.uk  Sun Jul  8 10:18:01 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sun, 08 Jul 2007 09:18:01 +0100
Subject: [Phat-dev] glade support committed
Message-ID: <1183882681.26172.11.camel@majesterium>

i finally got around to adding that basic glade support to trunk. 
sorry for the delay. 

things seem to be moving at a pace otherwise :)
more in a bit after i appraise myself of developments.

cheers,
pete.




From mobarre at gmail.com  Sun Jul  8 13:00:51 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Sun, 8 Jul 2007 13:00:51 +0200
Subject: [Phat-dev] glade support committed
In-Reply-To: <1183882681.26172.11.camel@majesterium>
References: <1183882681.26172.11.camel@majesterium>
Message-ID: <3c808a150707080400q548004an30ce9dfe2a4a973@mail.gmail.com>

On 7/8/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> i finally got around to adding that basic glade support to trunk.
> sorry for the delay.
>
> things seem to be moving at a pace otherwise :)
> more in a bit after i appraise myself of developments.
>
> cheers,
> pete.

Something seems to be missing here :

make[2]: *** No rule to make target `glade-phat.c', needed by
`libgladephat_la-glade-phat.lo'.  Stop.
make[2]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
make: *** [all-recursive] Error 1
__________________
Marc-Olivier Barre.


From zenadsl6252 at zen.co.uk  Sun Jul  8 14:04:49 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sun, 08 Jul 2007 13:04:49 +0100
Subject: [Phat-dev] glade support committed
In-Reply-To: <3c808a150707080400q548004an30ce9dfe2a4a973@mail.gmail.com>
References: <1183882681.26172.11.camel@majesterium>
	<3c808a150707080400q548004an30ce9dfe2a4a973@mail.gmail.com>
Message-ID: <1183896289.32491.3.camel@majesterium>

On Sun, 2007-07-08 at 13:00 +0200, Marc-Olivier Barre wrote:
> On 7/8/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > i finally got around to adding that basic glade support to trunk.
> > sorry for the delay.
> >
> > things seem to be moving at a pace otherwise :)
> > more in a bit after i appraise myself of developments.
> >
> > cheers,
> > pete.
> 
> Something seems to be missing here :
> 
> make[2]: *** No rule to make target `glade-phat.c', needed by
> `libgladephat_la-glade-phat.lo'.  Stop.
> make[2]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
> make[1]: *** [all-recursive] Error 1
> make[1]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
> make: *** [all-recursive] Error 1

forgot to commit the (as yet) empty plugin sources.

touch /media/data/src/svn/phat/phat/glade-plugin/glade-phat{c,h}

should fix it for you in the interim. i'll commit them now though.
sorry about that.

pete



From zenadsl6252 at zen.co.uk  Sun Jul  8 14:10:18 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sun, 08 Jul 2007 13:10:18 +0100
Subject: [Phat-dev] glade support committed
In-Reply-To: <3c808a150707080400q548004an30ce9dfe2a4a973@mail.gmail.com>
References: <1183882681.26172.11.camel@majesterium>
	<3c808a150707080400q548004an30ce9dfe2a4a973@mail.gmail.com>
Message-ID: <1183896618.32491.5.camel@majesterium>

On Sun, 2007-07-08 at 13:00 +0200, Marc-Olivier Barre wrote:
> On 7/8/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > i finally got around to adding that basic glade support to trunk.
> > sorry for the delay.
> >
> > things seem to be moving at a pace otherwise :)
> > more in a bit after i appraise myself of developments.
> >
> > cheers,
> > pete.
> 
> Something seems to be missing here :
> 
> make[2]: *** No rule to make target `glade-phat.c', needed by
> `libgladephat_la-glade-phat.lo'.  Stop.
> make[2]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
> make[1]: *** [all-recursive] Error 1
> make[1]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
> make: *** [all-recursive] Error 1

hang on.. this was built with the --enable-glade-plugin right?
if not then something much worserer is wrongulized.

pete



From zenadsl6252 at zen.co.uk  Sun Jul  8 14:42:34 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sun, 08 Jul 2007 13:42:34 +0100
Subject: [Phat-dev] glade support committed
In-Reply-To: <1183896289.32491.3.camel@majesterium>
References: <1183882681.26172.11.camel@majesterium>
	<3c808a150707080400q548004an30ce9dfe2a4a973@mail.gmail.com>
	<1183896289.32491.3.camel@majesterium>
Message-ID: <1183898554.5942.3.camel@majesterium>

On Sun, 2007-07-08 at 13:04 +0100, pete shorthose wrote:
> On Sun, 2007-07-08 at 13:00 +0200, Marc-Olivier Barre wrote:
> > On 7/8/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > i finally got around to adding that basic glade support to trunk.
> > > sorry for the delay.
> > >
> > > things seem to be moving at a pace otherwise :)
> > > more in a bit after i appraise myself of developments.
> > >
> > > cheers,
> > > pete.
> > 
> > Something seems to be missing here :
> > 
> > make[2]: *** No rule to make target `glade-phat.c', needed by
> > `libgladephat_la-glade-phat.lo'.  Stop.
> > make[2]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
> > make[1]: *** [all-recursive] Error 1
> > make[1]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
> > make: *** [all-recursive] Error 1
> 
> forgot to commit the (as yet) empty plugin sources.
> 
> touch /media/data/src/svn/phat/phat/glade-plugin/glade-phat{c,h}
> 
> should fix it for you in the interim. i'll commit them now though.
> sorry about that.

the glade catalog file was missing too. i'm at a loss to explain that
because i added the
plugin dir recursively. 

it should be fine now. nothing glade related is done without
--enable-glade-plugin and it builds and installs ok from a fresh trunk
check out.

pete.



From nedko at arnaudov.name  Mon Jul  9 00:53:40 2007
From: nedko at arnaudov.name (Nedko Arnaudov)
Date: Mon, 09 Jul 2007 01:53:40 +0300
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	(Loki Davison's message of "Thu, 5 Jul 2007 17:09:27 +1000")
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
Message-ID: <87odimo6bv.fsf@arnaudov.name>

"Loki Davison" <loki.davison at gmail.com> writes:

> On 7/4/07, Damon Chaplin <damon at karuna.eclipse.co.uk> wrote:
>> On Mon, 2007-07-02 at 11:14 +0100, Damon Chaplin wrote:
>> > On Sun, 2007-07-01 at 18:53 +1000, Loki Davison wrote:
>>
>> > >  Also metering widgets would be very nice.
>> > > Porting all the meters from meterbridge to phat would allow all the
>> > > apps that create dodgy dpm meters to either use one that's already
>> > > coded or one of the very cool looking ppm meters. ;)
>> >
>> > OK. I'll have a go at that. Though they seem closely tied to JACK
>> > at the moment - I suppose we want to remove that dependency.
>>
>> I've done an initial port of the DPM, PPM and VU meters:
>>   http://www.karuna.eclipse.co.uk/phat/myphat.tgz
>>
>> I've removed the JACK code, and the level of each meter is simply set as
>> a value in the range 0 - 1 for now.
>>
>> I don't know much about the technical side of audio myself so you guys
>> will have to decide on the appropriate API for these meters.
>>
>> Also, do we want to support different styles/sizes of meters?
>> I'd like to at least support different styles for the DPM meters which I
>> think are the ones used most often in audio apps. I personally like the
>> red/orange/green LED-type meters (without the numbers).
>>
>> Damon
>>
>
> Awesome! ;) I'd say yes for sizes and styles. What they should be i'm
> not sure though. These should all inherit from a meter parent class
> though that has the get and set functions. I'm not sure about the rest
> of the api and what is required, maybe Nedko can suggest something as
> his app uses metering. Tell me when you've got an account on berlios
> so i can add you to svn and you can commit these.
>
> Loki

Hi, and sorry for not being more active! I have taken quick look at the
api and I think it is fine. The meter widget I created for jack_mixer
(screenshots can be seen at http://home.gna.org/jackmixer/ ) is one
style, resizable. Unlike meterbridge they dont use pre-rendered
background image and thus are fully resizable. I've implemented them
using cairo in python. ATM they dont have "recent peak" meter. One
specific feature I have in jack_mixer is "scales". They define function
between audio signal level and indicator offset. They also define where
"marks" should be. I use same approach (and same object class) for
mapping slider position to attenuation.

-- 
Nedko Arnaudov <GnuPG KeyID: DE1716B0>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/phat-dev/attachments/20070709/0d95da9c/attachment.pgp>

From zenadsl6252 at zen.co.uk  Mon Jul  9 04:07:09 2007
From: zenadsl6252 at zen.co.uk (pete)
Date: Mon, 09 Jul 2007 03:07:09 +0100
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <20070707114238.GC12296@mobilat>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat>
	<1183756368.3155.17.camel@localhost.localdomain>
	<20070707114238.GC12296@mobilat>
Message-ID: <1183946829.5808.10.camel@one>

On Sat, 2007-07-07 at 13:42 +0200, torbenh at gmx.de wrote:
> On Fri, Jul 06, 2007 at 10:12:48PM +0100, Damon Chaplin wrote:
> > On Fri, 2007-07-06 at 21:41 +0200, torbenh at gmx.de wrote:
> > 
> > > on the metering API i would say we should be deriving from GtkAdjustment again.
> > > a property for the pixmap would be nice.
> > 
> > I've been reading quite a lot about the different meter types. Wikipedia
> > covers most of the issues:
> > 
> >   http://en.wikipedia.org/wiki/Peak_programme_meter
> >   http://en.wikipedia.org/wiki/VU_meter
> > 
> > The BBC has even released some LGPL code for a PPM meter:
> > 
> >   http://www.bbc.co.uk/opensource/projects/baptools/
> > 
> > 
> > The attack and decay "ballistics" of the meters are quite complicated,
> > so I think it would be nice to do this within the widgets, rather than
> > force the developer to handle it. We can probably use the code from
> > meterbridge or from the BBC to do it.
> > 
> > So we'd have something like a process_samples() function, which can be
> > called with each bunch of samples received from JACK or wherever, and an
> > update_display() which is only called every 1/10 of a second or so.
> > 
> > If we do that I don't think we need a GtkAdjustment as well. It might
> > over-complicate things.
> 
> yes. 
> but i would rather have the DSP part of the meter inside a LADSPA | LV2
> plugin. Consider metering an audio stream on a remote host.
> dsp code should run on the remote too. then send OSC or sumthing to the
> local machine, which displays the meter...

i think we can do both. either create separate meter and meter logic
objects that can work together (much like the phatknob and gtkadjustment
do), or  make one meter widget capable of operating in passive mode
(values and timing are externally supplied) or active mode (where the
widget polls some sample value) 

pete



From zenadsl6252 at zen.co.uk  Mon Jul  9 12:12:08 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Mon, 09 Jul 2007 11:12:08 +0100
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <20070706194142.GA12296@mobilat>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat>
Message-ID: <1183975928.18919.6.camel@majesterium>

On Fri, 2007-07-06 at 21:41 +0200, torbenh at gmx.de wrote:
> i merged all patches.
> the complete archive is here:
> 
> http://galan.sourceforge.net/phat-0.4.1+meters+tech+glade.tar.bz2

did you delete it? i'm getting a 404 from sf.

tarballs are great for testing, not so much for merging. i dunno if
you've spoken to loki about this but are you intending to work on
phat directly? (ie: join the project) or did you want one of us to
merge in particular changes from your tarball?

same goes for you Damon?

cheers,
pete.



From loki.davison at gmail.com  Mon Jul  9 15:19:12 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Mon, 9 Jul 2007 23:19:12 +1000
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <1183975928.18919.6.camel@majesterium>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat>
	<1183975928.18919.6.camel@majesterium>
Message-ID: <ec9314860707090619m4d08b8balc9302123b631db52@mail.gmail.com>

On 7/9/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> On Fri, 2007-07-06 at 21:41 +0200, torbenh at gmx.de wrote:
> > i merged all patches.
> > the complete archive is here:
> >
> > http://galan.sourceforge.net/phat-0.4.1+meters+tech+glade.tar.bz2
>
> did you delete it? i'm getting a 404 from sf.
>
> tarballs are great for testing, not so much for merging. i dunno if
> you've spoken to loki about this but are you intending to work on
> phat directly? (ie: join the project) or did you want one of us to
> merge in particular changes from your tarball?
>
> same goes for you Damon?
>
> cheers,
> pete.
>

Damon has joined the project. Do you want to get a berlios account and
join too Torben? Svn is a big step up on tarballs.

Loki


From eric at zhevny.com  Mon Jul  9 19:12:53 2007
From: eric at zhevny.com (Eric Dantan Rzewnicki)
Date: Mon, 9 Jul 2007 13:12:53 -0400
Subject: [Phat-dev] knob-keyboard functionality
In-Reply-To: <1182765038.31395.116.camel@majesterium>
References: <467F663B.3050701@lumin.us>
	<1182765038.31395.116.camel@majesterium>
Message-ID: <20070709171252.GN31740@zhevny.com>

On Mon, Jun 25, 2007 at 10:50:38AM +0100, pete shorthose wrote:
> On Mon, 2007-06-25 at 01:52 -0500, Mark Rivera wrote:
> > Speaking of knobs, it'd be cool if after you clicked on a knob (i.e., it 
> > had focus), it would be possible to use the arrow keys on the keyboard 
> > to adjust the value. Up and Right would mean ++, and Down and Left would 
> > mean --. Shift+arrow could mean some developer-specified value like +=10 
> > or -=10. This would be great for end-users who don't want to fine-tune 
> > knob values using the mouse, or in situations where the end-user is 
> > setting up a synth patch or something by tabbing through all the knobs.
> 
> yeah, good idea.
> 
> we are hoping to provide some sort of customisable mapping between
> control methods and input events. if we provide sane defaults then
> there should be a measure of consistency as most developers or users
> wouldn't need to change them, but at the same time, they have
> flexibility
> to do so if they really want.
> 
> it occurs to me that i don't think we outline or otherwise highlight the
> active knob though. i'll have to check that.

Hi, just letting my presence here be known. And chiming in on this just
to say I want specimen to be controllable from the keyboard as much as
possible as I personally hate mice, too. I haven't really thought
through any specific ideas about keyboard mapping, yet. So, nothing more
constructive to add than a vague sort of votes++ for the general
concept.

-Eric Rz.


From eric at zhevny.com  Mon Jul  9 20:48:34 2007
From: eric at zhevny.com (Eric Dantan Rzewnicki)
Date: Mon, 9 Jul 2007 14:48:34 -0400
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
Message-ID: <20070709184831.GA26822@zhevny.com>

On Wed, Jun 27, 2007 at 10:23:36PM +1000, Loki Davison wrote:
> On 6/27/07, torbenh at gmx.de <torbenh at gmx.de> wrote:
> > On Wed, Jun 27, 2007 at 11:00:27AM +0100, pete shorthose wrote:
> > > On Wed, 2007-06-27 at 06:28 +0200, torbenh at gmx.de wrote:
> > > > On Tue, Jun 26, 2007 at 09:17:57PM +0100, pete shorthose wrote:
> > > > > On Mon, 2007-06-25 at 12:04 +0100, Damon Chaplin wrote:
> > > > > > I've just tried some of the demos and here's some initial thoughts:
> > > > > >  o PhatFanSlider flickers horribly and isn't that easy to use.
> > > > > >    (The demo is a bit odd as well since the range bar is so long
> > > > > >    you don't really need a fan slider for it.)
> > > > > iirc, this is a problem with shaped X windows and not phat.
> > > > > i don't think that there is a comprehensive solution atm.
> > > > it still is a problem of phat, because there is only the fanslider in
> > > > it. I dont like it either.
> > > before i reply fully,  can i ask you if you are open to using (or even
> > > working on) phat if it meets your needs?
> > > not that your input isn't valuable even if not but i could do with
> > > knowing that from the outset.
> > > also, are you working towards a competing library or just re
> > > working galan's interface?
> > i dont like competing libraries. (i only dont like the fanslider)
> > but with some small efforts it would just be a config option to have a
> > normal slider in place.
> > we just need a common SliderBaseClass and some sort of factory....
> > phat is THE gtk+ audio widgets library.
> Thorsten's sliders that are used in ardour should also be in phat.
> That's on the todo list. As is fixing the fansliders. The code is
> pretty hairy though. Goto's and fun stuff. Also i don't know much
> about xshape etc. We could do it with the xcomposite extension though.
> Would solve the flickering problem. Also, i've got another work around
> for the flickering prob that i'll try sometime soon. Have the xshape
> be the size of the whole screen and just change the mask so the actual
> size of the window doesn't change. Should work i think. Need some of
> your graphics smarts on this stuff though guys.

Just chiming in again with another "me too" regarding fixing the
ugliness of the fansliders. If we can't get it to look pretty I'm almost
inclined to not use them in specimen anymore. I like the concept, but it
just doesn't look good right now.

Also, I've had a number of people suggest that it would be good to have
them translucent so they don't obscure the gui bits over which they fan
out. Functionally it doesn't matter, but I think it sort of makes users
uncomfortable having this jagged opaque thing cover up other things.

-Eric Rz.


From t_w_ at freenet.de  Mon Jul  9 21:22:43 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Mon, 9 Jul 2007 21:22:43 +0200
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <20070709184831.GA26822@zhevny.com>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
Message-ID: <20070709192242.GA4145@charly.SWORD>

On Mon, Jul 09, 2007 at 02:48:34PM -0400, Eric Dantan Rzewnicki wrote:

> Just chiming in again with another "me too" regarding fixing the
> ugliness of the fansliders. If we can't get it to look pretty I'm almost
> inclined to not use them in specimen anymore. I like the concept, but it
> just doesn't look good right now.
> 
> Also, I've had a number of people suggest that it would be good to have
> them translucent so they don't obscure the gui bits over which they fan
> out. Functionally it doesn't matter, but I think it sort of makes users
> uncomfortable having this jagged opaque thing cover up other things.

They were meant to be translucent starting from very early concepts.
Seen http://thorwil.wordpress.com/2007/05/01/fan-sliders/ ?
And since I'm at it:
http://thorwil.wordpress.com/2007/05/01/sliders-with-text/
:)


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From eric at zhevny.com  Mon Jul  9 21:56:38 2007
From: eric at zhevny.com (Eric Dantan Rzewnicki)
Date: Mon, 9 Jul 2007 15:56:38 -0400
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <20070709192242.GA4145@charly.SWORD>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<20070709192242.GA4145@charly.SWORD>
Message-ID: <20070709195638.GB26822@zhevny.com>

On Mon, Jul 09, 2007 at 09:22:43PM +0200, Thorsten Wilms wrote:
> On Mon, Jul 09, 2007 at 02:48:34PM -0400, Eric Dantan Rzewnicki wrote:
> 
> > Just chiming in again with another "me too" regarding fixing the
> > ugliness of the fansliders. If we can't get it to look pretty I'm almost
> > inclined to not use them in specimen anymore. I like the concept, but it
> > just doesn't look good right now.
> > 
> > Also, I've had a number of people suggest that it would be good to have
> > them translucent so they don't obscure the gui bits over which they fan
> > out. Functionally it doesn't matter, but I think it sort of makes users
> > uncomfortable having this jagged opaque thing cover up other things.
> 
> They were meant to be translucent starting from very early concepts.
> Seen http://thorwil.wordpress.com/2007/05/01/fan-sliders/ ?
> And since I'm at it:
> http://thorwil.wordpress.com/2007/05/01/sliders-with-text/
> :)

hmm... yes. good. So, what does it take to make translucency happen (to
the coders, not thorwil)?

And to thorsten regarding sliders-with-text: I like the added
information density. Have you tried a mockup with the colored value bar
more like the mercury in a thermometer? i.e. not taking up the full
width. I wonder if that would help with the slight sense of visual
clutter ...

I think 6 and 11 look best to me on first glance.

-Eric Rz.


From t_w_ at freenet.de  Mon Jul  9 22:09:10 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Mon, 9 Jul 2007 22:09:10 +0200
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <20070709195638.GB26822@zhevny.com>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<20070709192242.GA4145@charly.SWORD>
	<20070709195638.GB26822@zhevny.com>
Message-ID: <20070709200910.GB4145@charly.SWORD>

On Mon, Jul 09, 2007 at 03:56:38PM -0400, Eric Dantan Rzewnicki wrote:

> > http://thorwil.wordpress.com/2007/05/01/sliders-with-text/

 
> And to thorsten regarding sliders-with-text: I like the added
> information density. Have you tried a mockup with the colored value bar
> more like the mercury in a thermometer? i.e. not taking up the full
> width. I wonder if that would help with the slight sense of visual
> clutter ...

Any change of colour / contrast behind the text is bad for readability. 
I briefly tried thermometer style. You can almost draw 2 lines through 
the text as well ;) ... or you have to go low contrast so the value 
isn't easy to see.

Regarding clutter ... the mockup is terribly packed. Have just a few 
such widgets, all the same style, longer, maybe a bit taller ...


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From eric at zhevny.com  Mon Jul  9 22:18:56 2007
From: eric at zhevny.com (Eric Dantan Rzewnicki)
Date: Mon, 9 Jul 2007 16:18:56 -0400
Subject: [Phat-dev] debian packages
Message-ID: <20070709201855.GC26822@zhevny.com>

I'm about to adopt the phat debian packages. They were orphaned back in
Oct 06. Has anyone here done any debian packaging work?

Do you know of anyone working on debs for debian-derived distros?

Once I get the libphat packages sponsored for upload I'll try to package
pyphat as well.

I am planning to do these under the alioth.debian.org demudi project to
be maintained by the debian-multimedia team, so it won't rely solely on
me. But, I'll take primary responsibility whenever I'm healthy and net
accessible.

-Eric Rz.


From damon at karuna.eclipse.co.uk  Mon Jul  9 22:19:53 2007
From: damon at karuna.eclipse.co.uk (Damon Chaplin)
Date: Mon, 09 Jul 2007 21:19:53 +0100
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <20070709184831.GA26822@zhevny.com>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium> <20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium> <20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
Message-ID: <1184012393.3257.4.camel@localhost.localdomain>

On Mon, 2007-07-09 at 14:48 -0400, Eric Dantan Rzewnicki wrote:

> Just chiming in again with another "me too" regarding fixing the
> ugliness of the fansliders. If we can't get it to look pretty I'm almost
> inclined to not use them in specimen anymore. I like the concept, but it
> just doesn't look good right now.

I think we should just use normal sliders that become much more
sensitive if you hold down a modifier key, e.g. Shift. I think Reason
does that.

Even if the display issues of FanSliders were sorted out, I'm afraid I
don't really find them easy to use (they're a bit too weird!).

Damon




From torbenh at gmx.de  Mon Jul  9 23:17:03 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Mon, 9 Jul 2007 23:17:03 +0200
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <ec9314860707090619m4d08b8balc9302123b631db52@mail.gmail.com>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat>
	<1183975928.18919.6.camel@majesterium>
	<ec9314860707090619m4d08b8balc9302123b631db52@mail.gmail.com>
Message-ID: <20070709211703.GB23950@mobilat>

On Mon, Jul 09, 2007 at 11:19:12PM +1000, Loki Davison wrote:
> On 7/9/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > On Fri, 2007-07-06 at 21:41 +0200, torbenh at gmx.de wrote:
> > > i merged all patches.
> > > the complete archive is here:
> > >
> > > http://galan.sourceforge.net/phat-0.4.1+meters+tech+glade.tar.bz2
> >
> > did you delete it? i'm getting a 404 from sf.

huh... sorry... now its there.

> >
> > tarballs are great for testing, not so much for merging. i dunno if
> > you've spoken to loki about this but are you intending to work on
> > phat directly? (ie: join the project) or did you want one of us to
> > merge in particular changes from your tarball?

well..  i did not find out how to let patch create new files.
i had to touch all new files before your patch played nicely with me.

so i thought i better create a tar ball...

> >
> > same goes for you Damon?
> >
> > cheers,
> > pete.
> >
> 
> Damon has joined the project. Do you want to get a berlios account and
> join too Torben? Svn is a big step up on tarballs.

i am torbenh on berlios.

> 
> Loki
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From torbenh at gmx.de  Mon Jul  9 23:37:38 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Mon, 9 Jul 2007 23:37:38 +0200
Subject: [Phat-dev] glade support committed
In-Reply-To: <1183898554.5942.3.camel@majesterium>
References: <1183882681.26172.11.camel@majesterium>
	<3c808a150707080400q548004an30ce9dfe2a4a973@mail.gmail.com>
	<1183896289.32491.3.camel@majesterium>
	<1183898554.5942.3.camel@majesterium>
Message-ID: <20070709213738.GC23950@mobilat>

On Sun, Jul 08, 2007 at 01:42:34PM +0100, pete shorthose wrote:
> On Sun, 2007-07-08 at 13:04 +0100, pete shorthose wrote:
> > On Sun, 2007-07-08 at 13:00 +0200, Marc-Olivier Barre wrote:
> > > On 7/8/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > > i finally got around to adding that basic glade support to trunk.
> > > > sorry for the delay.
> > > >
> > > > things seem to be moving at a pace otherwise :)
> > > > more in a bit after i appraise myself of developments.
> > > >
> > > > cheers,
> > > > pete.
> > > 
> > > Something seems to be missing here :
> > > 
> > > make[2]: *** No rule to make target `glade-phat.c', needed by
> > > `libgladephat_la-glade-phat.lo'.  Stop.
> > > make[2]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
> > > make[1]: *** [all-recursive] Error 1
> > > make[1]: Leaving directory `/media/data/src/svn/phat/phat/glade-plugin'
> > > make: *** [all-recursive] Error 1
> > 
> > forgot to commit the (as yet) empty plugin sources.
> > 
> > touch /media/data/src/svn/phat/phat/glade-plugin/glade-phat{c,h}
> > 
> > should fix it for you in the interim. i'll commit them now though.
> > sorry about that.
> 
> the glade catalog file was missing too. i'm at a loss to explain that
> because i added the
> plugin dir recursively. 
> 
> it should be fine now. nothing glade related is done without
> --enable-glade-plugin and it builds and installs ok from a fresh trunk
> check out.

it does not install the glade icons for me.
which automake, autoconf version are you guys using ?



-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From loki.davison at gmail.com  Tue Jul 10 03:42:24 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Tue, 10 Jul 2007 11:42:24 +1000
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <20070709195638.GB26822@zhevny.com>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat> <1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<20070709192242.GA4145@charly.SWORD>
	<20070709195638.GB26822@zhevny.com>
Message-ID: <ec9314860707091842i333cca90k6f1be2c8f1e70c7f@mail.gmail.com>

On 7/10/07, Eric Dantan Rzewnicki <eric at zhevny.com> wrote:
> On Mon, Jul 09, 2007 at 09:22:43PM +0200, Thorsten Wilms wrote:
> > On Mon, Jul 09, 2007 at 02:48:34PM -0400, Eric Dantan Rzewnicki wrote:
> >
> > > Just chiming in again with another "me too" regarding fixing the
> > > ugliness of the fansliders. If we can't get it to look pretty I'm almost
> > > inclined to not use them in specimen anymore. I like the concept, but it
> > > just doesn't look good right now.
> > >
> > > Also, I've had a number of people suggest that it would be good to have
> > > them translucent so they don't obscure the gui bits over which they fan
> > > out. Functionally it doesn't matter, but I think it sort of makes users
> > > uncomfortable having this jagged opaque thing cover up other things.
> >
> > They were meant to be translucent starting from very early concepts.
> > Seen http://thorwil.wordpress.com/2007/05/01/fan-sliders/ ?
> > And since I'm at it:
> > http://thorwil.wordpress.com/2007/05/01/sliders-with-text/
> > :)
>
> hmm... yes. good. So, what does it take to make translucency happen (to
> the coders, not thorwil)?
>
> And to thorsten regarding sliders-with-text: I like the added
> information density. Have you tried a mockup with the colored value bar
> more like the mercury in a thermometer? i.e. not taking up the full
> width. I wonder if that would help with the slight sense of visual
> clutter ...
>
> I think 6 and 11 look best to me on first glance.
>
> -Eric Rz.

I'm on this now. It looks easy with x composite but i'm wondering if
getting everyone to run a compositing window manager is a raising the
bar a little too high. There a few other ways to work around it so
we'll try them too.

Loki


From t_w_ at freenet.de  Tue Jul 10 09:28:33 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Tue, 10 Jul 2007 09:28:33 +0200
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <1184012393.3257.4.camel@localhost.localdomain>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
Message-ID: <20070710072833.GA4109@charly.SWORD>

On Mon, Jul 09, 2007 at 09:19:53PM +0100, Damon Chaplin wrote:
> 
> I think we should just use normal sliders that become much more
> sensitive if you hold down a modifier key, e.g. Shift. I think Reason
> does that.

That's not exactly discoverable.
I'm not exactly happy about your bringing up Reason as model for 
everything.


> Even if the display issues of FanSliders were sorted out, I'm afraid I
> don't really find them easy to use (they're a bit too weird!).

I'm sure you gave them more than 2 minutes ... not.
A 60+ years old profeesor on my university had no problems with them 
on my demonstration.


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From t_w_ at freenet.de  Tue Jul 10 09:31:03 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Tue, 10 Jul 2007 09:31:03 +0200
Subject: [Phat-dev] debian packages
In-Reply-To: <20070709201855.GC26822@zhevny.com>
References: <20070709201855.GC26822@zhevny.com>
Message-ID: <20070710073103.GB4109@charly.SWORD>

On Mon, Jul 09, 2007 at 04:18:56PM -0400, Eric Dantan Rzewnicki wrote:
> 
> Do you know of anyone working on debs for debian-derived distros?

Ubuntustudio perhaps?


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From zenadsl6252 at zen.co.uk  Tue Jul 10 09:31:32 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 08:31:32 +0100
Subject: [Phat-dev] glade support committed
In-Reply-To: <20070709213738.GC23950@mobilat>
References: <1183882681.26172.11.camel@majesterium>
	<3c808a150707080400q548004an30ce9dfe2a4a973@mail.gmail.com>
	<1183896289.32491.3.camel@majesterium>
	<1183898554.5942.3.camel@majesterium> <20070709213738.GC23950@mobilat>
Message-ID: <1184052692.6005.19.camel@majesterium>

On Mon, 2007-07-09 at 23:37 +0200, torbenh at gmx.de wrote:
> On Sun, Jul 08, 2007 at 01:42:34PM +0100, pete shorthose wrote:
> > On Sun, 2007-07-08 at 13:04 +0100, pete shorthose wrote:
> > > On Sun, 2007-07-08 at 13:00 +0200, Marc-Olivier Barre wrote:
> > > > On 7/8/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:

> > it should be fine now. nothing glade related is done without
> > --enable-glade-plugin and it builds and installs ok from a fresh trunk
> > check out.
> 
> it does not install the glade icons for me.
> which automake, autoconf version are you guys using ?

meh, sorry this is my fault again. this worked initially and so the
files 
exist already and i didn't notice that subsequent changes caused
"make install" to stop processing at the glade-plugin/ level.
  
looking at the Makefile.am in that dir, i added an explicit make rule to
install only the libgladephat.so library (not the la and a files) and
the catalog.
perhaps this stops subdir processing.

i'm not that familiar with automake and having tried several things to
get it to
work, i'll just revert to installing the libtool and static libs too.
this won't 
interfere with the icon subdir installation. 

that is unless one of you guys knows the magic automake juju to get 
both to work?

pete.




From zenadsl6252 at zen.co.uk  Tue Jul 10 09:42:19 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 08:42:19 +0100
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <20070709211703.GB23950@mobilat>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat> <1183975928.18919.6.camel@majesterium>
	<ec9314860707090619m4d08b8balc9302123b631db52@mail.gmail.com>
	<20070709211703.GB23950@mobilat>
Message-ID: <1184053339.6005.28.camel@majesterium>

On Mon, 2007-07-09 at 23:17 +0200, torbenh at gmx.de wrote:
> On Mon, Jul 09, 2007 at 11:19:12PM +1000, Loki Davison wrote:
> > On 7/9/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > On Fri, 2007-07-06 at 21:41 +0200, torbenh at gmx.de wrote:

> > > tarballs are great for testing, not so much for merging. i dunno if
> > > you've spoken to loki about this but are you intending to work on
> > > phat directly? (ie: join the project) or did you want one of us to
> > > merge in particular changes from your tarball?
> 
> well..  i did not find out how to let patch create new files.
> i had to touch all new files before your patch played nicely with me.

same here, though without the binary pngs, it wasn't a full patch 
anyway, so i ignored it.
still non the wiser about that. i just used
svn diff > blah.diff

pete.



From mobarre at gmail.com  Tue Jul 10 11:14:00 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Tue, 10 Jul 2007 11:14:00 +0200
Subject: [Phat-dev] knob-keyboard functionality
In-Reply-To: <20070709171252.GN31740@zhevny.com>
References: <467F663B.3050701@lumin.us>
	<1182765038.31395.116.camel@majesterium>
	<20070709171252.GN31740@zhevny.com>
Message-ID: <3c808a150707100214u3faf29faw66a8f39510e351e7@mail.gmail.com>

On 7/9/07, Eric Dantan Rzewnicki <eric at zhevny.com> wrote:
> On Mon, Jun 25, 2007 at 10:50:38AM +0100, pete shorthose wrote:
> > On Mon, 2007-06-25 at 01:52 -0500, Mark Rivera wrote:
> > > Speaking of knobs, it'd be cool if after you clicked on a knob (i.e., it
> > > had focus), it would be possible to use the arrow keys on the keyboard
> > > to adjust the value. Up and Right would mean ++, and Down and Left would
> > > mean --. Shift+arrow could mean some developer-specified value like +=10
> > > or -=10. This would be great for end-users who don't want to fine-tune
> > > knob values using the mouse, or in situations where the end-user is
> > > setting up a synth patch or something by tabbing through all the knobs.
> >
> > yeah, good idea.
> >
> > we are hoping to provide some sort of customisable mapping between
> > control methods and input events. if we provide sane defaults then
> > there should be a measure of consistency as most developers or users
> > wouldn't need to change them, but at the same time, they have
> > flexibility
> > to do so if they really want.
> >
> > it occurs to me that i don't think we outline or otherwise highlight the
> > active knob though. i'll have to check that.
>
> Hi, just letting my presence here be known. And chiming in on this just
> to say I want specimen to be controllable from the keyboard as much as
> possible as I personally hate mice, too. I haven't really thought
> through any specific ideas about keyboard mapping, yet. So, nothing more
> constructive to add than a vague sort of votes++ for the general
> concept.

Why not be able to map keyboard keys like most apps do for midi
controllers ? some Ctrl-RightMouseButton on the control, then touch or
move what ever you like on the keyboard or the midi controller to
assign it. This would work...

But the question is, is this meant to be developed in Phat or in the
application using it ?
__________________
Marc-Olivier Barre.


From zenadsl6252 at zen.co.uk  Tue Jul 10 12:57:55 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 11:57:55 +0100
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <20070710072833.GA4109@charly.SWORD>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium> <20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium> <20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
Message-ID: <1184065075.22023.37.camel@majesterium>

On Tue, 2007-07-10 at 09:28 +0200, Thorsten Wilms wrote:
> On Mon, Jul 09, 2007 at 09:19:53PM +0100, Damon Chaplin wrote:
> > 
> > I think we should just use normal sliders that become much more
> > sensitive if you hold down a modifier key, e.g. Shift. I think Reason
> > does that.
> 
> That's not exactly discoverable.

unless you read documentation. i'm all in favour of intuitive methods
but
not to the exclusion of everything else.

> I'm not exactly happy about your bringing up Reason as model for 
> everything.

because? (seriously)

> > Even if the display issues of FanSliders were sorted out, I'm afraid I
> > don't really find them easy to use (they're a bit too weird!).
> 
> I'm sure you gave them more than 2 minutes ... not.
> A 60+ years old profeesor on my university had no problems with them 
> on my demonstration.

the fanslider has no counterpart in reality. this makes it literally
counter
intuitive regardless of how effectively it solves the problems it was
designed for.

many people, myself included will be disinclined to use it for simple
reasons of comfort and familiarity. you can resent that all you like but
it is nevertheless a factor.
it's also true that the dual axis control makes it harder to modulate
consistently with the mouse, and while you can lock the axis with
key mods (iirc), as you said above, "That's not exactly discoverable."
i hate being required to do so anyway. (i'd rather dual axis
mode be secondary, for precision editing). but that's just me.

on the bright side, it might be possible to seamlessly switch between
fansliders and other slider varieties via global phat settings (for the
native widgets at least).

if so, then nobody gets locked into one type or the other and you can
evangelise the benefits of the fanslider without fear of developer
prejudice. at least, please don't mistake disinterest in the fanslider,
for opposition to it's existence.

pete.



From t_w_ at freenet.de  Tue Jul 10 13:24:44 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Tue, 10 Jul 2007 13:24:44 +0200
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <1184065075.22023.37.camel@majesterium>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<1184065075.22023.37.camel@majesterium>
Message-ID: <20070710112444.GD4109@charly.SWORD>

On Tue, Jul 10, 2007 at 11:57:55AM +0100, pete shorthose wrote:

> > I'm not exactly happy about your bringing up Reason as model for 
> > everything.
> 
> because? (seriously)

Because of the fake hardware aspect and because having more sources 
of inspirtaion is better than having less :)

I'm all for using metaphors and giving a sense of "touchability" and 
weight, but only where it can be done without imposing unecessary 
restrictions. I'm opposed to rule out more abstract UI elements.

I must puke if I see pseudo LC displays (simulating a lower 
resolution, less readable characters and often bad contrast) and 
gigantic type labels FOOSYNTH 2000 (wasting space and being 
distracting).

 
> > > Even if the display issues of FanSliders were sorted out, I'm afraid I
> > > don't really find them easy to use (they're a bit too weird!).
> > 
> > I'm sure you gave them more than 2 minutes ... not.
> > A 60+ years old profeesor on my university had no problems with them 
> > on my demonstration.
> 
> the fanslider has no counterpart in reality. this makes it literally
> counter
> intuitive regardless of how effectively it solves the problems it was
> designed for.

Menus and comboboxes hardly have real counterparts either and virtually 
noone complains.

I know we disagree on the worth of real-worldness and on the right balance 
between choice and making decisions for the user, so lets not pull all that 
up again as it leads nowhere.


> if so, then nobody gets locked into one type or the other and you can
> evangelise the benefits of the fanslider without fear of developer
> prejudice. at least, please don't mistake disinterest in the fanslider,
> for opposition to it's existence.

The original mail I replied to came very close to opposition to its 
existence.


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From zenadsl6252 at zen.co.uk  Tue Jul 10 13:25:44 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 12:25:44 +0100
Subject: [Phat-dev] some additional ideas for phat
Message-ID: <1184066744.23642.22.camel@majesterium>

backing store:

i've just been working on a patch to phasex that 
enables backing store. this limits expose events
to those triggered by resizing or application directed
updates. (well, nearly)

phasex has almost 100 knob widgets and hundreds
of native gtk widgets optionally spread over two
pages. as a result, the time it takes to redraw occluded
areas or when maximising from a minimised state
can be significant. apart from the cost of redrawing
everything, it looks damned ugly as all the widgets
slowly reassemble themselves on screen. bar some 
kind of 2D acceleration, this seems to be the only
way to mitigate the problem.

to make use of it you are required to enable backing store
(and that means editing your X conf) and trades
increased memory usage for a lighter CPU load.
is anyone interested in seeing this available in phat?

charset animation:

i just thought of another use for the animation object.
rendered text characters could be stored in an animation
with frames representing letters of the alphabet and
other characters.

pre rendered text is almost certainly faster than pango
antialiased text, avoids the alignment problems
associated with static pixmap interfaces and dynamic
text, opens the way for some degree of internationalised
eye candy and looks better. all we'd need is a text
widget to render strings based on a given animation
object.

pete.



From t_w_ at freenet.de  Tue Jul 10 13:34:48 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Tue, 10 Jul 2007 13:34:48 +0200
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184066744.23642.22.camel@majesterium>
References: <1184066744.23642.22.camel@majesterium>
Message-ID: <20070710113448.GE4109@charly.SWORD>

On Tue, Jul 10, 2007 at 12:25:44PM +0100, pete shorthose wrote:

> backing store:

 
> to make use of it you are required to enable backing store
> (and that means editing your X conf) and trades
> increased memory usage for a lighter CPU load.
> is anyone interested in seeing this available in phat?

I guess my RAM here is less stressed than CPU when making music, 
so it would make sense. But if editing X conf  is required, we'd 
have a user education or a "getting the distros to do it" problem.

How does it relate to compositing?


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From zenadsl6252 at zen.co.uk  Tue Jul 10 14:00:15 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 13:00:15 +0100
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <20070710113448.GE4109@charly.SWORD>
References: <1184066744.23642.22.camel@majesterium>
	<20070710113448.GE4109@charly.SWORD>
Message-ID: <1184068815.23642.48.camel@majesterium>

On Tue, 2007-07-10 at 13:34 +0200, Thorsten Wilms wrote:
> On Tue, Jul 10, 2007 at 12:25:44PM +0100, pete shorthose wrote:
> 
> > backing store:
> 
>  
> > to make use of it you are required to enable backing store
> > (and that means editing your X conf) and trades
> > increased memory usage for a lighter CPU load.
> > is anyone interested in seeing this available in phat?
> 
> I guess my RAM here is less stressed than CPU when making music, 
> so it would make sense. But if editing X conf  is required, we'd 
> have a user education or a "getting the distros to do it" problem.

very true. but looking at it another way, we have a "possible solution
vs no solution" situation. bar any unforeseen problems (which
should be negated by making it a run time option) it should make
the user experience much better and improve performance,
particularly when using large interfaces and or complex interfaces.

notes about enabling backing store could be included with phat
and we could encourage developers of client applications to
do the same. dedicated audio distros may be open to shipping
with backing store enabled by default. can't hurt to ask anyway.

> How does it relate to compositing?

as far as my limited knowledge of compositing stretches, there's
no relation. the X server is simply instructed to keep a copy
of the window contents and to update it itself
rather than ask the toolkit to redraw the window via an 
expose event. (hence the additional memory)

pete.







From torbenh at gmx.de  Tue Jul 10 14:10:36 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Tue, 10 Jul 2007 14:10:36 +0200
Subject: [Phat-dev] glade support committed
In-Reply-To: <1184052692.6005.19.camel@majesterium>
References: <1183882681.26172.11.camel@majesterium>
	<3c808a150707080400q548004an30ce9dfe2a4a973@mail.gmail.com>
	<1183896289.32491.3.camel@majesterium>
	<1183898554.5942.3.camel@majesterium>
	<20070709213738.GC23950@mobilat>
	<1184052692.6005.19.camel@majesterium>
Message-ID: <20070710121036.GD23950@mobilat>

On Tue, Jul 10, 2007 at 08:31:32AM +0100, pete shorthose wrote:
> On Mon, 2007-07-09 at 23:37 +0200, torbenh at gmx.de wrote:
> > On Sun, Jul 08, 2007 at 01:42:34PM +0100, pete shorthose wrote:
> > > On Sun, 2007-07-08 at 13:04 +0100, pete shorthose wrote:
> > > > On Sun, 2007-07-08 at 13:00 +0200, Marc-Olivier Barre wrote:
> > > > > On 7/8/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> 
> > > it should be fine now. nothing glade related is done without
> > > --enable-glade-plugin and it builds and installs ok from a fresh trunk
> > > check out.
> > 
> > it does not install the glade icons for me.
> > which automake, autoconf version are you guys using ?
> 
> meh, sorry this is my fault again. this worked initially and so the
> files 
> exist already and i didn't notice that subsequent changes caused
> "make install" to stop processing at the glade-plugin/ level.
>   
> looking at the Makefile.am in that dir, i added an explicit make rule to
> install only the libgladephat.so library (not the la and a files) and
> the catalog.
> perhaps this stops subdir processing.
> 
> i'm not that familiar with automake and having tried several things to
> get it to
> work, i'll just revert to installing the libtool and static libs too.
> this won't 
> interfere with the icon subdir installation. 
> 
> that is unless one of you guys knows the magic automake juju to get 
> both to work?

i made it work. its in the tarball i posted.
seems to have somthing todo with the order of statements in the
Makefile.am not really sure yet.

i also changed the name of the directory icons to pixmaps...

> 
> pete.
> 
> 
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From torbenh at gmx.de  Tue Jul 10 14:18:18 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Tue, 10 Jul 2007 14:18:18 +0200
Subject: [Phat-dev] knob-keyboard functionality
In-Reply-To: <3c808a150707100214u3faf29faw66a8f39510e351e7@mail.gmail.com>
References: <467F663B.3050701@lumin.us>
	<1182765038.31395.116.camel@majesterium>
	<20070709171252.GN31740@zhevny.com>
	<3c808a150707100214u3faf29faw66a8f39510e351e7@mail.gmail.com>
Message-ID: <20070710121818.GE23950@mobilat>

On Tue, Jul 10, 2007 at 11:14:00AM +0200, Marc-Olivier Barre wrote:
> On 7/9/07, Eric Dantan Rzewnicki <eric at zhevny.com> wrote:
> > On Mon, Jun 25, 2007 at 10:50:38AM +0100, pete shorthose wrote:
> > > On Mon, 2007-06-25 at 01:52 -0500, Mark Rivera wrote:
> > > > Speaking of knobs, it'd be cool if after you clicked on a knob (i.e., it
> > > > had focus), it would be possible to use the arrow keys on the keyboard
> > > > to adjust the value. Up and Right would mean ++, and Down and Left would
> > > > mean --. Shift+arrow could mean some developer-specified value like +=10
> > > > or -=10. This would be great for end-users who don't want to fine-tune
> > > > knob values using the mouse, or in situations where the end-user is
> > > > setting up a synth patch or something by tabbing through all the knobs.
> > >
> > > yeah, good idea.
> > >
> > > we are hoping to provide some sort of customisable mapping between
> > > control methods and input events. if we provide sane defaults then
> > > there should be a measure of consistency as most developers or users
> > > wouldn't need to change them, but at the same time, they have
> > > flexibility
> > > to do so if they really want.
> > >
> > > it occurs to me that i don't think we outline or otherwise highlight the
> > > active knob though. i'll have to check that.
> >
> > Hi, just letting my presence here be known. And chiming in on this just
> > to say I want specimen to be controllable from the keyboard as much as
> > possible as I personally hate mice, too. I haven't really thought
> > through any specific ideas about keyboard mapping, yet. So, nothing more
> > constructive to add than a vague sort of votes++ for the general
> > concept.
> 
> Why not be able to map keyboard keys like most apps do for midi
> controllers ? some Ctrl-RightMouseButton on the control, then touch or
> move what ever you like on the keyboard or the midi controller to
> assign it. This would work...
> 
> But the question is, is this meant to be developed in Phat or in the
> application using it ?

i think this SHOULD be a feature of phat.
but getting jack-midi and alsa-seq data into phat is the problem here.

i am not sure how we should deal with this.

note that from jack-midi the midi data is seen in RT thread. And needs
to be communicated to the outside.

i will have a go on writing an RT compatible GtkAdjustment.
(ie. polls a float for changes)
this thing can then be connected to a plugin output or input.



> __________________
> Marc-Olivier Barre.
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From torbenh at gmx.de  Tue Jul 10 14:25:52 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Tue, 10 Jul 2007 14:25:52 +0200
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184066744.23642.22.camel@majesterium>
References: <1184066744.23642.22.camel@majesterium>
Message-ID: <20070710122552.GF23950@mobilat>

On Tue, Jul 10, 2007 at 12:25:44PM +0100, pete shorthose wrote:
> backing store:
> 
> i've just been working on a patch to phasex that 
> enables backing store. this limits expose events
> to those triggered by resizing or application directed
> updates. (well, nearly)
> 
> phasex has almost 100 knob widgets and hundreds
> of native gtk widgets optionally spread over two
> pages. as a result, the time it takes to redraw occluded
> areas or when maximising from a minimised state
> can be significant. apart from the cost of redrawing
> everything, it looks damned ugly as all the widgets
> slowly reassemble themselves on screen. bar some 
> kind of 2D acceleration, this seems to be the only
> way to mitigate the problem.
> 
> to make use of it you are required to enable backing store
> (and that means editing your X conf) and trades
> increased memory usage for a lighter CPU load.
> is anyone interested in seeing this available in phat?

i am not sure. i think the problem can be avoided if you add some
GtkEventBox into your widget tree.

GtkEventBox has its own XWindow so the expose events can be done inside
the X server. i am not sure how this all relates to backing store.
i thought it was on by default...


-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From torbenh at gmx.de  Tue Jul 10 14:30:32 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Tue, 10 Jul 2007 14:30:32 +0200
Subject: [Phat-dev] LV2 tree store
Message-ID: <20070710123032.GG23950@mobilat>


i started to write a GtkTreeStore which fills itself with
all LV2 plugin classes it finds.

this would add a dependency to libslv2 but i think this is the right
direction. as the time of standalone jack-clients has nearly ended :P


comments ?

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From zenadsl6252 at zen.co.uk  Tue Jul 10 14:30:24 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 13:30:24 +0100
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <20070710122552.GF23950@mobilat>
References: <1184066744.23642.22.camel@majesterium>
	<20070710122552.GF23950@mobilat>
Message-ID: <1184070624.23642.72.camel@majesterium>

On Tue, 2007-07-10 at 14:25 +0200, torbenh at gmx.de wrote:
> On Tue, Jul 10, 2007 at 12:25:44PM +0100, pete shorthose wrote:

> > to make use of it you are required to enable backing store
> > (and that means editing your X conf) and trades
> > increased memory usage for a lighter CPU load.
> > is anyone interested in seeing this available in phat?
> 
> i am not sure. i think the problem can be avoided if you add some
> GtkEventBox into your widget tree.
> 
> GtkEventBox has its own XWindow so the expose events can be done inside
> the X server. i am not sure how this all relates to backing store.
> i thought it was on by default...

all i know of the event box is that it's a surrogate window used to trap
events for widgets that don't have windows, i'm not aware of
any other special properties but then i'm no expert on gtk or X windows.

Damon, any idea about this?

as for backing store generally, i have it enabled and all the widgets
i've tested still receive incidental expose events until i explicitly
enable 
backing store on the widget window. at which point, events are only
automatically generated when mapping or resizing a window. 

pete.



From zenadsl6252 at zen.co.uk  Tue Jul 10 14:42:05 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 13:42:05 +0100
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <20070710123032.GG23950@mobilat>
References: <20070710123032.GG23950@mobilat>
Message-ID: <1184071325.23642.86.camel@majesterium>

On Tue, 2007-07-10 at 14:30 +0200, torbenh at gmx.de wrote:
> i started to write a GtkTreeStore which fills itself with
> all LV2 plugin classes it finds.
> 
> this would add a dependency to libslv2 but i think this is the right
> direction. as the time of standalone jack-clients has nearly ended :P
> 
> 
> comments ?

yikes. clearly we will need some bindings and convenience
stuff for things like lv2, but i think they should come in the
form of optional modules or broken out into convenience
libraries. 
(which could be maintained and distributed along side phat)

the dependency burdon is going to go batshit nuts if we
start adding in poorly distributed or rapidly developing libraries.
and that causes problems for distro maintainers and may
limit uptake (and thus the viability of phat as a whole)

consider the glade plugin. it's not required. this means that
someone can use phat as a simple widget library and write
their own higher level stuff or what ever back end they need.

we risk drastically reducing the appeal of phat as a general
widget library if we start welding it to a bunch of stuff that
some people either don't need or want to provide their own
solutions for.

pete.



From loki.davison at gmail.com  Tue Jul 10 15:02:29 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Tue, 10 Jul 2007 23:02:29 +1000
Subject: [Phat-dev] Knob requirements, ardour slider
Message-ID: <ec9314860707100602y296a9cbdj611a3fe5691f3fca@mail.gmail.com>

On 7/8/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
> On Mon, Jul 02, 2007 at 11:14:01AM +0100, Damon Chaplin wrote:
> >
> > > Porting Thorsten's ardour slider to phat is also higher on the todo i
> > > think.
> >
> > I could have a look at that as well, if Thorsten is busy. Where is the
> > code in ardour?
>
> (Lost internet connection for a few days).
>
> I designed them, Pauls Davis (las in #ardour) did the implemenation.
> No clue on the code side ;)
>

I'm nearly done with porting the ardour slider, just a little bit to
go. Need to discuss some api questions tomorrow though. Pretty easy to
port despite my very rusty C++ skills.

Loki


From loki.davison at gmail.com  Tue Jul 10 15:08:21 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Tue, 10 Jul 2007 23:08:21 +1000
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <1184071325.23642.86.camel@majesterium>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
Message-ID: <ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>

On 7/10/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> On Tue, 2007-07-10 at 14:30 +0200, torbenh at gmx.de wrote:
> > i started to write a GtkTreeStore which fills itself with
> > all LV2 plugin classes it finds.
> >
> > this would add a dependency to libslv2 but i think this is the right
> > direction. as the time of standalone jack-clients has nearly ended :P
> >
> >
> > comments ?
>
> yikes. clearly we will need some bindings and convenience
> stuff for things like lv2, but i think they should come in the
> form of optional modules or broken out into convenience
> libraries.
> (which could be maintained and distributed along side phat)
>
> the dependency burdon is going to go batshit nuts if we
> start adding in poorly distributed or rapidly developing libraries.
> and that causes problems for distro maintainers and may
> limit uptake (and thus the viability of phat as a whole)
>
> consider the glade plugin. it's not required. this means that
> someone can use phat as a simple widget library and write
> their own higher level stuff or what ever back end they need.
>
> we risk drastically reducing the appeal of phat as a general
> widget library if we start welding it to a bunch of stuff that
> some people either don't need or want to provide their own
> solutions for.
>
> pete.
>

This sounds interesting. Have you looked at Dave's code in Ingen for
this stuff? Either way, sound very useful to have, as does an lv2
plugin selector.  However this should be in a optional subdirectory
same as the glade stuff. When building packages you should have
generated phat, pyphat, phat-glade and phat-lv2, and anything else we
work out! ;)

Loki


From loki.davison at gmail.com  Tue Jul 10 15:11:04 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Tue, 10 Jul 2007 23:11:04 +1000
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184066744.23642.22.camel@majesterium>
References: <1184066744.23642.22.camel@majesterium>
Message-ID: <ec9314860707100611g47074c7bn5bb0a336cdf4519@mail.gmail.com>

On 7/10/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> backing store:
>
> i've just been working on a patch to phasex that
> enables backing store. this limits expose events
> to those triggered by resizing or application directed
> updates. (well, nearly)
>
> phasex has almost 100 knob widgets and hundreds
> of native gtk widgets optionally spread over two
> pages. as a result, the time it takes to redraw occluded
> areas or when maximising from a minimised state
> can be significant. apart from the cost of redrawing
> everything, it looks damned ugly as all the widgets
> slowly reassemble themselves on screen. bar some
> kind of 2D acceleration, this seems to be the only
> way to mitigate the problem.
>
> to make use of it you are required to enable backing store
> (and that means editing your X conf) and trades
> increased memory usage for a lighter CPU load.
> is anyone interested in seeing this available in phat?
>
> charset animation:
>
> i just thought of another use for the animation object.
> rendered text characters could be stored in an animation
> with frames representing letters of the alphabet and
> other characters.
>
> pre rendered text is almost certainly faster than pango
> antialiased text, avoids the alignment problems
> associated with static pixmap interfaces and dynamic
> text, opens the way for some degree of internationalised
> eye candy and looks better. all we'd need is a text
> widget to render strings based on a given animation
> object.
>
> pete.
>
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev
>

This sounds handy too, though i'd be really unsure about the text
stuff, simply because i know bugger all about it.

Loki


From loki.davison at gmail.com  Tue Jul 10 15:30:44 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Tue, 10 Jul 2007 23:30:44 +1000
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <20070710112444.GD4109@charly.SWORD>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<20070627042809.GA6562@mobilat> <1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<1184065075.22023.37.camel@majesterium>
	<20070710112444.GD4109@charly.SWORD>
Message-ID: <ec9314860707100630t5dc8e741r4eafb6bd6b065a77@mail.gmail.com>

On 7/10/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
> On Tue, Jul 10, 2007 at 11:57:55AM +0100, pete shorthose wrote:
>
> > > I'm not exactly happy about your bringing up Reason as model for
> > > everything.
> >
> > because? (seriously)
>
> Because of the fake hardware aspect and because having more sources
> of inspirtaion is better than having less :)
>
> I'm all for using metaphors and giving a sense of "touchability" and
> weight, but only where it can be done without imposing unecessary
> restrictions. I'm opposed to rule out more abstract UI elements.
>
> I must puke if I see pseudo LC displays (simulating a lower
> resolution, less readable characters and often bad contrast) and
> gigantic type labels FOOSYNTH 2000 (wasting space and being
> distracting).
>
>
> > > > Even if the display issues of FanSliders were sorted out, I'm afraid I
> > > > don't really find them easy to use (they're a bit too weird!).
> > >
> > > I'm sure you gave them more than 2 minutes ... not.
> > > A 60+ years old profeesor on my university had no problems with them
> > > on my demonstration.
> >
> > the fanslider has no counterpart in reality. this makes it literally
> > counter
> > intuitive regardless of how effectively it solves the problems it was
> > designed for.
>
> Menus and comboboxes hardly have real counterparts either and virtually
> noone complains.
>
> I know we disagree on the worth of real-worldness and on the right balance
> between choice and making decisions for the user, so lets not pull all that
> up again as it leads nowhere.
>
>
> > if so, then nobody gets locked into one type or the other and you can
> > evangelise the benefits of the fanslider without fear of developer
> > prejudice. at least, please don't mistake disinterest in the fanslider,
> > for opposition to it's existence.
>
> The original mail I replied to came very close to opposition to its
> existence.
>
>
> --
> Thorsten Wilms
>
> Thorwil's Design for Free Software:
> http://thorwil.wordpress.com
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev
>


I can cope with both so lets do both. My most loved option would be to
make everything look as much like lemur as possible
http://www.jazzmutant.com/lemur_overview.php I just love that fluro +
alpha/aliasing look ;)

Loki


From damon at karuna.eclipse.co.uk  Tue Jul 10 16:38:56 2007
From: damon at karuna.eclipse.co.uk (Damon Chaplin)
Date: Tue, 10 Jul 2007 15:38:56 +0100
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184070624.23642.72.camel@majesterium>
References: <1184066744.23642.22.camel@majesterium>
	<20070710122552.GF23950@mobilat>
	<1184070624.23642.72.camel@majesterium>
Message-ID: <1184078336.3246.16.camel@localhost.localdomain>

On Tue, 2007-07-10 at 13:30 +0100, pete shorthose wrote:
> On Tue, 2007-07-10 at 14:25 +0200, torbenh at gmx.de wrote:
> > On Tue, Jul 10, 2007 at 12:25:44PM +0100, pete shorthose wrote:
> 
> > > to make use of it you are required to enable backing store
> > > (and that means editing your X conf) and trades
> > > increased memory usage for a lighter CPU load.
> > > is anyone interested in seeing this available in phat?
> > 
> > i am not sure. i think the problem can be avoided if you add some
> > GtkEventBox into your widget tree.
> > 
> > GtkEventBox has its own XWindow so the expose events can be done inside
> > the X server. i am not sure how this all relates to backing store.
> > i thought it was on by default...
> 
> all i know of the event box is that it's a surrogate window used to trap
> events for widgets that don't have windows, i'm not aware of
> any other special properties but then i'm no expert on gtk or X windows.
> 
> Damon, any idea about this?

I've just tried using a GtkEventBox on each notebook page and it does
help quite a bit. Since GtkEventBox has its own X window it makes X
clear the entire notebook page background before starting the redraw so
it looks a lot cleaner.

I also noticed that the knob code is using a new GdkPixbuf for each
knob. It should create one and share it for the whole class. That may
help a little.

Maybe with a bit more optimization it will be OK without resorting to
unusual stuff like backing store. (I can't quite understand why it is so
slow at present. Someone should try running it under sysprof to see what
it is doing.)

Damon




From damon at karuna.eclipse.co.uk  Tue Jul 10 17:13:39 2007
From: damon at karuna.eclipse.co.uk (Damon Chaplin)
Date: Tue, 10 Jul 2007 16:13:39 +0100
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184078336.3246.16.camel@localhost.localdomain>
References: <1184066744.23642.22.camel@majesterium>
	<20070710122552.GF23950@mobilat>
	<1184070624.23642.72.camel@majesterium>
	<1184078336.3246.16.camel@localhost.localdomain>
Message-ID: <1184080419.3246.21.camel@localhost.localdomain>

On Tue, 2007-07-10 at 15:38 +0100, Damon Chaplin wrote:

> Maybe with a bit more optimization it will be OK without resorting to
> unusual stuff like backing store. (I can't quite understand why it is so
> slow at present. Someone should try running it under sysprof to see what
> it is doing.)

I've just tried phasex with more recent GNOME/cairo libraries, using the
standard GTK+ theme, and GtkEventBoxes for each notebook page. The page
switches are much, much better - quite acceptable.

My theme (ClearLooks) seemed to cause quite a bit of the slowness. I
think the newer cairo is quicker so that may have helped as well.

Damon




From mobarre at gmail.com  Tue Jul 10 17:24:37 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Tue, 10 Jul 2007 17:24:37 +0200
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <ec9314860707100630t5dc8e741r4eafb6bd6b065a77@mail.gmail.com>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182938427.7455.73.camel@majesterium> <20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<1184065075.22023.37.camel@majesterium>
	<20070710112444.GD4109@charly.SWORD>
	<ec9314860707100630t5dc8e741r4eafb6bd6b065a77@mail.gmail.com>
Message-ID: <3c808a150707100824o48fa4cbes15ede7ad9e874e1f@mail.gmail.com>

On 7/10/07, Loki Davison <loki.davison at gmail.com> wrote:
> I can cope with both so lets do both. My most loved option would be to
> make everything look as much like lemur as possible
> http://www.jazzmutant.com/lemur_overview.php I just love that fluro +
> alpha/aliasing look ;)

It's a damn shame that this little beast is not open... I'd love to
build interfaces for it using phat widgets to control some LA
software...
__________________
Marc-Olivier Barre.


From zenadsl6252 at zen.co.uk  Tue Jul 10 17:46:44 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 16:46:44 +0100
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184078336.3246.16.camel@localhost.localdomain>
References: <1184066744.23642.22.camel@majesterium>
	<20070710122552.GF23950@mobilat>
	<1184070624.23642.72.camel@majesterium>
	<1184078336.3246.16.camel@localhost.localdomain>
Message-ID: <1184082404.23642.108.camel@majesterium>

On Tue, 2007-07-10 at 15:38 +0100, Damon Chaplin wrote:
> On Tue, 2007-07-10 at 13:30 +0100, pete shorthose wrote:
> > On Tue, 2007-07-10 at 14:25 +0200, torbenh at gmx.de wrote:
> > > On Tue, Jul 10, 2007 at 12:25:44PM +0100, pete shorthose wrote:
> > 
> > > > to make use of it you are required to enable backing store
> > > > (and that means editing your X conf) and trades
> > > > increased memory usage for a lighter CPU load.
> > > > is anyone interested in seeing this available in phat?
> > > 
> > > i am not sure. i think the problem can be avoided if you add some
> > > GtkEventBox into your widget tree.
> > > 
> > > GtkEventBox has its own XWindow so the expose events can be done inside
> > > the X server. i am not sure how this all relates to backing store.
> > > i thought it was on by default...
> > 
> > all i know of the event box is that it's a surrogate window used to trap
> > events for widgets that don't have windows, i'm not aware of
> > any other special properties but then i'm no expert on gtk or X windows.
> > 
> > Damon, any idea about this?
> 
> I've just tried using a GtkEventBox on each notebook page and it does
> help quite a bit. Since GtkEventBox has its own X window it makes X
> clear the entire notebook page background before starting the redraw so
> it looks a lot cleaner.

ok this is very useful as the tab switching wasn't aided by backing
store
(either because the page is unmapped when deactivated or because
a resize is queued when remapped. not sure which)
however, on my laptop, there is still a significant improvement in
redraw rates with backing store enabled. so i'm still in favour
as even if your system is fast enough so that you don't really notice,
the amount of spare cpu cycles available for audio processing
inevitably 
takes a hit when the window is occluded, tabs are switched or the window
is raised from being minimised.

i'll see about profiling it though. see if we can quantify the
improvement
for a given system. 

> I also noticed that the knob code is using a new GdkPixbuf for each
> knob. It should create one and share it for the whole class. That may
> help a little.

which version is that? recent versions of phasex saw the the animation
abstracted.
one animation is loaded globally and a reference is passed to each knob.

> Maybe with a bit more optimization it will be OK without resorting to
> unusual stuff like backing store. (I can't quite understand why it is so
> slow at present. Someone should try running it under sysprof to see what
> it is doing.)

my guess would be a combination of resizing (size negotiation), pango
(there's a lot of text on each page and pango is a cpu sponge) and
rendering each knob with
alpha. a sizable chunk of processing that is avoided by backing store.




From zenadsl6252 at zen.co.uk  Tue Jul 10 17:47:19 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 16:47:19 +0100
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184080419.3246.21.camel@localhost.localdomain>
References: <1184066744.23642.22.camel@majesterium>
	<20070710122552.GF23950@mobilat>
	<1184070624.23642.72.camel@majesterium>
	<1184078336.3246.16.camel@localhost.localdomain>
	<1184080419.3246.21.camel@localhost.localdomain>
Message-ID: <1184082439.23642.109.camel@majesterium>

On Tue, 2007-07-10 at 16:13 +0100, Damon Chaplin wrote:
> On Tue, 2007-07-10 at 15:38 +0100, Damon Chaplin wrote:
> 
> > Maybe with a bit more optimization it will be OK without resorting to
> > unusual stuff like backing store. (I can't quite understand why it is so
> > slow at present. Someone should try running it under sysprof to see what
> > it is doing.)
> 
> I've just tried phasex with more recent GNOME/cairo libraries, using the
> standard GTK+ theme, and GtkEventBoxes for each notebook page. The page
> switches are much, much better - quite acceptable.

which versions? (i'm running a stock ubuntu feisty)

> My theme (ClearLooks) seemed to cause quite a bit of the slowness. I
> think the newer cairo is quicker so that may have helped as well.
> 
> Damon

i tried with simple. 



From damon at karuna.eclipse.co.uk  Tue Jul 10 17:52:37 2007
From: damon at karuna.eclipse.co.uk (Damon Chaplin)
Date: Tue, 10 Jul 2007 16:52:37 +0100
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184078336.3246.16.camel@localhost.localdomain>
References: <1184066744.23642.22.camel@majesterium>
	<20070710122552.GF23950@mobilat>
	<1184070624.23642.72.camel@majesterium>
	<1184078336.3246.16.camel@localhost.localdomain>
Message-ID: <1184082757.3246.26.camel@localhost.localdomain>

On Tue, 2007-07-10 at 15:38 +0100, Damon Chaplin wrote:

> I also noticed that the knob code is using a new GdkPixbuf for each
> knob. It should create one and share it for the whole class. That may
> help a little.

Also, the png file should probably contain all the animation frames in a
vertical column rather than a horizontal row, so that all the bytes for
each frame are together.

Damon




From zenadsl6252 at zen.co.uk  Tue Jul 10 18:29:44 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 10 Jul 2007 17:29:44 +0100
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184082757.3246.26.camel@localhost.localdomain>
References: <1184066744.23642.22.camel@majesterium>
	<20070710122552.GF23950@mobilat>
	<1184070624.23642.72.camel@majesterium>
	<1184078336.3246.16.camel@localhost.localdomain>
	<1184082757.3246.26.camel@localhost.localdomain>
Message-ID: <1184084984.23642.128.camel@majesterium>

On Tue, 2007-07-10 at 16:52 +0100, Damon Chaplin wrote:
> On Tue, 2007-07-10 at 15:38 +0100, Damon Chaplin wrote:
> 
> > I also noticed that the knob code is using a new GdkPixbuf for each
> > knob. It should create one and share it for the whole class. That may
> > help a little.
> 
> Also, the png file should probably contain all the animation frames in a
> vertical column rather than a horizontal row, so that all the bytes for
> each frame are together.

easy enough to do. convert -append (instead of convert +append)
concatenates images from top to bottom (useful for dealing
with blender output which is normally in individual frames)
and then we just swap the axis in the code.

you reckon that'll be worth the effort? i'd be surprised to find that
it would even register a difference.

pete.



From damon at karuna.eclipse.co.uk  Tue Jul 10 18:19:05 2007
From: damon at karuna.eclipse.co.uk (Damon Chaplin)
Date: Tue, 10 Jul 2007 17:19:05 +0100
Subject: [Phat-dev] some additional ideas for phat
In-Reply-To: <1184082439.23642.109.camel@majesterium>
References: <1184066744.23642.22.camel@majesterium>
	<20070710122552.GF23950@mobilat>
	<1184070624.23642.72.camel@majesterium>
	<1184078336.3246.16.camel@localhost.localdomain>
	<1184080419.3246.21.camel@localhost.localdomain>
	<1184082439.23642.109.camel@majesterium>
Message-ID: <1184084345.3246.33.camel@localhost.localdomain>

On Tue, 2007-07-10 at 16:47 +0100, pete shorthose wrote:
> On Tue, 2007-07-10 at 16:13 +0100, Damon Chaplin wrote:
> > On Tue, 2007-07-10 at 15:38 +0100, Damon Chaplin wrote:
> > 
> > > Maybe with a bit more optimization it will be OK without resorting to
> > > unusual stuff like backing store. (I can't quite understand why it is so
> > > slow at present. Someone should try running it under sysprof to see what
> > > it is doing.)
> > 
> > I've just tried phasex with more recent GNOME/cairo libraries, using the
> > standard GTK+ theme, and GtkEventBoxes for each notebook page. The page
> > switches are much, much better - quite acceptable.
> 
> which versions? (i'm running a stock ubuntu feisty)

My development versions of GNOME 2.18, with cairo 1.4.2 I think, on a
3GHz Pentium.

You could try hiding certain types of widgets to see which ones are the
problem. Also maybe the knobs could be NO_WINDOW widgets to cut down on
all the X overhead (though I don't know how much that would help).

Damon




From loki.davison at gmail.com  Wed Jul 11 11:31:26 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Wed, 11 Jul 2007 19:31:26 +1000
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <20070710072833.GA4109@charly.SWORD>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat> <1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
Message-ID: <ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>

On 7/10/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
> On Mon, Jul 09, 2007 at 09:19:53PM +0100, Damon Chaplin wrote:
> >
> > I think we should just use normal sliders that become much more
> > sensitive if you hold down a modifier key, e.g. Shift. I think Reason
> > does that.
>
> That's not exactly discoverable.
> I'm not exactly happy about your bringing up Reason as model for
> everything.
>
>

I haven't actually used reason for more than 10 minutes and that was
last year, but after looking at a few pics on the net of the UI i
think it's what we're not aiming for. To me it looks very boring and
not pushing UI stuff except in really cheesy ways. Compairing the to
the  lemur UI i'd go the lemur every time. It is a handy to have a
basis that people might have experience with though. Reason just
doesn't look sexy enough for me! Need so translucent fluro antialiased
goodness.

Loki


From nedko at arnaudov.name  Wed Jul 11 12:12:01 2007
From: nedko at arnaudov.name (Nedko Arnaudov)
Date: Wed, 11 Jul 2007 13:12:01 +0300
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
	(Loki Davison's message of "Wed, 11 Jul 2007 19:31:26 +1000")
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat> <1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
Message-ID: <874pkbjlla.fsf@arnaudov.name>

"Loki Davison" <loki.davison at gmail.com> writes:

> On 7/10/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
>> On Mon, Jul 09, 2007 at 09:19:53PM +0100, Damon Chaplin wrote:
>> >
>> > I think we should just use normal sliders that become much more
>> > sensitive if you hold down a modifier key, e.g. Shift. I think Reason
>> > does that.
>>
>> That's not exactly discoverable.
>> I'm not exactly happy about your bringing up Reason as model for
>> everything.
>>
>>
>
> I haven't actually used reason for more than 10 minutes and that was
> last year, but after looking at a few pics on the net of the UI i
> think it's what we're not aiming for. To me it looks very boring and
> not pushing UI stuff except in really cheesy ways. Compairing the to
> the  lemur UI i'd go the lemur every time. It is a handy to have a
> basis that people might have experience with though. Reason just
> doesn't look sexy enough for me! Need so translucent fluro antialiased
> goodness.

IMHO we should give alternatives (for UI interaction point of view) to
developer but we should try to make API coherent. Also as Pete mentioned
in earlier mail, having global settings framework where user has the
power to control what widgets to use is very good approach. I have this
in zynjacku TODO (in local rather than global variant). After all we do
linux because it gives user control, no? Why would we like to take
control from user because it is "stupid" like it is in windows/macosx?
Having good defaults is good thing of course, but still, choosing
defaults should be left to packagers.

-- 
Nedko Arnaudov <GnuPG KeyID: DE1716B0>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/phat-dev/attachments/20070711/edad4733/attachment.pgp>

From t_w_ at freenet.de  Wed Jul 11 12:27:42 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Wed, 11 Jul 2007 12:27:42 +0200
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <874pkbjlla.fsf@arnaudov.name>
References: <1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
	<874pkbjlla.fsf@arnaudov.name>
Message-ID: <20070711102741.GA4128@charly.SWORD>

On Wed, Jul 11, 2007 at 01:12:01PM +0300, Nedko Arnaudov wrote:
> 
> IMHO we should give alternatives (for UI interaction point of view) to
> developer but we should try to make API coherent. Also as Pete mentioned
> in earlier mail, having global settings framework where user has the
> power to control what widgets to use is very good approach. I have this
> in zynjacku TODO (in local rather than global variant). After all we do
> linux because it gives user control, no? Why would we like to take
> control from user because it is "stupid" like it is in windows/macosx?
> Having good defaults is good thing of course, but still, choosing
> defaults should be left to packagers.

Giving options is OK, but can't be an excuse for not well thought out 
defaults. Especially as it is likely that people just stick with defaults, 
get used to them and later on wouldn't ever switch because of that.

I wouldn't trust in packagers making the right decisions, but you 
can't keep them from changing whatever they like, anyway.


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From zenadsl6252 at zen.co.uk  Wed Jul 11 13:10:33 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Wed, 11 Jul 2007 12:10:33 +0100
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <20070711102741.GA4128@charly.SWORD>
References: <1182889078.17645.63.camel@majesterium>
	<20070627042809.GA6562@mobilat> <1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
	<874pkbjlla.fsf@arnaudov.name>  <20070711102741.GA4128@charly.SWORD>
Message-ID: <1184152233.5893.60.camel@majesterium>

On Wed, 2007-07-11 at 12:27 +0200, Thorsten Wilms wrote:
> On Wed, Jul 11, 2007 at 01:12:01PM +0300, Nedko Arnaudov wrote:
> > 
> > IMHO we should give alternatives (for UI interaction point of view) to
> > developer but we should try to make API coherent. Also as Pete mentioned
> > in earlier mail, having global settings framework where user has the
> > power to control what widgets to use is very good approach. 

i'd be happy to have this right down the line but it may be impractical
in some cases. consider that you prefer sliders to knobs, the layout
would change enormously. mandating this for all applicable widgets
will lead to some pretty severe design constraints being
placed on client applications.

still, we will cross that bridge when we get to it. 

> I have this
> > in zynjacku TODO (in local rather than global variant). After all we do
> > linux because it gives user control, no? Why would we like to take
> > control from user because it is "stupid" like it is in windows/macosx?
> > Having good defaults is good thing of course, but still, choosing
> > defaults should be left to packagers.
> 
> Giving options is OK, but can't be an excuse for not well thought out 
> defaults. Especially as it is likely that people just stick with defaults, 
> get used to them and later on wouldn't ever switch because of that.

to be honest, this is slightly beside the point. clearly, among the
current
phat devs, we have a collection of different opinions, some of which 
contradict each other.  and this is just a microcosm of the wider world
of devs and (even more so) end users. that we provide good defaults is
not controversial. what those defaults should be and how we arrive at
that decision is the real question. 

> I wouldn't trust in packagers making the right decisions, but you 
> can't keep them from changing whatever they like, anyway.

i don't like this assumption that there is a universal "right" way to 
do anything. mainly because we are not dealing with absolutes but
also because it demands conflict when you disagree with someone.

pete.





From zenadsl6252 at zen.co.uk  Wed Jul 11 13:11:12 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Wed, 11 Jul 2007 12:11:12 +0100
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<1182889078.17645.63.camel@majesterium> <20070627042809.GA6562@mobilat>
	<1182938427.7455.73.camel@majesterium> <20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
Message-ID: <1184152272.5893.63.camel@majesterium>

On Wed, 2007-07-11 at 19:31 +1000, Loki Davison wrote:
> On 7/10/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
> > On Mon, Jul 09, 2007 at 09:19:53PM +0100, Damon Chaplin wrote:
> > >
> > > I think we should just use normal sliders that become much more
> > > sensitive if you hold down a modifier key, e.g. Shift. I think Reason
> > > does that.
> >
> > That's not exactly discoverable.
> > I'm not exactly happy about your bringing up Reason as model for
> > everything.
> >
> >
> 
> I haven't actually used reason for more than 10 minutes and that was
> last year, but after looking at a few pics on the net of the UI i
> think it's what we're not aiming for. To me it looks very boring and
> not pushing UI stuff except in really cheesy ways. Compairing the to
> the  lemur UI i'd go the lemur every time. It is a handy to have a
> basis that people might have experience with though. Reason just
> doesn't look sexy enough for me! Need so translucent fluro antialiased
> goodness.

i've never used reason but from a technical standpoint at least, it's
exactly
what i'm aiming for. that is, the ability to make fully pixmapped
interfaces. but i only want phat to be capable of that, i'm not
suggesting
that phat do that exclusively. 

pete.



From zenadsl6252 at zen.co.uk  Wed Jul 11 13:21:53 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Wed, 11 Jul 2007 12:21:53 +0100
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <20070709211703.GB23950@mobilat>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat> <1183975928.18919.6.camel@majesterium>
	<ec9314860707090619m4d08b8balc9302123b631db52@mail.gmail.com>
	<20070709211703.GB23950@mobilat>
Message-ID: <1184152913.5893.65.camel@majesterium>

On Mon, 2007-07-09 at 23:17 +0200, torbenh at gmx.de wrote:
> On Mon, Jul 09, 2007 at 11:19:12PM +1000, Loki Davison wrote:
> > On 7/9/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > On Fri, 2007-07-06 at 21:41 +0200, torbenh at gmx.de wrote:
> > > > i merged all patches.
> > > > the complete archive is here:
> > > >
> > > > http://galan.sourceforge.net/phat-0.4.1+meters+tech+glade.tar.bz2
> > >
> > > did you delete it? i'm getting a 404 from sf.
> 
> huh... sorry... now its there.

i can't see a glade-plugin dir in that tarball.. is that the right one?

pete.



From loki.davison at gmail.com  Wed Jul 11 14:08:29 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Wed, 11 Jul 2007 22:08:29 +1000
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <1184152272.5893.63.camel@majesterium>
References: <1182769471.3170.31.camel@localhost.localdomain>
	<20070627042809.GA6562@mobilat> <1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
	<1184152272.5893.63.camel@majesterium>
Message-ID: <ec9314860707110508h32a0b2e5ye89856cf9da95a76@mail.gmail.com>

On 7/11/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> On Wed, 2007-07-11 at 19:31 +1000, Loki Davison wrote:
> > On 7/10/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
> > > On Mon, Jul 09, 2007 at 09:19:53PM +0100, Damon Chaplin wrote:
> > > >
> > > > I think we should just use normal sliders that become much more
> > > > sensitive if you hold down a modifier key, e.g. Shift. I think Reason
> > > > does that.
> > >
> > > That's not exactly discoverable.
> > > I'm not exactly happy about your bringing up Reason as model for
> > > everything.
> > >
> > >
> >
> > I haven't actually used reason for more than 10 minutes and that was
> > last year, but after looking at a few pics on the net of the UI i
> > think it's what we're not aiming for. To me it looks very boring and
> > not pushing UI stuff except in really cheesy ways. Compairing the to
> > the  lemur UI i'd go the lemur every time. It is a handy to have a
> > basis that people might have experience with though. Reason just
> > doesn't look sexy enough for me! Need so translucent fluro antialiased
> > goodness.
>
> i've never used reason but from a technical standpoint at least, it's
> exactly
> what i'm aiming for. that is, the ability to make fully pixmapped
> interfaces. but i only want phat to be capable of that, i'm not
> suggesting
> that phat do that exclusively.
>
> pete.

I'm keen on fully pixmapped interfaces don't get me wrong. I just
would prefer ones that don't look so... umm, like a copy of b-grade
80's hardware? There is some hardware i love the look of i.e, hartmann
neuron http://www.design-box.de/img/sonic_sample_8_full.jpg However my
mks-7 and anything that looks like it is not the high point of good
looks ;) I'm guessing the Lemur look would best be done pixmapped as
well so as not too eat all cpu doing aliasing and see through.

Loki


From t_w_ at freenet.de  Wed Jul 11 14:37:27 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Wed, 11 Jul 2007 14:37:27 +0200
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <1184152233.5893.60.camel@majesterium>
References: <1182938427.7455.73.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
	<874pkbjlla.fsf@arnaudov.name> <20070711102741.GA4128@charly.SWORD>
	<1184152233.5893.60.camel@majesterium>
Message-ID: <20070711123726.GB4128@charly.SWORD>

On Wed, Jul 11, 2007 at 12:10:33PM +0100, pete shorthose wrote:
> 
> > I wouldn't trust in packagers making the right decisions, but you 
> > can't keep them from changing whatever they like, anyway.
> 
> i don't like this assumption that there is a universal "right" way to 
> do anything. mainly because we are not dealing with absolutes but
> also because it demands conflict when you disagree with someone.

What I actualy mean is making _informed_ decisions, trying to think 
of the big pictures, the users out there and not just personal belly-feel 
decisions ... that's what I wouldn't trust packagers with :)

Avoiding conflict has its cost, too.


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From mobarre at gmail.com  Wed Jul 11 15:25:21 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Wed, 11 Jul 2007 15:25:21 +0200
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <1184152233.5893.60.camel@majesterium>
References: <1182889078.17645.63.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
	<874pkbjlla.fsf@arnaudov.name> <20070711102741.GA4128@charly.SWORD>
	<1184152233.5893.60.camel@majesterium>
Message-ID: <3c808a150707110625s53df6e71ucc8b72cb201693c4@mail.gmail.com>

On 7/11/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> On Wed, 2007-07-11 at 12:27 +0200, Thorsten Wilms wrote:
> > On Wed, Jul 11, 2007 at 01:12:01PM +0300, Nedko Arnaudov wrote:
> > >
> > > IMHO we should give alternatives (for UI interaction point of view) to
> > > developer but we should try to make API coherent. Also as Pete mentioned
> > > in earlier mail, having global settings framework where user has the
> > > power to control what widgets to use is very good approach.
>
> i'd be happy to have this right down the line but it may be impractical
> in some cases. consider that you prefer sliders to knobs, the layout
> would change enormously. mandating this for all applicable widgets
> will lead to some pretty severe design constraints being
> placed on client applications.

IMHO, switching from a "plain slider" to a "bitmap slider" should be a
Phat feature, whereas switching from a slider to a knob happens
outside of Phat. AFAIR, I had a talk with Nedko on IRC about this and
I think it is on the roadmap of lv2dynparam...

Now on the part about giving reasonable default to widgets... I guess
it will be impossible to make everyone happy. But as long as a change
_is_ possible, I don't see the problem.
__________________
Marc-Olivier Barre.


From zenadsl6252 at zen.co.uk  Wed Jul 11 16:12:56 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Wed, 11 Jul 2007 15:12:56 +0100
Subject: [Phat-dev] Initial thoughts on phat
In-Reply-To: <3c808a150707110625s53df6e71ucc8b72cb201693c4@mail.gmail.com>
References: <1182889078.17645.63.camel@majesterium>
	<20070627114434.GC6562@mobilat>
	<ec9314860706270523x75db7fe5p37afc0b0120c1720@mail.gmail.com>
	<20070709184831.GA26822@zhevny.com>
	<1184012393.3257.4.camel@localhost.localdomain>
	<20070710072833.GA4109@charly.SWORD>
	<ec9314860707110231g3f5bb557g32fc3967c44bfc9c@mail.gmail.com>
	<874pkbjlla.fsf@arnaudov.name> <20070711102741.GA4128@charly.SWORD>
	<1184152233.5893.60.camel@majesterium>
	<3c808a150707110625s53df6e71ucc8b72cb201693c4@mail.gmail.com>
Message-ID: <1184163176.13358.41.camel@majesterium>

On Wed, 2007-07-11 at 15:25 +0200, Marc-Olivier Barre wrote:
> On 7/11/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > On Wed, 2007-07-11 at 12:27 +0200, Thorsten Wilms wrote:
> > > On Wed, Jul 11, 2007 at 01:12:01PM +0300, Nedko Arnaudov wrote:
> > > >
> > > > IMHO we should give alternatives (for UI interaction point of view) to
> > > > developer but we should try to make API coherent. Also as Pete mentioned
> > > > in earlier mail, having global settings framework where user has the
> > > > power to control what widgets to use is very good approach.
> >
> > i'd be happy to have this right down the line but it may be impractical
> > in some cases. consider that you prefer sliders to knobs, the layout
> > would change enormously. mandating this for all applicable widgets
> > will lead to some pretty severe design constraints being
> > placed on client applications.
> 
> IMHO, switching from a "plain slider" to a "bitmap slider" should be a
> Phat feature, whereas switching from a slider to a knob happens
> outside of Phat. 

ok. this requires default graphics though, it also requires a uniform 
interface for the slider as a whole. (expecting client applications
to monitor the type of slider in use and switch interfaces to adapt
is not a good idea imo) this leads to one of two possibilities.

1. a limited set of common options
2. an unlimited option set with redundant options in some cases. 
(you can't set a slider animation or pixmap on a native slider or set
the
number of ticks on an animated knob)

another problem is that say i design a nice pixmap interface to look
like my favourite piece of dodgy 80's hardware. if i can't override
the global defaults and a user switched to native knob types, my
interface
suddenly looks like ass. i guess this is fixed by providing just such an
override. of course that override is then open to abuse. (where abuse
means what ever to whoever)

really, i think that the pixmap / native dichotomy is pretty well
entrenched.
trying to reconcile the differences in one system is possible but might
require such tortuous contingencies as to be more trouble than it's
worth.

i'd prefer that you can switch between control "presentations" or have 
presentations represented by options to a common base. eg slider
is the base and have optional input methods to control it and optional
extensions like the fan or a popup of some sort. or for another example
the knob is the base but you can switch between the knob and the 
notknob (thorwils creation, if you're not familiar) presentation.

this is a much easier proposition. still, if people are in favour of
a broader set of interchangeable options (including pixmap/native)
then i'll go with that, albeit reluctantly.

> Now on the part about giving reasonable default to widgets... I guess
> it will be impossible to make everyone happy. But as long as a change
> _is_ possible, I don't see the problem.

pedantically speaking, change is possible anyway. "use the source luke"
but that's not really a viable option for most. so i agree with you
provided that change is both possible and practical.

i also think that we should listen to feedback and periodically
consider the how the defaults have been received with a mind
to best serving the needs of devs and users.


pete.



From torbenh at gmx.de  Wed Jul 11 16:49:52 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Wed, 11 Jul 2007 16:49:52 +0200
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <1184152913.5893.65.camel@majesterium>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
	<20070706194142.GA12296@mobilat>
	<1183975928.18919.6.camel@majesterium>
	<ec9314860707090619m4d08b8balc9302123b631db52@mail.gmail.com>
	<20070709211703.GB23950@mobilat>
	<1184152913.5893.65.camel@majesterium>
Message-ID: <20070711144952.GB23472@mobilat>

On Wed, Jul 11, 2007 at 12:21:53PM +0100, pete shorthose wrote:
> On Mon, 2007-07-09 at 23:17 +0200, torbenh at gmx.de wrote:
> > On Mon, Jul 09, 2007 at 11:19:12PM +1000, Loki Davison wrote:
> > > On 7/9/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > > On Fri, 2007-07-06 at 21:41 +0200, torbenh at gmx.de wrote:
> > > > > i merged all patches.
> > > > > the complete archive is here:
> > > > >
> > > > > http://galan.sourceforge.net/phat-0.4.1+meters+tech+glade.tar.bz2
> > > >
> > > > did you delete it? i'm getting a 404 from sf.
> > 
> > huh... sorry... now its there.
> 
> i can't see a glade-plugin dir in that tarball.. is that the right one?

grrr... sorry.
i used "make dist" 

ok. now it looks like its fixed.
it still contains the old phat.xml

http://galan.sourceforge.net/phat-0.4.2.tar.gz


> 
> pete.
> 
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From torbenh at gmx.de  Wed Jul 11 18:02:17 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Wed, 11 Jul 2007 18:02:17 +0200
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
	<ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
Message-ID: <20070711160217.GC23472@mobilat>

On Tue, Jul 10, 2007 at 11:08:21PM +1000, Loki Davison wrote:
> On 7/10/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > On Tue, 2007-07-10 at 14:30 +0200, torbenh at gmx.de wrote:
> > > i started to write a GtkTreeStore which fills itself with
> > > all LV2 plugin classes it finds.
> > >
> > > this would add a dependency to libslv2 but i think this is the right
> > > direction. as the time of standalone jack-clients has nearly ended :P
> > >
> > >
> > > comments ?
> >
> > yikes. clearly we will need some bindings and convenience
> > stuff for things like lv2, but i think they should come in the
> > form of optional modules or broken out into convenience
> > libraries.
> > (which could be maintained and distributed along side phat)
> >
> > the dependency burdon is going to go batshit nuts if we
> > start adding in poorly distributed or rapidly developing libraries.
> > and that causes problems for distro maintainers and may
> > limit uptake (and thus the viability of phat as a whole)
> >
> > consider the glade plugin. it's not required. this means that
> > someone can use phat as a simple widget library and write
> > their own higher level stuff or what ever back end they need.
> >
> > we risk drastically reducing the appeal of phat as a general
> > widget library if we start welding it to a bunch of stuff that
> > some people either don't need or want to provide their own
> > solutions for.
> >
> > pete.
> >
> 
> This sounds interesting. Have you looked at Dave's code in Ingen for
> this stuff? Either way, sound very useful to have, as does an lv2

no. i looked at lv2_list... and some code from galan ;)

> plugin selector.  However this should be in a optional subdirectory
> same as the glade stuff. When building packages you should have
> generated phat, pyphat, phat-glade and phat-lv2, and anything else we
> work out! ;)

ok. i moved it into a separate directory.
its in the tarball http://galan.sf.net/phat-0.4.2.tar.gz

well the lv2 plugin selector is implemented in the demos thing.
however we can provide a dedicated dialog for this.

how will the package generation be managed ?

i have also some problems with the directory hirarchy now.
the lv2 demos should be in a subdir of phat-lv2 i think. to save some
if s in Makefile.am ...




-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From torbenh at gmx.de  Wed Jul 11 21:51:45 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Wed, 11 Jul 2007 21:51:45 +0200
Subject: [Phat-dev] Port of meterbridge widgets
In-Reply-To: <ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
References: <1183550811.3154.13.camel@localhost.localdomain>
	<ec9314860707050009w632b7543o6a11dae2ceb7e9fa@mail.gmail.com>
Message-ID: <20070711195145.GD23472@mobilat>

On Thu, Jul 05, 2007 at 05:09:27PM +1000, Loki Davison wrote:
> On 7/4/07, Damon Chaplin <damon at karuna.eclipse.co.uk> wrote:
> > On Mon, 2007-07-02 at 11:14 +0100, Damon Chaplin wrote:
> > > On Sun, 2007-07-01 at 18:53 +1000, Loki Davison wrote:
> >
> > > >  Also metering widgets would be very nice.
> > > > Porting all the meters from meterbridge to phat would allow all the
> > > > apps that create dodgy dpm meters to either use one that's already
> > > > coded or one of the very cool looking ppm meters. ;)
> > >
> > > OK. I'll have a go at that. Though they seem closely tied to JACK
> > > at the moment - I suppose we want to remove that dependency.
> >
> > I've done an initial port of the DPM, PPM and VU meters:
> >   http://www.karuna.eclipse.co.uk/phat/myphat.tgz
> >
> > I've removed the JACK code, and the level of each meter is simply set as
> > a value in the range 0 - 1 for now.
> >
> > I don't know much about the technical side of audio myself so you guys
> > will have to decide on the appropriate API for these meters.
> >
> > Also, do we want to support different styles/sizes of meters?
> > I'd like to at least support different styles for the DPM meters which I
> > think are the ones used most often in audio apps. I personally like the
> > red/orange/green LED-type meters (without the numbers).
> >
> > Damon
> >
> 
> Awesome! ;) I'd say yes for sizes and styles. What they should be i'm
> not sure though. These should all inherit from a meter parent class
> though that has the get and set functions. I'm not sure about the rest
> of the api and what is required, maybe Nedko can suggest something as
> his app uses metering. Tell me when you've got an account on berlios
> so i can add you to svn and you can commit these.

shall i commit them ?
along with the glade-stuff ?



-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From loki.davison at gmail.com  Thu Jul 12 02:01:51 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Thu, 12 Jul 2007 10:01:51 +1000
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <20070711160217.GC23472@mobilat>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
	<ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
	<20070711160217.GC23472@mobilat>
Message-ID: <ec9314860707111701y9acae16m8fdf29995f22e879@mail.gmail.com>

On 7/12/07, torbenh at gmx.de <torbenh at gmx.de> wrote:
> On Tue, Jul 10, 2007 at 11:08:21PM +1000, Loki Davison wrote:
> > On 7/10/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > On Tue, 2007-07-10 at 14:30 +0200, torbenh at gmx.de wrote:
> > > > i started to write a GtkTreeStore which fills itself with
> > > > all LV2 plugin classes it finds.
> > > >
> > > > this would add a dependency to libslv2 but i think this is the right
> > > > direction. as the time of standalone jack-clients has nearly ended :P
> > > >
> > > >
> > > > comments ?
> > >
> > > yikes. clearly we will need some bindings and convenience
> > > stuff for things like lv2, but i think they should come in the
> > > form of optional modules or broken out into convenience
> > > libraries.
> > > (which could be maintained and distributed along side phat)
> > >
> > > the dependency burdon is going to go batshit nuts if we
> > > start adding in poorly distributed or rapidly developing libraries.
> > > and that causes problems for distro maintainers and may
> > > limit uptake (and thus the viability of phat as a whole)
> > >
> > > consider the glade plugin. it's not required. this means that
> > > someone can use phat as a simple widget library and write
> > > their own higher level stuff or what ever back end they need.
> > >
> > > we risk drastically reducing the appeal of phat as a general
> > > widget library if we start welding it to a bunch of stuff that
> > > some people either don't need or want to provide their own
> > > solutions for.
> > >
> > > pete.
> > >
> >
> > This sounds interesting. Have you looked at Dave's code in Ingen for
> > this stuff? Either way, sound very useful to have, as does an lv2
>
> no. i looked at lv2_list... and some code from galan ;)
>
> > plugin selector.  However this should be in a optional subdirectory
> > same as the glade stuff. When building packages you should have
> > generated phat, pyphat, phat-glade and phat-lv2, and anything else we
> > work out! ;)
>
> ok. i moved it into a separate directory.
> its in the tarball http://galan.sf.net/phat-0.4.2.tar.gz
>
> well the lv2 plugin selector is implemented in the demos thing.
> however we can provide a dedicated dialog for this.
>
> how will the package generation be managed ?
>
> i have also some problems with the directory hirarchy now.
> the lv2 demos should be in a subdir of phat-lv2 i think. to save some
> if s in Makefile.am ...
>


Can't seem to see these in SVN, maybe there is a delay.... though i
can see your new icons which is nice. :)

Loki


From zenadsl6252 at zen.co.uk  Thu Jul 12 17:04:11 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Thu, 12 Jul 2007 16:04:11 +0100
Subject: [Phat-dev] phat knob changes
Message-ID: <1184252651.6269.24.camel@majesterium>

i've got a bunch of changes to commit to the phat
knob (nothing major, just some tweaks to make
glade happy and remove some deprecated bits 
and bobs)
 
i can commit in one go or do a commit for each
change. sup to yooz. (obviously i'm only askin
because i'm lazy but i'll break it up if need be =)

changes as follows:


deref rather than destroy external adjustment, 
  (as might be shared)

replace (scary) verbose type definition with friendly
  G_DEFINE_TYPE() macro

removed redundant mask and gc variables

use phat_knob_parent_class defined by the above
 macro instead of explicit "parent_class" definition.

added object get/set_property functions with 
   interim code until we sort out the general knob
  class structure.

replaced M_PI definition with glib G_PI

made some style changes that i'll change back
  if they are unpopular.

replaced C++ reserved keyword "class" with 
 "klass" (for future mm bindings)

replaced some deprecated gtk functions with
 their glib counterparts.

fix bug in phat_knob_set_adjustment() where new
 external adjustment was connected to the 
 internal adjustment callbacks.

renamed static functions as follows:

 phat_knob_adjustment_value_changed TO
phat_knob_internal_adjustment_value_changed

 phat_knob_adjustment_changed  TO 
  phat_knob_internal_adjustment_changed

 and

 phat_knob_external_adjustment_value_changed TO
phat_knob_adjustment_value_changed

 phat_knob_external_adjustment_changed   TO 
phat_knob_adjustment_changed

this is because the internal updates are the special
case. (at least, this helped me to see more 
clearly what was going on)


i may have broken the log code. i've never seen
that operating as it should though so i'm not
sure. i'll look into it. 
some of the grunt work has been offloaded
to the property system so if you are wondering
why some var initialisation or other init stuff
has been removed, it's because the properties 
do the business now.

pete.



From torbenh at gmx.de  Thu Jul 12 17:17:44 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Thu, 12 Jul 2007 17:17:44 +0200
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <ec9314860707111701y9acae16m8fdf29995f22e879@mail.gmail.com>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
	<ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
	<20070711160217.GC23472@mobilat>
	<ec9314860707111701y9acae16m8fdf29995f22e879@mail.gmail.com>
Message-ID: <20070712151744.GB23036@mobilat>

On Thu, Jul 12, 2007 at 10:01:51AM +1000, Loki Davison wrote:
> On 7/12/07, torbenh at gmx.de <torbenh at gmx.de> wrote:
> > On Tue, Jul 10, 2007 at 11:08:21PM +1000, Loki Davison wrote:
> > > On 7/10/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > > On Tue, 2007-07-10 at 14:30 +0200, torbenh at gmx.de wrote:
> > > > > i started to write a GtkTreeStore which fills itself with
> > > > > all LV2 plugin classes it finds.
> > > > >
> > > > > this would add a dependency to libslv2 but i think this is the right
> > > > > direction. as the time of standalone jack-clients has nearly ended :P
> > > > >
> > > > >
> > > > > comments ?
> > > >
> > > > yikes. clearly we will need some bindings and convenience
> > > > stuff for things like lv2, but i think they should come in the
> > > > form of optional modules or broken out into convenience
> > > > libraries.
> > > > (which could be maintained and distributed along side phat)
> > > >
> > > > the dependency burdon is going to go batshit nuts if we
> > > > start adding in poorly distributed or rapidly developing libraries.
> > > > and that causes problems for distro maintainers and may
> > > > limit uptake (and thus the viability of phat as a whole)
> > > >
> > > > consider the glade plugin. it's not required. this means that
> > > > someone can use phat as a simple widget library and write
> > > > their own higher level stuff or what ever back end they need.
> > > >
> > > > we risk drastically reducing the appeal of phat as a general
> > > > widget library if we start welding it to a bunch of stuff that
> > > > some people either don't need or want to provide their own
> > > > solutions for.
> > > >
> > > > pete.
> > > >
> > >
> > > This sounds interesting. Have you looked at Dave's code in Ingen for
> > > this stuff? Either way, sound very useful to have, as does an lv2
> >
> > no. i looked at lv2_list... and some code from galan ;)
> >
> > > plugin selector.  However this should be in a optional subdirectory
> > > same as the glade stuff. When building packages you should have
> > > generated phat, pyphat, phat-glade and phat-lv2, and anything else we
> > > work out! ;)
> >
> > ok. i moved it into a separate directory.
> > its in the tarball http://galan.sf.net/phat-0.4.2.tar.gz
> >
> > well the lv2 plugin selector is implemented in the demos thing.
> > however we can provide a dedicated dialog for this.
> >
> > how will the package generation be managed ?
> >
> > i have also some problems with the directory hirarchy now.
> > the lv2 demos should be in a subdir of phat-lv2 i think. to save some
> > if s in Makefile.am ...
> >
> 
> 
> Can't seem to see these in SVN, maybe there is a delay.... though i
> can see your new icons which is nice. :)

i did not want to commit these things after getting green light.
i consider this green light now ;)

> 
> Loki
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From zenadsl6252 at zen.co.uk  Thu Jul 12 17:11:36 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Thu, 12 Jul 2007 16:11:36 +0100
Subject: [Phat-dev] phat knob changes
In-Reply-To: <1184252651.6269.24.camel@majesterium>
References: <1184252651.6269.24.camel@majesterium>
Message-ID: <1184253096.6269.28.camel@majesterium>

looks like i didn't break the log code. 
which is nice.

loki, in case i wasn't clear, i'm not going to
commit until i hear from you whether you
are ok with the bulk commit. 

either way, knobs will work properly in glade
as soon as it's committed :)

pete.



From torbenh at gmx.de  Thu Jul 12 17:26:55 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Thu, 12 Jul 2007 17:26:55 +0200
Subject: [Phat-dev] Knob requirements, ardour slider
In-Reply-To: <ec9314860707100602y296a9cbdj611a3fe5691f3fca@mail.gmail.com>
References: <ec9314860707100602y296a9cbdj611a3fe5691f3fca@mail.gmail.com>
Message-ID: <20070712152655.GC23036@mobilat>

On Tue, Jul 10, 2007 at 11:02:29PM +1000, Loki Davison wrote:
> On 7/8/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
> > On Mon, Jul 02, 2007 at 11:14:01AM +0100, Damon Chaplin wrote:
> > >
> > > > Porting Thorsten's ardour slider to phat is also higher on the todo i
> > > > think.
> > >
> > > I could have a look at that as well, if Thorsten is busy. Where is the
> > > code in ardour?
> >
> > (Lost internet connection for a few days).
> >
> > I designed them, Pauls Davis (las in #ardour) did the implemenation.
> > No clue on the code side ;)
> >
> 
> I'm nearly done with porting the ardour slider, just a little bit to
> go. Need to discuss some api questions tomorrow though. Pretty easy to
> port despite my very rusty C++ skills.

i just changed the lookup of the pixmap.
now uses the PIXMAPDIRIFY macro tony wrote for galan.

uses G_DIR_SEPARATOR and stuff ;)

> 
> Loki
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From loki.davison at gmail.com  Thu Jul 12 17:26:09 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Fri, 13 Jul 2007 01:26:09 +1000
Subject: [Phat-dev] phat knob changes
In-Reply-To: <1184253096.6269.28.camel@majesterium>
References: <1184252651.6269.24.camel@majesterium>
	<1184253096.6269.28.camel@majesterium>
Message-ID: <ec9314860707120826j1c8887f5s2730be34ef5e4015@mail.gmail.com>

On 7/13/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> looks like i didn't break the log code.
> which is nice.
>
> loki, in case i wasn't clear, i'm not going to
> commit until i hear from you whether you
> are ok with the bulk commit.
>
> either way, knobs will work properly in glade
> as soon as it's committed :)
>
> pete.
>

Go for it. I'll need to fix the new slider to be in line with this as
i based the gtk class stuff off the knob!! lol, thought it was the
most recent/least dodgy.

Loki


From zenadsl6252 at zen.co.uk  Thu Jul 12 17:26:43 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Thu, 12 Jul 2007 16:26:43 +0100
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <20070712151744.GB23036@mobilat>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
	<ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
	<20070711160217.GC23472@mobilat>
	<ec9314860707111701y9acae16m8fdf29995f22e879@mail.gmail.com>
	<20070712151744.GB23036@mobilat>
Message-ID: <1184254003.6269.42.camel@majesterium>

On Thu, 2007-07-12 at 17:17 +0200, torbenh at gmx.de wrote:
> On Thu, Jul 12, 2007 at 10:01:51AM +1000, Loki Davison wrote:
> > On 7/12/07, torbenh at gmx.de <torbenh at gmx.de> wrote:
> > > On Tue, Jul 10, 2007 at 11:08:21PM +1000, Loki Davison wrote:
> > > > On 7/10/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > > > On Tue, 2007-07-10 at 14:30 +0200, torbenh at gmx.de wrote:
> > > > > > i started to write a GtkTreeStore which fills itself with
> > > > > > all LV2 plugin classes it finds.
> > > > > >
> > > > > > this would add a dependency to libslv2 but i think this is the right
> > > > > > direction. as the time of standalone jack-clients has nearly ended :P
> > > > > >
> > > > > >
> > > > > > comments ?
> > > > >
> > > > > yikes. clearly we will need some bindings and convenience
> > > > > stuff for things like lv2, but i think they should come in the
> > > > > form of optional modules or broken out into convenience
> > > > > libraries.
> > > > > (which could be maintained and distributed along side phat)
> > > > >
> > > > > the dependency burdon is going to go batshit nuts if we
> > > > > start adding in poorly distributed or rapidly developing libraries.
> > > > > and that causes problems for distro maintainers and may
> > > > > limit uptake (and thus the viability of phat as a whole)
> > > > >
> > > > > consider the glade plugin. it's not required. this means that
> > > > > someone can use phat as a simple widget library and write
> > > > > their own higher level stuff or what ever back end they need.
> > > > >
> > > > > we risk drastically reducing the appeal of phat as a general
> > > > > widget library if we start welding it to a bunch of stuff that
> > > > > some people either don't need or want to provide their own
> > > > > solutions for.
> > > > >
> > > > > pete.
> > > > >
> > > >
> > > > This sounds interesting. Have you looked at Dave's code in Ingen for
> > > > this stuff? Either way, sound very useful to have, as does an lv2
> > >
> > > no. i looked at lv2_list... and some code from galan ;)
> > >
> > > > plugin selector.  However this should be in a optional subdirectory
> > > > same as the glade stuff. When building packages you should have
> > > > generated phat, pyphat, phat-glade and phat-lv2, and anything else we
> > > > work out! ;)
> > >
> > > ok. i moved it into a separate directory.
> > > its in the tarball http://galan.sf.net/phat-0.4.2.tar.gz
> > >
> > > well the lv2 plugin selector is implemented in the demos thing.
> > > however we can provide a dedicated dialog for this.
> > >
> > > how will the package generation be managed ?
> > >
> > > i have also some problems with the directory hirarchy now.
> > > the lv2 demos should be in a subdir of phat-lv2 i think. to save some
> > > if s in Makefile.am ...
> > >
> > 
> > 
> > Can't seem to see these in SVN, maybe there is a delay.... though i
> > can see your new icons which is nice. :)
> 
> i did not want to commit these things after getting green light.
> i consider this green light now ;)


are we in agreement that the phat-lv2 stuff should effectively be a
separate
package (with it's own lib and includes)?

if we are then we need to decide whether it's best to keep it out of the
tree
as per the python bindings or to incorporate it.

if we go for separate packages then when building from source, the
package
build order is out of our control but there is clear delineation between
phat
and it's ancillary libs from a package maintainers perspective.

if we incorporate the other libraries directly into the phat tree then
it's easier
to build from source but we may need separate build and install targets
and we need to make it clear to package maintainers that these are 
separate packages with different sets of dependencies. (else separating
it out  was a waste of time)

if we go for a unified approach then perhaps we should consider pulling
pyphat in too?.

pete.



From loki.davison at gmail.com  Thu Jul 12 17:33:42 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Fri, 13 Jul 2007 01:33:42 +1000
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <1184254003.6269.42.camel@majesterium>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
	<ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
	<20070711160217.GC23472@mobilat>
	<ec9314860707111701y9acae16m8fdf29995f22e879@mail.gmail.com>
	<20070712151744.GB23036@mobilat>
	<1184254003.6269.42.camel@majesterium>
Message-ID: <ec9314860707120833y3aedf36bw835a9eaafeab80cd@mail.gmail.com>

On 7/13/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> On Thu, 2007-07-12 at 17:17 +0200, torbenh at gmx.de wrote:
> > On Thu, Jul 12, 2007 at 10:01:51AM +1000, Loki Davison wrote:
> > > On 7/12/07, torbenh at gmx.de <torbenh at gmx.de> wrote:
> > > > On Tue, Jul 10, 2007 at 11:08:21PM +1000, Loki Davison wrote:
> > > > > On 7/10/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > > > > On Tue, 2007-07-10 at 14:30 +0200, torbenh at gmx.de wrote:
> > > > > > > i started to write a GtkTreeStore which fills itself with
> > > > > > > all LV2 plugin classes it finds.
> > > > > > >
> > > > > > > this would add a dependency to libslv2 but i think this is the
> right
> > > > > > > direction. as the time of standalone jack-clients has nearly
> ended :P
> > > > > > >
> > > > > > >
> > > > > > > comments ?
> > > > > >
> > > > > > yikes. clearly we will need some bindings and convenience
> > > > > > stuff for things like lv2, but i think they should come in the
> > > > > > form of optional modules or broken out into convenience
> > > > > > libraries.
> > > > > > (which could be maintained and distributed along side phat)
> > > > > >
> > > > > > the dependency burdon is going to go batshit nuts if we
> > > > > > start adding in poorly distributed or rapidly developing
> libraries.
> > > > > > and that causes problems for distro maintainers and may
> > > > > > limit uptake (and thus the viability of phat as a whole)
> > > > > >
> > > > > > consider the glade plugin. it's not required. this means that
> > > > > > someone can use phat as a simple widget library and write
> > > > > > their own higher level stuff or what ever back end they need.
> > > > > >
> > > > > > we risk drastically reducing the appeal of phat as a general
> > > > > > widget library if we start welding it to a bunch of stuff that
> > > > > > some people either don't need or want to provide their own
> > > > > > solutions for.
> > > > > >
> > > > > > pete.
> > > > > >
> > > > >
> > > > > This sounds interesting. Have you looked at Dave's code in Ingen for
> > > > > this stuff? Either way, sound very useful to have, as does an lv2
> > > >
> > > > no. i looked at lv2_list... and some code from galan ;)
> > > >
> > > > > plugin selector.  However this should be in a optional subdirectory
> > > > > same as the glade stuff. When building packages you should have
> > > > > generated phat, pyphat, phat-glade and phat-lv2, and anything else
> we
> > > > > work out! ;)
> > > >
> > > > ok. i moved it into a separate directory.
> > > > its in the tarball http://galan.sf.net/phat-0.4.2.tar.gz
> > > >
> > > > well the lv2 plugin selector is implemented in the demos thing.
> > > > however we can provide a dedicated dialog for this.
> > > >
> > > > how will the package generation be managed ?
> > > >
> > > > i have also some problems with the directory hirarchy now.
> > > > the lv2 demos should be in a subdir of phat-lv2 i think. to save some
> > > > if s in Makefile.am ...
> > > >
> > >
> > >
> > > Can't seem to see these in SVN, maybe there is a delay.... though i
> > > can see your new icons which is nice. :)
> >
> > i did not want to commit these things after getting green light.
> > i consider this green light now ;)
>
>
> are we in agreement that the phat-lv2 stuff should effectively be a
> separate
> package (with it's own lib and includes)?
>
> if we are then we need to decide whether it's best to keep it out of the
> tree
> as per the python bindings or to incorporate it.
>
> if we go for separate packages then when building from source, the
> package
> build order is out of our control but there is clear delineation between
> phat
> and it's ancillary libs from a package maintainers perspective.
>
> if we incorporate the other libraries directly into the phat tree then
> it's easier
> to build from source but we may need separate build and install targets
> and we need to make it clear to package maintainers that these are
> separate packages with different sets of dependencies. (else separating
> it out  was a waste of time)
>
> if we go for a unified approach then perhaps we should consider pulling
> pyphat in too?.
>
> pete.
>


mmm, not sure which is easier, second seems to be better with pyphat
being pulled in. I have no idea which is better for packagers though.

Loki


From torbenh at gmx.de  Thu Jul 12 17:50:14 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Thu, 12 Jul 2007 17:50:14 +0200
Subject: [Phat-dev] PhatAdjustment
Message-ID: <20070712155014.GD23036@mobilat>


i commited the PhatAdjustment.
purpose is to have an Adjustment, which watches a float.

The float is supposed to be a value changed from the RT-thread.
So if the meters would have a GtkRange compatible interface, they could
be connected to a metering ladspa via this Adjustment.

still needs some functions or properties to set the timeout,
and the backwards case needs to be handled also.

with backwards i mean connecting the Adjustment to a plugin input port.
still needs some thoughts to get this clean...



-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From torbenh at gmx.de  Thu Jul 12 19:20:42 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Thu, 12 Jul 2007 19:20:42 +0200
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <ec9314860707120833y3aedf36bw835a9eaafeab80cd@mail.gmail.com>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
	<ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
	<20070711160217.GC23472@mobilat>
	<ec9314860707111701y9acae16m8fdf29995f22e879@mail.gmail.com>
	<20070712151744.GB23036@mobilat>
	<1184254003.6269.42.camel@majesterium>
	<ec9314860707120833y3aedf36bw835a9eaafeab80cd@mail.gmail.com>
Message-ID: <20070712172042.GE23036@mobilat>

On Fri, Jul 13, 2007 at 01:33:42AM +1000, Loki Davison wrote:
> On 7/13/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > On Thu, 2007-07-12 at 17:17 +0200, torbenh at gmx.de wrote:
> > > On Thu, Jul 12, 2007 at 10:01:51AM +1000, Loki Davison wrote:
> > > > On 7/12/07, torbenh at gmx.de <torbenh at gmx.de> wrote:
> > > > > On Tue, Jul 10, 2007 at 11:08:21PM +1000, Loki Davison wrote:
> > > > > > On 7/10/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > > > > > On Tue, 2007-07-10 at 14:30 +0200, torbenh at gmx.de wrote:
> > > > > > > > i started to write a GtkTreeStore which fills itself with
> > > > > > > > all LV2 plugin classes it finds.
> > > > > > > >
> > > > > > > > this would add a dependency to libslv2 but i think this is the
> > right
> > > > > > > > direction. as the time of standalone jack-clients has nearly
> > ended :P
> > > > > > > >
> > > > > > > >
> > > > > > > > comments ?
> > > > > > >
> > > > > > > yikes. clearly we will need some bindings and convenience
> > > > > > > stuff for things like lv2, but i think they should come in the
> > > > > > > form of optional modules or broken out into convenience
> > > > > > > libraries.
> > > > > > > (which could be maintained and distributed along side phat)
> > > > > > >
> > > > > > > the dependency burdon is going to go batshit nuts if we
> > > > > > > start adding in poorly distributed or rapidly developing
> > libraries.
> > > > > > > and that causes problems for distro maintainers and may
> > > > > > > limit uptake (and thus the viability of phat as a whole)
> > > > > > >
> > > > > > > consider the glade plugin. it's not required. this means that
> > > > > > > someone can use phat as a simple widget library and write
> > > > > > > their own higher level stuff or what ever back end they need.
> > > > > > >
> > > > > > > we risk drastically reducing the appeal of phat as a general
> > > > > > > widget library if we start welding it to a bunch of stuff that
> > > > > > > some people either don't need or want to provide their own
> > > > > > > solutions for.
> > > > > > >
> > > > > > > pete.
> > > > > > >
> > > > > >
> > > > > > This sounds interesting. Have you looked at Dave's code in Ingen for
> > > > > > this stuff? Either way, sound very useful to have, as does an lv2
> > > > >
> > > > > no. i looked at lv2_list... and some code from galan ;)
> > > > >
> > > > > > plugin selector.  However this should be in a optional subdirectory
> > > > > > same as the glade stuff. When building packages you should have
> > > > > > generated phat, pyphat, phat-glade and phat-lv2, and anything else
> > we
> > > > > > work out! ;)
> > > > >
> > > > > ok. i moved it into a separate directory.
> > > > > its in the tarball http://galan.sf.net/phat-0.4.2.tar.gz
> > > > >
> > > > > well the lv2 plugin selector is implemented in the demos thing.
> > > > > however we can provide a dedicated dialog for this.
> > > > >
> > > > > how will the package generation be managed ?
> > > > >
> > > > > i have also some problems with the directory hirarchy now.
> > > > > the lv2 demos should be in a subdir of phat-lv2 i think. to save some
> > > > > if s in Makefile.am ...
> > > > >
> > > >
> > > >
> > > > Can't seem to see these in SVN, maybe there is a delay.... though i
> > > > can see your new icons which is nice. :)
> > >
> > > i did not want to commit these things after getting green light.
> > > i consider this green light now ;)
> >
> >
> > are we in agreement that the phat-lv2 stuff should effectively be a
> > separate
> > package (with it's own lib and includes)?
> >
> > if we are then we need to decide whether it's best to keep it out of the
> > tree
> > as per the python bindings or to incorporate it.
> >
> > if we go for separate packages then when building from source, the
> > package
> > build order is out of our control but there is clear delineation between
> > phat
> > and it's ancillary libs from a package maintainers perspective.
> >
> > if we incorporate the other libraries directly into the phat tree then
> > it's easier
> > to build from source but we may need separate build and install targets
> > and we need to make it clear to package maintainers that these are
> > separate packages with different sets of dependencies. (else separating
> > it out  was a waste of time)
> >
> > if we go for a unified approach then perhaps we should consider pulling
> > pyphat in too?.
> >
> > pete.
> >

i did not commit the lv2 thing.
there was clearly no consensus. 

As long as its only 100 lines of gob code this is
not worth being a separate package though ;}

but as long as there is no release of libslv2
we can not have libslv2 dependencies in a release.

but we should be ready, when there is a release.
i would like to see lv2 in distros pretty fast.

perhaps we should have some sort of experimental package/playground
or something ?  where we can deposit code with "unsatisfied depencies".




> 
> 
> mmm, not sure which is easier, second seems to be better with pyphat
> being pulled in. I have no idea which is better for packagers though.
> 
> Loki
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From torbenh at gmx.de  Thu Jul 12 19:29:15 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Thu, 12 Jul 2007 19:29:15 +0200
Subject: [Phat-dev] phat knob changes
In-Reply-To: <ec9314860707120826j1c8887f5s2730be34ef5e4015@mail.gmail.com>
References: <1184252651.6269.24.camel@majesterium>
	<1184253096.6269.28.camel@majesterium>
	<ec9314860707120826j1c8887f5s2730be34ef5e4015@mail.gmail.com>
Message-ID: <20070712172915.GF23036@mobilat>

On Fri, Jul 13, 2007 at 01:26:09AM +1000, Loki Davison wrote:
> On 7/13/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > looks like i didn't break the log code.
> > which is nice.
> >
> > loki, in case i wasn't clear, i'm not going to
> > commit until i hear from you whether you
> > are ok with the bulk commit.
> >
> > either way, knobs will work properly in glade
> > as soon as it's committed :)
> >
> > pete.
> >
> 
> Go for it. I'll need to fix the new slider to be in line with this as
> i based the gtk class stuff off the knob!! lol, thought it was the
> most recent/least dodgy.

nice work pete.
i will try to derive the knob from GtkRange, as soon as you commit.
then the code for the adjustment handling would also fade away.

however for the PhatKnob and PhatFanSliders we need to provide backwards compatibility.
but all other new widgets could be derived from GtkRange and we would
have a common base class.

it would also be nice to have the widget window removed from the knob
and use the parents window. i would go for this...


> 
> Loki
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From zenadsl6252 at zen.co.uk  Thu Jul 12 22:56:53 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Thu, 12 Jul 2007 21:56:53 +0100
Subject: [Phat-dev] phat knob changes
In-Reply-To: <20070712172915.GF23036@mobilat>
References: <1184252651.6269.24.camel@majesterium>
	<1184253096.6269.28.camel@majesterium>
	<ec9314860707120826j1c8887f5s2730be34ef5e4015@mail.gmail.com>
	<20070712172915.GF23036@mobilat>
Message-ID: <1184273813.6269.106.camel@majesterium>

On Thu, 2007-07-12 at 19:29 +0200, torbenh at gmx.de wrote:
> On Fri, Jul 13, 2007 at 01:26:09AM +1000, Loki Davison wrote:
> > On 7/13/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > looks like i didn't break the log code.
> > > which is nice.
> > >
> > > loki, in case i wasn't clear, i'm not going to
> > > commit until i hear from you whether you
> > > are ok with the bulk commit.
> > >
> > > either way, knobs will work properly in glade
> > > as soon as it's committed :)
> > >
> > > pete.
> > >
> > 
> > Go for it. I'll need to fix the new slider to be in line with this as
> > i based the gtk class stuff off the knob!! lol, thought it was the
> > most recent/least dodgy.
> 
> nice work pete.
> i will try to derive the knob from GtkRange, as soon as you commit.
> then the code for the adjustment handling would also fade away.

good idea. there's still some superfluous junk in there but you
can't have everything and i think it's a better bet than GtkWidget on
balance.

> however for the PhatKnob and PhatFanSliders we need to provide backwards compatibility.

we discussed this recently and the consensus seemed to be that 
it'd be better to rip up the API and bump the library version.
loki is the only known user of PhatKnob and i'll happily update anyone's
code to suit a changed PhatFanSlider. (probably only specimen?)
normally this kind of thing is a big taboo but you'll rarely get 
a better set of mitigating circumstances than these.

> but all other new widgets could be derived from GtkRange and we would
> have a common base class.

gets my vote. i think we could still do with additional abstract classes
for code common to say, all sliders or all knobs. we can evolve that
as we go though. it's pretty easy to change things around up until
we the time we release.

> it would also be nice to have the widget window removed from the knob
> and use the parents window. i would go for this...

what are the benefits / drawbacks of doing so?
i assume we still need a window (event box?) for mouse updates, tooltips
and the like
and tricks like backing store would no longer be applicable..

pete.



From zenadsl6252 at zen.co.uk  Fri Jul 13 00:25:56 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Thu, 12 Jul 2007 23:25:56 +0100
Subject: [Phat-dev] a reminder that glade 3 is a moving target
Message-ID: <1184279156.17331.7.camel@majesterium>

we will need to narrow down the version requirements for the
glade plugin. already the bleeding edge is incompatible
with what we have. the method for deriving widget
icon names has changed and the install location along
with it. this doesn't seem to be detectable via pkg-config
(without prior knowledge anyway)

i'm not going to suggest we track glade subversion but
perhaps tracking releases is doable. the glade dev
lists seem to be used more for announcements than
discussion so for info on recent events, drop in on
#glade3 on irc.gimp.org which is where all the action
is.

pete.





From zenadsl6252 at zen.co.uk  Fri Jul 13 00:52:49 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Thu, 12 Jul 2007 23:52:49 +0100
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <20070712172042.GE23036@mobilat>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
	<ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
	<20070711160217.GC23472@mobilat>
	<ec9314860707111701y9acae16m8fdf29995f22e879@mail.gmail.com>
	<20070712151744.GB23036@mobilat> <1184254003.6269.42.camel@majesterium>
	<ec9314860707120833y3aedf36bw835a9eaafeab80cd@mail.gmail.com>
	<20070712172042.GE23036@mobilat>
Message-ID: <1184280769.17331.17.camel@majesterium>

On Thu, 2007-07-12 at 19:20 +0200, torbenh at gmx.de wrote:

> i did not commit the lv2 thing.
> there was clearly no consensus. 
> 
> As long as its only 100 lines of gob code this is
> not worth being a separate package though ;}
> 
> but as long as there is no release of libslv2
> we can not have libslv2 dependencies in a release.
> 
> but we should be ready, when there is a release.
> i would like to see lv2 in distros pretty fast.
> 
> perhaps we should have some sort of experimental package/playground
> or something ?  where we can deposit code with "unsatisfied depencies".

yeah. whip something up with AM_CONDITIONAL AC_ARG_ENABLE and
AC_DEFINE to give you an "experimental" domain that you can use
how you like. i'd only request that you don't embed anything too deeply
so as to make the separate packages approach difficult when the
time comes.

loki, you ok with that?


pete.



From torbenh at gmx.de  Fri Jul 13 01:26:41 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Fri, 13 Jul 2007 01:26:41 +0200
Subject: [Phat-dev] phat knob changes
In-Reply-To: <1184273813.6269.106.camel@majesterium>
References: <1184252651.6269.24.camel@majesterium>
	<1184253096.6269.28.camel@majesterium>
	<ec9314860707120826j1c8887f5s2730be34ef5e4015@mail.gmail.com>
	<20070712172915.GF23036@mobilat>
	<1184273813.6269.106.camel@majesterium>
Message-ID: <20070712232641.GI23036@mobilat>

On Thu, Jul 12, 2007 at 09:56:53PM +0100, pete shorthose wrote:
> On Thu, 2007-07-12 at 19:29 +0200, torbenh at gmx.de wrote:
> > On Fri, Jul 13, 2007 at 01:26:09AM +1000, Loki Davison wrote:
> > > On 7/13/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > > looks like i didn't break the log code.
> > > > which is nice.
> > > >
> > > > loki, in case i wasn't clear, i'm not going to
> > > > commit until i hear from you whether you
> > > > are ok with the bulk commit.
> > > >
> > > > either way, knobs will work properly in glade
> > > > as soon as it's committed :)
> > > >
> > > > pete.
> > > >
> > > 
> > > Go for it. I'll need to fix the new slider to be in line with this as
> > > i based the gtk class stuff off the knob!! lol, thought it was the
> > > most recent/least dodgy.
> > 
> > nice work pete.
> > i will try to derive the knob from GtkRange, as soon as you commit.
> > then the code for the adjustment handling would also fade away.
> 
> good idea. there's still some superfluous junk in there but you
> can't have everything and i think it's a better bet than GtkWidget on
> balance.
> 
> > however for the PhatKnob and PhatFanSliders we need to provide backwards compatibility.
> 
> we discussed this recently and the consensus seemed to be that 
> it'd be better to rip up the API and bump the library version.
> loki is the only known user of PhatKnob and i'll happily update anyone's
> code to suit a changed PhatFanSlider. (probably only specimen?)
> normally this kind of thing is a big taboo but you'll rarely get 
> a better set of mitigating circumstances than these.

i dont seem to catch you guys on irc... are you on #lad ?
or is there a #phat channel ?


> 
> > but all other new widgets could be derived from GtkRange and we would
> > have a common base class.
> 
> gets my vote. i think we could still do with additional abstract classes
> for code common to say, all sliders or all knobs. we can evolve that
> as we go though. it's pretty easy to change things around up until
> we the time we release.

k.

> 
> > it would also be nice to have the widget window removed from the knob
> > and use the parents window. i would go for this...
> 
> what are the benefits / drawbacks of doing so?
> i assume we still need a window (event box?) for mouse updates, tooltips
> and the like
> and tricks like backing store would no longer be applicable..

but not on every single widget.
i removed the window from my tech-knob, and now the transparency is
working nicely.
i think there is a problem with different windows.
i will check... 


i just started to use pycairo to render some lemur style knobs.
thinking about how to incorporate this into a knob.
but i will use the step of going through a pixmap and using the pixmap
knobs for this first...

any ideas where to commit this code ?
its just a small python script which outputs a bunch of pngs.

> 
> pete.
> 
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From torbenh at gmx.de  Fri Jul 13 01:28:58 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Fri, 13 Jul 2007 01:28:58 +0200
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <1184280769.17331.17.camel@majesterium>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
	<ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
	<20070711160217.GC23472@mobilat>
	<ec9314860707111701y9acae16m8fdf29995f22e879@mail.gmail.com>
	<20070712151744.GB23036@mobilat>
	<1184254003.6269.42.camel@majesterium>
	<ec9314860707120833y3aedf36bw835a9eaafeab80cd@mail.gmail.com>
	<20070712172042.GE23036@mobilat>
	<1184280769.17331.17.camel@majesterium>
Message-ID: <20070712232858.GJ23036@mobilat>

On Thu, Jul 12, 2007 at 11:52:49PM +0100, pete shorthose wrote:
> On Thu, 2007-07-12 at 19:20 +0200, torbenh at gmx.de wrote:
> 
> > i did not commit the lv2 thing.
> > there was clearly no consensus. 
> > 
> > As long as its only 100 lines of gob code this is
> > not worth being a separate package though ;}
> > 
> > but as long as there is no release of libslv2
> > we can not have libslv2 dependencies in a release.
> > 
> > but we should be ready, when there is a release.
> > i would like to see lv2 in distros pretty fast.
> > 
> > perhaps we should have some sort of experimental package/playground
> > or something ?  where we can deposit code with "unsatisfied depencies".
> 
> yeah. whip something up with AM_CONDITIONAL AC_ARG_ENABLE and
> AC_DEFINE to give you an "experimental" domain that you can use
> how you like. i'd only request that you don't embed anything too deeply
> so as to make the separate packages approach difficult when the
> time comes.

well... the --enable-libslv2 conditional is already in place.
but i dont see how to build the experimental package in that case...

> 
> loki, you ok with that?
> 
> 
> pete.
> 
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From zenadsl6252 at zen.co.uk  Fri Jul 13 02:09:42 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Fri, 13 Jul 2007 01:09:42 +0100
Subject: [Phat-dev] phat knob changes
In-Reply-To: <20070712232641.GI23036@mobilat>
References: <1184252651.6269.24.camel@majesterium>
	<1184253096.6269.28.camel@majesterium>
	<ec9314860707120826j1c8887f5s2730be34ef5e4015@mail.gmail.com>
	<20070712172915.GF23036@mobilat>
	<1184273813.6269.106.camel@majesterium>
	<20070712232641.GI23036@mobilat>
Message-ID: <1184285382.18935.37.camel@majesterium>

On Fri, 2007-07-13 at 01:26 +0200, torbenh at gmx.de wrote:
> On Thu, Jul 12, 2007 at 09:56:53PM +0100, pete shorthose wrote:
> > On Thu, 2007-07-12 at 19:29 +0200, torbenh at gmx.de wrote:
> > > On Fri, Jul 13, 2007 at 01:26:09AM +1000, Loki Davison wrote:
> > > > On 7/13/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > > > looks like i didn't break the log code.
> > > > > which is nice.
> > > > >
> > > > > loki, in case i wasn't clear, i'm not going to
> > > > > commit until i hear from you whether you
> > > > > are ok with the bulk commit.
> > > > >
> > > > > either way, knobs will work properly in glade
> > > > > as soon as it's committed :)
> > > > >
> > > > > pete.
> > > > >
> > > > 
> > > > Go for it. I'll need to fix the new slider to be in line with this as
> > > > i based the gtk class stuff off the knob!! lol, thought it was the
> > > > most recent/least dodgy.
> > > 
> > > nice work pete.
> > > i will try to derive the knob from GtkRange, as soon as you commit.
> > > then the code for the adjustment handling would also fade away.
> > 
> > good idea. there's still some superfluous junk in there but you
> > can't have everything and i think it's a better bet than GtkWidget on
> > balance.
> > 
> > > however for the PhatKnob and PhatFanSliders we need to provide backwards compatibility.
> > 
> > we discussed this recently and the consensus seemed to be that 
> > it'd be better to rip up the API and bump the library version.
> > loki is the only known user of PhatKnob and i'll happily update anyone's
> > code to suit a changed PhatFanSlider. (probably only specimen?)
> > normally this kind of thing is a big taboo but you'll rarely get 
> > a better set of mitigating circumstances than these.
> 
> i dont seem to catch you guys on irc... are you on #lad ?
> or is there a #phat channel ?

no #phat channel or significant #lad discussion. you are in the right
place,
the discussion started here:

https://lists.berlios.de/pipermail/phat-dev/2007-June/000004.html

i'd be happy to idle in a #phat channel but we risk privatising the
debate.

> > > it would also be nice to have the widget window removed from the knob
> > > and use the parents window. i would go for this...
> > 
> > what are the benefits / drawbacks of doing so?
> > i assume we still need a window (event box?) for mouse updates, tooltips
> > and the like
> > and tricks like backing store would no longer be applicable..
> 
> but not on every single widget.
> i removed the window from my tech-knob, and now the transparency is
> working nicely.
> i think there is a problem with different windows.
> i will check... 

ok. i implemented a static gui for controlling the unreleased 
amsynth dssi plugin a while ago. i scrapped the gui in the
end but i did find that i had to manually grab and set the background
of the knobs. not nice. (i think i sent you a patch at the time
but you were pretty busy) if we can get automatic
transparency (ie: that the designated background is
reflected in transparent frame areas), then i'd be very happy, but
if it limited the circumstances in which i could use the knob,
not so much with the happiness,

> i just started to use pycairo to render some lemur style knobs.
> thinking about how to incorporate this into a knob.
> but i will use the step of going through a pixmap and using the pixmap
> knobs for this first...

i have a functional cairo knob waiting to be cleaned up
and imported but it's derived from a common knob base class.
see the above archived list thread for more on that.

it looks a bit shitty but that's the problem, the code is static.
http://www.zenadsl6252.zen.co.uk/cairo-knob-glade.png

we discussed the possibility of creating a plugin/callback
system with an API so that people can use the common 
knob API but effectively supply their own expose function.

it seems the best way to introduce some visual flexibility in
lieu of a mark up language and interpreter for dynamic 
cairo graphics. whether people would use it or not, i dunno.

the same applies to the other native widgets.

> any ideas where to commit this code ?
> its just a small python script which outputs a bunch of pngs.

not sure.  how about a /misc/devname/ convention
for storing pertinent code that isn't part of phat?

eg /misc/torben/ ?

loki is the decider so i guess do it quick before he says no.

:P

(there's always svn revert)

pete.



From loki.davison at gmail.com  Fri Jul 13 02:46:59 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Fri, 13 Jul 2007 10:46:59 +1000
Subject: [Phat-dev] LV2 tree store
In-Reply-To: <1184280769.17331.17.camel@majesterium>
References: <20070710123032.GG23950@mobilat>
	<1184071325.23642.86.camel@majesterium>
	<ec9314860707100608j24abcbf3x84878dfc87f1ec41@mail.gmail.com>
	<20070711160217.GC23472@mobilat>
	<ec9314860707111701y9acae16m8fdf29995f22e879@mail.gmail.com>
	<20070712151744.GB23036@mobilat>
	<1184254003.6269.42.camel@majesterium>
	<ec9314860707120833y3aedf36bw835a9eaafeab80cd@mail.gmail.com>
	<20070712172042.GE23036@mobilat>
	<1184280769.17331.17.camel@majesterium>
Message-ID: <ec9314860707121746n1d7aeacdqb436b71a065e5629@mail.gmail.com>

On 7/13/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> On Thu, 2007-07-12 at 19:20 +0200, torbenh at gmx.de wrote:
>
> > i did not commit the lv2 thing.
> > there was clearly no consensus.
> >
> > As long as its only 100 lines of gob code this is
> > not worth being a separate package though ;}
> >
> > but as long as there is no release of libslv2
> > we can not have libslv2 dependencies in a release.
> >
> > but we should be ready, when there is a release.
> > i would like to see lv2 in distros pretty fast.
> >
> > perhaps we should have some sort of experimental package/playground
> > or something ?  where we can deposit code with "unsatisfied depencies".
>
> yeah. whip something up with AM_CONDITIONAL AC_ARG_ENABLE and
> AC_DEFINE to give you an "experimental" domain that you can use
> how you like. i'd only request that you don't embed anything too deeply
> so as to make the separate packages approach difficult when the
> time comes.
>
> loki, you ok with that?
>
>
> pete.

Yeah, everything should be in SVN. Either in the trunk in a sub-dir or
if it's really out there in a branch. I'd count this as trunk with
some AC_DEFINE s. Everything should be in SVN though, no tarballs of
features ever. SVN is just a lot easier to access and manage.
Branching is easy/fast.

Loki


From torbenh at gmx.de  Fri Jul 13 06:19:07 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Fri, 13 Jul 2007 06:19:07 +0200
Subject: [Phat-dev] transparency... only works on windowless widgets...
Message-ID: <20070713041907.GK23036@mobilat>


good morning...

as you guys noted i commited the tech-knob yesterday.
i was also coding a small script which generates knob-anims using
pycairo. the knob is not beautyful, but at least this is proof of
concept stuff....

first of all the screenshot:

http://galan.sf.net/transparent-tech-knob.png

transparency does not work like this with the PhatKnob currently, as its
got its own window...

here is the generated knobanim:

http://galan.sf.net/out.png

i commit the generator python script into cvs under utils

still needs gradients and patterns... 
but perhaps this will workout also...

the techknob is fixed to 32x32 so we need the resize ability from
the PhatKnob ... i change it to derive from GtkRange perhaps this is
quite painless.



-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From t_w_ at freenet.de  Fri Jul 13 09:48:49 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Fri, 13 Jul 2007 09:48:49 +0200
Subject: [Phat-dev] phat knob changes
In-Reply-To: <1184273813.6269.106.camel@majesterium>
References: <1184252651.6269.24.camel@majesterium>
	<1184253096.6269.28.camel@majesterium>
	<ec9314860707120826j1c8887f5s2730be34ef5e4015@mail.gmail.com>
	<20070712172915.GF23036@mobilat>
	<1184273813.6269.106.camel@majesterium>
Message-ID: <20070713074849.GA4202@charly.SWORD>

On Thu, Jul 12, 2007 at 09:56:53PM +0100, pete shorthose wrote:
> 
> we discussed this recently and the consensus seemed to be that 
> it'd be better to rip up the API and bump the library version.
> loki is the only known user of PhatKnob and i'll happily update anyone's
> code to suit a changed PhatFanSlider. (probably only specimen?)
> normally this kind of thing is a big taboo but you'll rarely get 
> a better set of mitigating circumstances than these.

That was at least my point and Loki didn't disagree from what I recall :)
Nedko uses fan-sliders in Zynjacko and JACK Mixer.


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From zenadsl6252 at zen.co.uk  Fri Jul 13 19:43:16 2007
From: zenadsl6252 at zen.co.uk (pete)
Date: Fri, 13 Jul 2007 18:43:16 +0100
Subject: [Phat-dev] gob
Message-ID: <1184348596.31632.16.camel@one>

torben, i've backed out the gob dependency.

the reality is that pretty much every other dev
working on phat is comfortable with gtk, boiler
plate and all. you will be making life harder
for us and raising the bar for other devs to
get involved in order to make it a bit
quicker for you to write gobjects.

so i have a proposition. given that the
benefits of gob are essentially over after the
_first_ time you write the gob file and generate
the code (bar any drastic internal changes),
i'll offer to take your gobs and in
conjunction with the generated C, create a
normal C widget which can then be included.

that way, incremental updates are easy for all
of us, we don't add an extra compile time 
dependency and the bar for other devs to join
the project is kept low.

good enough?

pete





From torbenh at gmx.de  Fri Jul 13 07:42:47 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Fri, 13 Jul 2007 07:42:47 +0200
Subject: [Phat-dev] PhatRangeKnob
Message-ID: <20070713054247.GL23036@mobilat>


good morning...

i ported the PhatKnob to using GtkRange.
this was quite painless...

however there were some problems, i chose to not tackle yet...
namely the private adjustment and log-mode

this needs some discussion... and i am too tired to make correct
decisions now. 

i dont really like the idea of having a private adjustment. Although
this seems quite elegant for logmode...

well here is the diff i go to sleep now... beore the sun crosses my
plans... hopefully my internet connection will reappear soon...



-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language
-------------- next part --------------
Index: phat/phatknob.c
===================================================================
--- phat/phatknob.c	(revision 83)
+++ phat/phatknob.c	(working copy)
@@ -40,33 +40,21 @@
     STATE_SCROLL,
 };
 
-/* signals */
-enum
-{
-    VALUE_CHANGED_SIGNAL,
-    CHANGED_SIGNAL,
-    LAST_SIGNAL,
-};
 
 /* properties */
 enum
 {
     PROP_0,
-    PROP_ADJUSTMENT,
-    PROP_UPDATE_POLICY,
     PROP_LOG,
     PROP_INVERTED,
 };
 
-static int signals[LAST_SIGNAL];
 static void phat_knob_class_init         (PhatKnobClass *klass);
 static void phat_knob_init               (PhatKnob *knob);
 static void phat_knob_destroy            (GtkObject *object);
 static void phat_knob_realize            (GtkWidget *widget);
 static void phat_knob_size_request       (GtkWidget *widget,
                                            GtkRequisition *requisition);
-static void phat_knob_size_allocate      (GtkWidget *widget, 
-                                           GtkAllocation *allocation);
 static gint phat_knob_expose             (GtkWidget *widget, 
                                            GdkEventExpose *event);
 static gint phat_knob_button_press       (GtkWidget *widget, 
@@ -75,26 +63,14 @@
                                            GdkEventButton *event);
 static gint phat_knob_motion_notify      (GtkWidget *widget, 
                                            GdkEventMotion *event);
-static gint phat_knob_timer              (PhatKnob *knob);
 static gint phat_knob_scroll             (GtkWidget *widget, 
                                            GdkEventScroll *event);
-static void phat_knob_update_mouse_update(PhatKnob *knob);
 static void phat_knob_update_mouse       (PhatKnob *knob, 
                                            gint x,
                                            gint y,
                                            gboolean absolute);
-static void phat_knob_update             (PhatKnob *knob);
-static void phat_knob_internal_adjustment_changed (GtkAdjustment *adjustment,
-                                                    gpointer data);
-static void phat_knob_internal_adjustment_value_changed(GtkAdjustment *adjustment,
-                                                         gpointer data);
 
-static void phat_knob_adjustment_changed(GtkAdjustment *adjustment,
-                                          gpointer data);
-static void phat_knob_adjustment_value_changed(GtkAdjustment *adjustment,
-                                                gpointer data);
 
-static void phat_knob_update_internal_adjustment(PhatKnob * knob);
 static void phat_knob_set_property      (GObject *object, 
 			                              guint prop_id, 
 			                        const GValue *value, 
@@ -111,7 +87,7 @@
 
 /* Local data */
 
-G_DEFINE_TYPE (PhatKnob, phat_knob, GTK_TYPE_WIDGET);
+G_DEFINE_TYPE (PhatKnob, phat_knob, GTK_TYPE_RANGE);
 
 static void phat_knob_class_init (PhatKnobClass *klass) {
     GtkObjectClass   *object_class;
@@ -130,57 +106,12 @@
     widget_class->realize =        phat_knob_realize;
     widget_class->expose_event =   phat_knob_expose;
     widget_class->size_request =   phat_knob_size_request;
-    widget_class->size_allocate =  phat_knob_size_allocate;
     widget_class->button_press_event = phat_knob_button_press;
     widget_class->button_release_event = phat_knob_button_release;
     widget_class->motion_notify_event = phat_knob_motion_notify;
     widget_class->scroll_event =   phat_knob_scroll;
 
-    /**
-     * PhatKnob::value-changed:
-     * @knob: the object on which the signal was emitted
-     *
-     * The "value-changed" signal is emitted when the value of the
-     * knobbutton's adjustment changes.
-     *
-     */
-    signals[VALUE_CHANGED_SIGNAL] =
-        g_signal_new ("value-changed",
-                      G_TYPE_FROM_CLASS (klass),
-                      G_SIGNAL_RUN_FIRST | G_SIGNAL_ACTION,
-                      G_STRUCT_OFFSET (PhatKnobClass, value_changed),
-                      NULL, NULL,
-                      g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
-    klass->value_changed = NULL;
-    
   /**
-    * PhatKnob:adjustment:
-    *
-    * The GtkAdjustment that contains the current values of this knob
-    */ 
-    g_object_class_install_property (g_object_class,
-                                      PROP_ADJUSTMENT,
-                                      g_param_spec_object ("adjustment",
-							          "Adjustment",
-							          "The GtkAdjustment that contains the current values of this knob",
-                                      GTK_TYPE_ADJUSTMENT,
-                                      G_PARAM_READWRITE|G_PARAM_CONSTRUCT));
-  /**
-    * PhatKnob:update-policy:
-    *
-    * The update policy for this knob
-    *
-    * Since: 4.2
-    */                               
-    g_object_class_install_property (g_object_class,
-                                      PROP_UPDATE_POLICY,
-                                      g_param_spec_enum ("update-policy",
-							          "Update Policy",
-							          "The update policy for this widget",
-                                      GTK_TYPE_UPDATE_TYPE,
-                                      GTK_UPDATE_CONTINUOUS,
-                                      G_PARAM_READWRITE|G_PARAM_CONSTRUCT));
-  /**
     * PhatKnob:log-mode:
     *
     * Whether log mode is enabled. log mode shifts the emphasis towards
@@ -215,20 +146,7 @@
     knob->state = STATE_IDLE;
     knob->saved_x = knob->saved_y = 0;
     knob->size = KNOB_SIZE;
-    knob->timer = 0;
     knob->pixbuf = NULL;
-    knob->old_value = 0.0;
-    knob->old_lower = 0.0;
-    knob->old_upper = 0.0;
-    knob->adjustment = NULL;
-    knob->adjustment_prv = (GtkAdjustment*) gtk_adjustment_new (0.0, 0.0, 1.0, 0.1, 0.1, 0.0);
-    
-    g_signal_connect(G_OBJECT (knob->adjustment_prv), "changed",
-                       G_CALLBACK(phat_knob_internal_adjustment_changed),
-                       (gpointer) knob);
-    g_signal_connect(G_OBJECT (knob->adjustment_prv), "value_changed",
-                       G_CALLBACK(phat_knob_internal_adjustment_value_changed),
-                       (gpointer) knob);
 }
 
 
@@ -248,7 +166,7 @@
 GtkWidget *phat_knob_new(GtkAdjustment *adjustment) {
 
     return g_object_new (PHAT_TYPE_KNOB,
-                          "adjustmnet",
+                          "adjustment",
                            adjustment,
                            NULL);
 }
@@ -280,24 +198,6 @@
     return phat_knob_new (adj);
 }
 
-/* Update internal adjustment from external one */
-static void
-phat_knob_update_internal_adjustment(
-    PhatKnob * knob)
-{
-    if (knob->is_log)
-    {   
-        gtk_adjustment_set_value(
-            (GtkAdjustment *)knob->adjustment_prv,
-            log(knob->adjustment->value - knob->adjustment->lower) / log(knob->adjustment->upper - knob->adjustment->lower));
-    }
-    else
-    {
-        gtk_adjustment_set_value(
-            (GtkAdjustment *)knob->adjustment_prv,
-            (knob->adjustment->value - knob->adjustment->lower) / (knob->adjustment->upper - knob->adjustment->lower));
-    }
-}
 
 /**
  * phat_knob_set_value:
@@ -313,13 +213,7 @@
 {
     g_return_if_fail (PHAT_IS_KNOB (knob));
 
-    value = CLAMP (value,
-                   knob->adjustment->lower,
-                   knob->adjustment->upper);
-
-    gtk_adjustment_set_value (knob->adjustment, value);
-
-    phat_knob_update_internal_adjustment(knob);
+    gtk_range_set_value( GTK_RANGE( knob ), value );
 }
 
 /**
@@ -335,6 +229,12 @@
 {
     g_return_val_if_fail (PHAT_IS_KNOB (knob), 0);
 
+    return gtk_range_get_value( GTK_RANGE( knob ) );
+
+    // XXX: well this is bad :( dunno how/where to the log dance
+    //      perhaps in the expose/mouse stuff... but its not nice there :(
+
+#if 0
     if(knob->is_log)
     {
         gtk_adjustment_set_value((GtkAdjustment *)knob->adjustment, exp((knob->adjustment_prv->value) * 
@@ -346,8 +246,11 @@
     }
 
     return knob->adjustment->value;
+#endif
 }
 
+#if 0
+
 /**
  * phat_knob_set_range:
  * @knob: a #PhatKnob
@@ -375,7 +278,10 @@
     gtk_adjustment_changed (knob->adjustment);
     gtk_adjustment_set_value (knob->adjustment, value);
 }
+#endif
 
+// XXX: this needs to use the property also....
+
 void phat_knob_set_log (PhatKnob* knob, gboolean is_log)
 {
     g_return_if_fail (PHAT_IS_KNOB (knob));
@@ -398,19 +304,6 @@
 
     knob = PHAT_KNOB(object);
 
-    if (knob->adjustment) {
-		// unref external adjustment rather than destroy it as it might be shared
-        g_object_unref(GTK_OBJECT(knob->adjustment));
-        knob->adjustment = NULL;
-    }
-
-    if (knob->adjustment_prv)
-    {
-        //didn't call ref on this one so just destroy
-        gtk_object_destroy ((GtkObject*)knob->adjustment_prv);
-        knob->adjustment_prv = NULL;
-    }
-
     if (knob->mask) {
         gdk_bitmap_unref(knob->mask);
         knob->mask = NULL;
@@ -433,61 +326,35 @@
     g_return_val_if_fail(knob != NULL, NULL);
     g_return_val_if_fail(PHAT_IS_KNOB(knob), NULL);
 
-    return knob->adjustment;
+    return gtk_range_get_adjustment( GTK_RANGE( knob ) );
 }
 
 void phat_knob_set_update_policy(PhatKnob *knob, GtkUpdateType policy) {
     g_return_if_fail (knob != NULL);
     g_return_if_fail (PHAT_IS_KNOB (knob));
 
-    knob->policy = policy;
+    gtk_range_set_update_policy( GTK_RANGE( knob ), policy );
 }
 
 void phat_knob_set_adjustment(PhatKnob *knob, GtkAdjustment *adjustment) {
     g_return_if_fail (knob != NULL);
     g_return_if_fail (PHAT_IS_KNOB (knob));
 
-    if (!GTK_IS_ADJUSTMENT (adjustment))
-        adjustment = (GtkAdjustment*) gtk_adjustment_new (0.0, 0.0, 10.0, 0.1, 0.1, 0.2);
-    
-    if (knob->adjustment)
-    {
-        g_signal_handlers_disconnect_matched(G_OBJECT(knob->adjustment),
-                                              G_SIGNAL_MATCH_DATA,
-                                              0, 0, NULL, NULL,
-                                              knob);
-        g_object_unref(G_OBJECT (knob->adjustment));
-    }
-    
-    knob->adjustment = adjustment;
-    g_object_ref_sink(G_OBJECT(adjustment));
-    
-    g_signal_connect(G_OBJECT (adjustment), "changed",
-                       G_CALLBACK(phat_knob_adjustment_changed),
-                       (gpointer) knob);
-    g_signal_connect(G_OBJECT (adjustment), "value_changed",
-                       G_CALLBACK(phat_knob_adjustment_value_changed),
-                       (gpointer) knob);
-
-    knob->old_value = adjustment->value;
-    knob->old_lower = adjustment->lower;
-    knob->old_upper = adjustment->upper;
-
-    phat_knob_update(knob);
+    gtk_range_set_adjustment( GTK_RANGE( knob ), adjustment );
 }
 
 
 static void phat_knob_realize(GtkWidget *widget) {
     PhatKnob *knob;
-    GdkWindowAttr attributes;
-    gint attributes_mask,i=0;
-    GdkColor color = { 0, 0xffff, 0, 0 };
     extern GdkPixbuf **pixbuf;
+    int i=0;
 
     g_return_if_fail(widget != NULL);
     g_return_if_fail(PHAT_IS_KNOB(widget));
 
-    GTK_WIDGET_SET_FLAGS(widget, GTK_REALIZED);
+    if (GTK_WIDGET_CLASS(phat_knob_parent_class)->realize)
+        (*GTK_WIDGET_CLASS(phat_knob_parent_class)->realize)(widget);
+
     knob = PHAT_KNOB(widget);
 
     /* FIXME keeps khagan from drawing knob */
@@ -495,27 +362,6 @@
     {
 		knob->size = widget->allocation.height;
     }
-
-    attributes.x = widget->allocation.x;
-    attributes.y = widget->allocation.y;
-    attributes.width = knob->size;
-    attributes.height = knob->size;
-    attributes.wclass = GDK_INPUT_OUTPUT;
-    attributes.window_type = GDK_WINDOW_CHILD;
-    attributes.event_mask =
-        gtk_widget_get_events (widget) | 
-        GDK_EXPOSURE_MASK | GDK_BUTTON_PRESS_MASK | 
-        GDK_BUTTON_RELEASE_MASK | GDK_POINTER_MOTION_MASK |
-        GDK_POINTER_MOTION_HINT_MASK | GDK_SCROLL_MASK;
-    attributes.visual = gtk_widget_get_visual(widget);
-    attributes.colormap = gtk_widget_get_colormap(widget);
-
-    attributes_mask = GDK_WA_X | GDK_WA_Y | GDK_WA_VISUAL | GDK_WA_COLORMAP;
-    widget->window = gdk_window_new(widget->parent->window, &attributes, attributes_mask);
-
-    widget->style = gtk_style_attach(widget->parent->style, widget->window);
-
-    gdk_window_set_user_data(widget->window, widget);
     
     /* init first pixbuf */
 	if(pixbuf == NULL){
@@ -538,17 +384,6 @@
     } else { /* if not NULL set fitting pixbuf */
 		knob->pixbuf = pixbuf[i];
     }
-
-    gtk_style_set_background(widget->style, widget->window, GTK_STATE_NORMAL);
-
-    knob->mask_gc = gdk_gc_new(widget->window);
-    gdk_gc_copy(knob->mask_gc, widget->style->bg_gc[GTK_STATE_NORMAL]);
-    gdk_gc_set_clip_mask(knob->mask_gc, knob->mask);
-
-    knob->red_gc = gdk_gc_new(widget->window);
-    gdk_gc_copy(knob->red_gc, widget->style->bg_gc[GTK_STATE_NORMAL]);
-    gdk_colormap_alloc_color(attributes.colormap, &color, FALSE, TRUE);
-    gdk_gc_set_foreground(knob->red_gc, &color);
 }
 
 static void phat_knob_size_request (GtkWidget *widget, GtkRequisition *requisition) {
@@ -559,24 +394,6 @@
     requisition->height = knob->size;
 }
 
-static void phat_knob_size_allocate (GtkWidget *widget, GtkAllocation *allocation) {
-    PhatKnob *knob;
-
-    g_return_if_fail(widget != NULL);
-    g_return_if_fail(PHAT_IS_KNOB(widget));
-    g_return_if_fail(allocation != NULL);
-
-    widget->allocation = *allocation;
-    knob = PHAT_KNOB(widget);
-
-    if (GTK_WIDGET_REALIZED(widget)) {
-        gdk_window_move_resize(widget->window,
-                               allocation->x, allocation->y,
-                               knob->size, knob->size);
-    }
-    
-}
-
 static gint phat_knob_expose(GtkWidget *widget, GdkEventExpose *event) {
     PhatKnob *knob;
     gfloat dx, dy, throw;
@@ -593,19 +410,25 @@
     // basically we need to work out if the step size is integer
     // if it is, centre the knob about the vertical
 
-    dx = knob->adjustment_prv->value - knob->adjustment_prv->lower;     // value, from 0
-    dy = knob->adjustment_prv->upper - knob->adjustment_prv->lower;     // range
+    GtkAdjustment *adj = gtk_range_get_adjustment( GTK_RANGE( knob ) );
 
-    if (knob->adjustment_prv->step_increment != 1.0f) {
+    dx = adj->value - adj->lower;     // value, from 0
+    dy = adj->upper - adj->lower;     // range
+
+    if (adj->step_increment != 1.0f) {
         dx=(int)(51*dx/dy)*knob->size;
     } else {
         throw=4;
         dx=(int)(51*dx/throw+(24-throw))*knob->size;
     }
 
-    gdk_draw_pixbuf(widget->window, knob->mask_gc, knob->pixbuf,
-                    dx, 0, 0, 0, knob->size, knob->size,GDK_RGB_DITHER_NONE,0,0);
+    gdk_pixbuf_render_to_drawable_alpha( knob->pixbuf, widget->window,
+	    dx, 0, widget->allocation.x, widget->allocation.y,
+	    knob->size, knob->size, GDK_PIXBUF_ALPHA_FULL, 0, 0,0,0 );
 
+//    gdk_draw_pixbuf(widget->window, knob->mask_gc, knob->pixbuf,
+//                    dx, 0, 0, 0, knob->size, knob->size,GDK_RGB_DITHER_NONE,0,0);
+
     return FALSE;
 }
 
@@ -649,6 +472,7 @@
     g_return_val_if_fail(event != NULL, FALSE);
 
     knob = PHAT_KNOB(widget);
+    GtkAdjustment *adj = gtk_range_get_adjustment( GTK_RANGE( knob ) );
 
     switch (knob->state) {
     case STATE_PRESSED:
@@ -657,15 +481,13 @@
 
         switch (event->button) {
         case 1:
-            knob->adjustment_prv->value -= knob->adjustment_prv->page_increment;
-            g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-            g_signal_emit_by_name(G_OBJECT(knob->adjustment_prv), "value_changed");
+            adj->value -= adj->page_increment;
+            g_signal_emit_by_name(G_OBJECT(adj), "value_changed");
             break;
 
         case 3:
-            knob->adjustment_prv->value += knob->adjustment_prv->page_increment;
-            g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-            g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
+            adj->value += adj->page_increment;
+            g_signal_emit_by_name(G_OBJECT (adj), "value_changed");
             break;
 
         default:
@@ -677,11 +499,6 @@
         gtk_grab_remove(widget);
         knob->state = STATE_IDLE;
 
-        if (knob->policy != GTK_UPDATE_CONTINUOUS && knob->old_value != knob->adjustment_prv->value)
-        {
-            g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-            g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
-        }
         break;
 
     default:
@@ -736,70 +553,42 @@
        gdouble lstep;
 
        knob = PHAT_KNOB(widget);
+    GtkAdjustment *adj = gtk_range_get_adjustment( GTK_RANGE( knob ) );
 
     gtk_widget_grab_focus (widget);
 
     knob->state = STATE_SCROLL;
 
-    lstep = knob->adjustment->step_increment*20/(knob->adjustment->upper - knob->adjustment->lower);
+    //lstep = knob->adjustment->step_increment*20/(knob->adjustment->upper - knob->adjustment->lower);
+    // XXX: implemant...
+    lstep = 1.0;
 
        if(event->direction == GDK_SCROLL_UP){
-               knob->adjustment_prv->value += lstep;
-               if(knob->adjustment_prv->value < 0.5 + lstep/2 && knob->adjustment_prv->value > 0.5 - lstep/2)
-                       knob->adjustment_prv->value =0.5;
+               adj->value += lstep;
+               if(adj->value < 0.5 + lstep/2 && adj->value > 0.5 - lstep/2)
+                       adj->value =0.5;
        } else if(event->direction == GDK_SCROLL_DOWN){
-               knob->adjustment_prv->value -= lstep;
-               if(knob->adjustment_prv->value < 0.5 + lstep/2 && knob->adjustment_prv->value > 0.5 - lstep/2)
-                       knob->adjustment_prv->value =0.5;
+               adj->value -= lstep;
+               if(adj->value < 0.5 + lstep/2 && adj->value > 0.5 - lstep/2)
+                       adj->value =0.5;
        } else if(event->direction == GDK_SCROLL_LEFT){
-               knob->adjustment_prv->value += lstep*3;
-               if(knob->adjustment_prv->value < 0.5 + 1.5*lstep && knob->adjustment_prv->value > 0.5 - 1.5*lstep)
-                       knob->adjustment_prv->value =0.5;
+               adj->value += lstep*3;
+               if(adj->value < 0.5 + 1.5*lstep && adj->value > 0.5 - 1.5*lstep)
+                       adj->value =0.5;
        } else {
-               knob->adjustment_prv->value -= lstep*3;
-               if(knob->adjustment_prv->value < 0.5 + 1.5*lstep && knob->adjustment_prv->value > 0.5 - 1.5*lstep)
-                       knob->adjustment_prv->value =0.5;
+               adj->value -= lstep*3;
+               if(adj->value < 0.5 + 1.5*lstep && adj->value > 0.5 - 1.5*lstep)
+                       adj->value =0.5;
        }
 
     knob->state = STATE_IDLE;
-       if(knob->adjustment_prv->value == 0.5)g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-    g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
+    g_signal_emit_by_name(G_OBJECT (adj), "value_changed");
 
        return TRUE;
 }
 
-static gint phat_knob_timer(PhatKnob *knob) {
-    g_return_val_if_fail(knob != NULL, FALSE);
-    g_return_val_if_fail(PHAT_IS_KNOB(knob), FALSE);
 
-    if (knob->policy == GTK_UPDATE_DELAYED)
-    {
-        g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-        g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
-    }
-    return FALSE;       /* don't keep running this timer */
-}
 
-static void phat_knob_update_mouse_update(PhatKnob *knob) {
-    if (knob->policy == GTK_UPDATE_CONTINUOUS)
-    {
-        g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
-        g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-    }
-    else 
-    {
-        gtk_widget_draw(GTK_WIDGET(knob), NULL);
-
-        if (knob->policy == GTK_UPDATE_DELAYED) {
-            if (knob->timer)
-                gtk_timeout_remove(knob->timer);
-
-            knob->timer = gtk_timeout_add (SCROLL_DELAY_LENGTH, (GtkFunction) phat_knob_timer,
-                                           (gpointer) knob);
-        }
-    }
-}
-
 static void phat_knob_update_mouse(PhatKnob *knob, gint x, gint y,
                                    gboolean absolute)
 {
@@ -808,8 +597,9 @@
 
     g_return_if_fail(knob != NULL);
     g_return_if_fail(PHAT_IS_KNOB(knob));
+    GtkAdjustment *adj = gtk_range_get_adjustment( GTK_RANGE( knob ) );
 
-    old_value = knob->adjustment_prv->value;
+    old_value = adj->value;
 
     angle = atan2(-y + (knob->size>>1), x - (knob->size>>1));
 
@@ -820,8 +610,8 @@
             angle += 2;
 
         new_value = -(2.0/3.0) * (angle - 1.25);   /* map [1.25pi, -0.25pi] onto [0, 1] */
-        new_value *= knob->adjustment_prv->upper - knob->adjustment_prv->lower;
-        new_value += knob->adjustment_prv->lower;
+        new_value *= adj->upper - adj->lower;
+        new_value += adj->lower;
 
     } else {
 
@@ -837,115 +627,35 @@
             dh *= angle * angle;
         }
 
-        new_value = knob->adjustment_prv->value +
-            dv * knob->adjustment_prv->step_increment +
-            dh * (knob->adjustment_prv->upper -
-                  knob->adjustment_prv->lower) / 200.0f;
+        new_value = adj->value +
+            dv * adj->step_increment +
+            dh * (adj->upper -
+                  adj->lower) / 200.0f;
     }
 
-    new_value = MAX(MIN(new_value, knob->adjustment_prv->upper),
-                    knob->adjustment_prv->lower);
+    new_value = MAX(MIN(new_value, adj->upper),
+                    adj->lower);
 
+#if 0
        /* keep knob from flipping between min and max */
        if (new_value ==1 && old_value == 0) {
-               knob->adjustment_prv->value = old_value;
+               adj->value = old_value;
        } else if (new_value ==0 && old_value == 1) {
-               knob->adjustment_prv->value = old_value;
+               adj->value = old_value;
        } else if (new_value - old_value > 0.2 || old_value - new_value > 0.2) {
-               knob->adjustment_prv->value = old_value;
+               adj->value = old_value;
        } else {
-               knob->adjustment_prv->value = new_value;
+               adj->value = new_value;
        }
+#endif
 
-    if (knob->adjustment_prv->value != old_value)
-        phat_knob_update_mouse_update(knob);
+    if (new_value != old_value)
+        gtk_range_set_value( GTK_RANGE( knob ), new_value );
 }
 
-static void phat_knob_update(PhatKnob *knob) {
-    gfloat new_value;
 
-    g_return_if_fail(knob != NULL);
-    g_return_if_fail(PHAT_IS_KNOB (knob));
 
-    new_value = knob->adjustment_prv->value;
-    if (knob->adjustment_prv->step_increment == 1) new_value = (int)(knob->adjustment_prv->value+0.5);
-
-    if (new_value < knob->adjustment_prv->lower)
-        new_value = knob->adjustment_prv->lower;
-
-    if (new_value > knob->adjustment_prv->upper)
-        new_value = knob->adjustment_prv->upper;
-
-    if (new_value != knob->adjustment_prv->value) {
-        knob->adjustment_prv->value = new_value;
-        g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-        g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
-    }
-
-    gtk_widget_draw(GTK_WIDGET(knob), NULL);
-}
-
-static void phat_knob_internal_adjustment_changed(GtkAdjustment *adjustment, gpointer data) {
-    PhatKnob *knob;
-
-    g_return_if_fail(adjustment != NULL);
-    g_return_if_fail(data != NULL);
-
-    knob = PHAT_KNOB(data);
-
-    if ((knob->old_value != adjustment->value) ||
-        (knob->old_lower != adjustment->lower) ||
-        (knob->old_upper != adjustment->upper)) {
-        phat_knob_update (knob);
-
-        knob->old_value = adjustment->value;
-        knob->old_lower = adjustment->lower;
-        knob->old_upper = adjustment->upper;
-    }
-}
-
-static void phat_knob_internal_adjustment_value_changed (GtkAdjustment *adjustment, gpointer data) {
-    PhatKnob *knob;
-
-    g_return_if_fail(adjustment != NULL);
-    g_return_if_fail(data != NULL);
-
-    knob = PHAT_KNOB(data);
-
-    if (knob->old_value != adjustment->value) {
-        phat_knob_update (knob);
-
-        knob->old_value = adjustment->value;
-    }
-
-    phat_knob_get_value(knob);  /* update value of external adjustment */
-}
-
 static void
-phat_knob_adjustment_changed(
-    GtkAdjustment * adjustment,
-    gpointer data)
-{
-    PhatKnob *knob;
-
-    knob = PHAT_KNOB(data);
-
-    phat_knob_set_range(knob, knob->adjustment->lower, knob->adjustment->upper);
-}
-
-static void
-phat_knob_adjustment_value_changed(
-    GtkAdjustment * adjustment,
-    gpointer data)
-{
-    PhatKnob *knob;
-
-    knob = PHAT_KNOB(data);
-
-    phat_knob_update_internal_adjustment(knob);
-}
-
-static void
 phat_knob_set_property (GObject      *object, 
 			            guint         prop_id, 
 			            const GValue *value, 
@@ -955,15 +665,9 @@
 
   switch (prop_id) 
     {
-    case PROP_ADJUSTMENT:
-      phat_knob_set_adjustment (knob, g_value_get_object (value));
-      break;
     case PROP_LOG:
       phat_knob_set_log (knob, g_value_get_boolean (value));
       break;
-    case PROP_UPDATE_POLICY:
-      phat_knob_set_update_policy (knob, g_value_get_enum (value));
-      break;
     case PROP_INVERTED:
       // shite all at the moment
       break;
@@ -983,15 +687,9 @@
 	
     switch (prop_id) 
     {
-        case PROP_ADJUSTMENT:
-          g_value_set_object (value, knob->adjustment);
-          break;
         case PROP_LOG:
           g_value_set_boolean (value, knob->is_log);
           break;
-        case PROP_UPDATE_POLICY:
-          g_value_set_enum (value, knob->policy);
-          break;
         case PROP_INVERTED:
           // shite all at the moment
           break;
Index: phat/phatknob.h
===================================================================
--- phat/phatknob.h	(revision 83)
+++ phat/phatknob.h	(working copy)
@@ -24,8 +24,7 @@
 #define __PHAT_KNOB_H__
 
 #include <gdk/gdk.h>
-#include <gtk/gtkadjustment.h>
-#include <gtk/gtkwidget.h>
+#include <gtk/gtkrange.h>
 
 G_BEGIN_DECLS
 
@@ -39,14 +38,8 @@
 typedef struct _PhatKnobClass   PhatKnobClass;
 
 struct _PhatKnob {
-    GtkWidget widget;
-    /* The adjustment object that stores the data for this knob */
-    GtkAdjustment *adjustment;
-    GtkAdjustment* adjustment_prv;
+    GtkRange range;
 
-
-    /* update policy (GTK_UPDATE_[CONTINUOUS/DELAYED/DISCONTINUOUS]) */
-    guint policy : 2;
     gboolean is_log;
 
     /* State of widget (to do with user interaction) */
@@ -56,27 +49,16 @@
     /* size of the widget */
     gint size;
 
-    /* ID of update timer, or 0 if none */
-    guint32 timer;
-
     /* Pixmap for knob */
     GdkPixbuf *pixbuf;
     GdkBitmap *mask;
     GdkGC *mask_gc;
     GdkGC *red_gc;
-
-    /* Old values from adjustment stored so we know when something changes */
-    gfloat old_value;
-    gfloat old_lower;
-    gfloat old_upper;
-
 };
 
 struct _PhatKnobClass
 {
-    GtkWidgetClass parent_class;
-
-    void (*value_changed) (PhatKnob* knob);
+    GtkRangeClass parent_class;
 };
 
 GType phat_knob_get_type ( );

From torbenh at gmx.de  Fri Jul 13 21:18:06 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Fri, 13 Jul 2007 21:18:06 +0200
Subject: [Phat-dev] gob
In-Reply-To: <1184348596.31632.16.camel@one>
References: <1184348596.31632.16.camel@one>
Message-ID: <20070713191806.GA10454@mobilat>

On Fri, Jul 13, 2007 at 06:43:16PM +0100, pete wrote:
> torben, i've backed out the gob dependency.
> 
> the reality is that pretty much every other dev
> working on phat is comfortable with gtk, boiler
> plate and all. you will be making life harder
> for us and raising the bar for other devs to
> get involved in order to make it a bit
> quicker for you to write gobjects.
> 
> so i have a proposition. given that the
> benefits of gob are essentially over after the
> _first_ time you write the gob file and generate
> the code (bar any drastic internal changes),
> i'll offer to take your gobs and in
> conjunction with the generated C, create a
> normal C widget which can then be included.
> 
> that way, incremental updates are easy for all
> of us, we don't add an extra compile time 
> dependency and the bar for other devs to join
> the project is kept low.
> 
> good enough?

yeah... i noticed yesterday that gob just sucks :)
during the porting of the PhatKnob i realized that copy paste is almost
as fast (if not faster) 

sorry for the inconveniences :)

> 
> pete
> 
> 
> 
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From zenadsl6252 at zen.co.uk  Fri Jul 13 22:56:07 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Fri, 13 Jul 2007 21:56:07 +0100
Subject: [Phat-dev] PhatSlider is now derived from GtkRange
Message-ID: <1184360167.14579.6.camel@majesterium>

i've committed changes to make PhatSlider derive from
GtkRange. it works (here anyway) but it's probably not
complete yet.

there's an awful lot of specific stuff in GtkRange which
we are unlikely to use in most widgets and i'm not
sure that i've respected any cases where i should
chain up and call the parent functions. 

see what you think. 

i also wrapped the pixmap loading in a singleton and
referenced a global pixmap for now.

meh.

:)

pete.



From zenadsl6252 at zen.co.uk  Fri Jul 13 23:10:52 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Fri, 13 Jul 2007 22:10:52 +0100
Subject: [Phat-dev] sliders sliders everywhere
Message-ID: <1184361052.14579.11.camel@majesterium>

i'd like to call thorsten's slider the belt slider. any objections?

i'd also like to see torben's slider from galan imported as well.
or at least see some sort of generic (well, conventional) slider
available if not exactly that.

pete.



From zenadsl6252 at zen.co.uk  Fri Jul 13 23:37:22 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Fri, 13 Jul 2007 22:37:22 +0100
Subject: [Phat-dev] PhatSlider is now derived from GtkRange
In-Reply-To: <1184360167.14579.6.camel@majesterium>
References: <1184360167.14579.6.camel@majesterium>
Message-ID: <1184362642.14579.14.camel@majesterium>

On Fri, 2007-07-13 at 21:56 +0100, pete shorthose wrote:
> i've committed changes to make PhatSlider derive from
> GtkRange. it works (here anyway) but it's probably not
> complete yet.

thinking about it, perhaps GtkScale was a better 
candidate for the sliders. what with the show label
and label position stuff.

oh well, muddling through :)

pete.



From zenadsl6252 at zen.co.uk  Sat Jul 14 02:22:25 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sat, 14 Jul 2007 01:22:25 +0100
Subject: [Phat-dev] PhatSlider is now derived from GtkRange
In-Reply-To: <1184360167.14579.6.camel@majesterium>
References: <1184360167.14579.6.camel@majesterium>
Message-ID: <1184372545.32685.3.camel@majesterium>

On Fri, 2007-07-13 at 21:56 +0100, pete shorthose wrote:
> i've committed changes to make PhatSlider derive from
> GtkRange. it works (here anyway) but it's probably not
> complete yet.
> 
> there's an awful lot of specific stuff in GtkRange which
> we are unlikely to use in most widgets and i'm not
> sure that i've respected any cases where i should
> chain up and call the parent functions. 

i didn't realise that GtkRange didn't have it's own window
when i removed the PhatSlider realise function. 
i've fixed up the drawing code to make it work properly
with respect to the parent window (i hope anyway)

if anyone knows of any reasons why this is a bad idea
either revert it or ask me to.

pete.



From zenadsl6252 at zen.co.uk  Sat Jul 14 03:46:59 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sat, 14 Jul 2007 02:46:59 +0100
Subject: [Phat-dev] PhatSlider is now derived from GtkRange
In-Reply-To: <1184360167.14579.6.camel@majesterium>
References: <1184360167.14579.6.camel@majesterium>
Message-ID: <1184377619.15262.9.camel@majesterium>

On Fri, 2007-07-13 at 21:56 +0100, pete shorthose wrote:
> i've committed changes to make PhatSlider derive from
> GtkRange. it works (here anyway) but it's probably not
> complete yet.

i still need to sort out a window to use in place of 
the parent window for events but there's a good reference
in GtkRange so it won't take long.

torben, as you've already said that you intend to convert the
PhatKnob into a no window range widget, i'll leave that to
you.  i don't mind doing it if you are busy though.
just let me know if so.

cheers,
pete.



From t_w_ at freenet.de  Sat Jul 14 11:14:49 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Sat, 14 Jul 2007 11:14:49 +0200
Subject: [Phat-dev] sliders sliders everywhere
In-Reply-To: <1184361052.14579.11.camel@majesterium>
References: <1184361052.14579.11.camel@majesterium>
Message-ID: <20070714091449.GA4161@charly.SWORD>

On Fri, Jul 13, 2007 at 10:10:52PM +0100, pete shorthose wrote:

> i'd like to call thorsten's slider the belt slider. any objections?

You mean the one ported from Ardour? That'd be ok.
 

> i'd also like to see torben's slider from galan imported as well.
> or at least see some sort of generic (well, conventional) slider
> available if not exactly that.

Well, GTK has a conventional slider. Perhaps GTK allows per-widget 
theming?


-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From zenadsl6252 at zen.co.uk  Sat Jul 14 14:38:53 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sat, 14 Jul 2007 13:38:53 +0100
Subject: [Phat-dev] sliders sliders everywhere
In-Reply-To: <20070714091449.GA4161@charly.SWORD>
References: <1184361052.14579.11.camel@majesterium>
	<20070714091449.GA4161@charly.SWORD>
Message-ID: <1184416733.6107.6.camel@majesterium>

On Sat, 2007-07-14 at 11:14 +0200, Thorsten Wilms wrote:
> On Fri, Jul 13, 2007 at 10:10:52PM +0100, pete shorthose wrote:
> 
> > i'd like to call thorsten's slider the belt slider. any objections?
> 
> You mean the one ported from Ardour? That'd be ok.

cool.

> > i'd also like to see torben's slider from galan imported as well.
> > or at least see some sort of generic (well, conventional) slider
> > available if not exactly that.
> 
> Well, GTK has a conventional slider. Perhaps GTK allows per-widget 
> theming?

not really. 
you can change the colours via a gtk style and that's about it.
it's perhaps adequate for native applications, although there's
no metered version afaik (tick marks). but it isn't much use
on the pixmap front.

pete.




From nedko at arnaudov.name  Sat Jul 14 15:26:10 2007
From: nedko at arnaudov.name (Nedko Arnaudov)
Date: Sat, 14 Jul 2007 16:26:10 +0300
Subject: [Phat-dev] PhatRangeKnob
In-Reply-To: <20070713054247.GL23036@mobilat> (torbenh@gmx.de's message of
	"Fri, 13 Jul 2007 07:42:47 +0200")
References: <20070713054247.GL23036@mobilat>
Message-ID: <87fy3rt8ul.fsf@arnaudov.name>

torbenh at gmx.de writes:

> however there were some problems, i chose to not tackle yet...
> namely the private adjustment and log-mode
>
> this needs some discussion... and i am too tired to make correct
> decisions now. 
>
> i dont really like the idea of having a private adjustment. Although
> this seems quite elegant for logmode...

I also dislike private adjustments. As for logarithmic mode, I think we
should have something more flexible. In particular I think it is only
useful for ranges starting from 0. I remember wanting to use it for
balance widgets (-1..1) in jack_mixer and after inspection of code I
gave up to make quick fix for that.

What you think about having separate object attachable to our
knob/slider/meter widgets that maps values? This will separate mapping
implementation from visualization.

-- 
Nedko Arnaudov <GnuPG KeyID: DE1716B0>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/phat-dev/attachments/20070714/dc51fafa/attachment.pgp>

From zenadsl6252 at zen.co.uk  Sat Jul 14 16:26:41 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sat, 14 Jul 2007 15:26:41 +0100
Subject: [Phat-dev] PhatRangeKnob
In-Reply-To: <87fy3rt8ul.fsf@arnaudov.name>
References: <20070713054247.GL23036@mobilat>  <87fy3rt8ul.fsf@arnaudov.name>
Message-ID: <1184423201.6107.29.camel@majesterium>

On Sat, 2007-07-14 at 16:26 +0300, Nedko Arnaudov wrote:
> torbenh at gmx.de writes:
> 
> > however there were some problems, i chose to not tackle yet...
> > namely the private adjustment and log-mode
> >
> > this needs some discussion... and i am too tired to make correct
> > decisions now. 
> >
> > i dont really like the idea of having a private adjustment. Although
> > this seems quite elegant for logmode...
> 
> I also dislike private adjustments. As for logarithmic mode, I think we
> should have something more flexible. In particular I think it is only
> useful for ranges starting from 0. I remember wanting to use it for
> balance widgets (-1..1) in jack_mixer and after inspection of code I
> gave up to make quick fix for that.
> 
> What you think about having separate object attachable to our
> knob/slider/meter widgets that maps values? This will separate mapping
> implementation from visualization.

either an adjustment or something like it does seem to be necessary.
i hadn't thought of it like this before. every time i tried to avoid
using
a second adjustment, i found that i practically had to replicate it to
do the job anyway so i too postponed dealing with it.

but if we actively extend /change it to cover more use cases
and remove any unnecessary elements then it suddenly becomes
worthwhile.

the question is, does this make deriving from GtkRange less
useful? the range handles the adjustment stuff now.

OT: don't know why, but i'm missing the parent to this post, as well as
at
least one of my own posts (which wasn't sent back to me by the list)

anyone else noticed similar list mail delivery problems with berlios?


pete.




From nedko at arnaudov.name  Sat Jul 14 18:46:29 2007
From: nedko at arnaudov.name (Nedko Arnaudov)
Date: Sat, 14 Jul 2007 19:46:29 +0300
Subject: [Phat-dev] pyphat
Message-ID: <87fy3r3pcq.fsf@arnaudov.name>

What you think about having pyphat as subdir of phat and adding
en/disable-pyphat to configure script? I see no need of having two
complete autotoolized dirs.

Do you know if there are projects other than khagan, jack_mixer
and zynjacku that are using pyphat?

-- 
Nedko Arnaudov <GnuPG KeyID: DE1716B0>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/phat-dev/attachments/20070714/5500c170/attachment.pgp>

From nedko at arnaudov.name  Sat Jul 14 19:06:19 2007
From: nedko at arnaudov.name (Nedko Arnaudov)
Date: Sat, 14 Jul 2007 20:06:19 +0300
Subject: [Phat-dev] jack_mixer widgets
Message-ID: <87abty5304.fsf@arnaudov.name>

I'd like to move slider and meter widgets from jack_mixer to phat in the
jack_mixer release following next one. They are currently implemented
with pycairo. Reasoning behind this wish is that they have some features
that are still missing in phat slider (ardour) and meterbridge
widgets. For slider I'm missing system-wide (gtk theme) colors. For dpm
i'm mising resizing. Are we using cairo for drawing widgets in phat? If
yes then I'd port those two widgets. If no, what better alternative we
are using? For those of you that haven't seen them - look at screenshots
here:

http://home.gna.org/jackmixer/

-- 
Nedko Arnaudov <GnuPG KeyID: DE1716B0>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/phat-dev/attachments/20070714/2483b428/attachment.pgp>

From torbenh at gmx.de  Sun Jul 15 01:45:44 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Sun, 15 Jul 2007 01:45:44 +0200
Subject: [Phat-dev] PhatSlider is now derived from GtkRange
In-Reply-To: <1184377619.15262.9.camel@majesterium>
References: <1184360167.14579.6.camel@majesterium>
	<1184377619.15262.9.camel@majesterium>
Message-ID: <20070714234544.GA14772@mobilat>

On Sat, Jul 14, 2007 at 02:46:59AM +0100, pete shorthose wrote:
> On Fri, 2007-07-13 at 21:56 +0100, pete shorthose wrote:
> > i've committed changes to make PhatSlider derive from
> > GtkRange. it works (here anyway) but it's probably not
> > complete yet.
> 
> i still need to sort out a window to use in place of 
> the parent window for events but there's a good reference
> in GtkRange so it won't take long.
> 
> torben, as you've already said that you intend to convert the
> PhatKnob into a no window range widget, i'll leave that to
> you.  i don't mind doing it if you are busy though.
> just let me know if so.

thats the missing top post you did not get...
its a patch which is almost complete.

attached again...
> 
> cheers,
> pete.
> 
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language
-------------- next part --------------
Index: phat/phatknob.c
===================================================================
--- phat/phatknob.c	(revision 83)
+++ phat/phatknob.c	(working copy)
@@ -40,33 +40,21 @@
     STATE_SCROLL,
 };
 
-/* signals */
-enum
-{
-    VALUE_CHANGED_SIGNAL,
-    CHANGED_SIGNAL,
-    LAST_SIGNAL,
-};
 
 /* properties */
 enum
 {
     PROP_0,
-    PROP_ADJUSTMENT,
-    PROP_UPDATE_POLICY,
     PROP_LOG,
     PROP_INVERTED,
 };
 
-static int signals[LAST_SIGNAL];
 static void phat_knob_class_init         (PhatKnobClass *klass);
 static void phat_knob_init               (PhatKnob *knob);
 static void phat_knob_destroy            (GtkObject *object);
 static void phat_knob_realize            (GtkWidget *widget);
 static void phat_knob_size_request       (GtkWidget *widget,
                                            GtkRequisition *requisition);
-static void phat_knob_size_allocate      (GtkWidget *widget, 
-                                           GtkAllocation *allocation);
 static gint phat_knob_expose             (GtkWidget *widget, 
                                            GdkEventExpose *event);
 static gint phat_knob_button_press       (GtkWidget *widget, 
@@ -75,26 +63,14 @@
                                            GdkEventButton *event);
 static gint phat_knob_motion_notify      (GtkWidget *widget, 
                                            GdkEventMotion *event);
-static gint phat_knob_timer              (PhatKnob *knob);
 static gint phat_knob_scroll             (GtkWidget *widget, 
                                            GdkEventScroll *event);
-static void phat_knob_update_mouse_update(PhatKnob *knob);
 static void phat_knob_update_mouse       (PhatKnob *knob, 
                                            gint x,
                                            gint y,
                                            gboolean absolute);
-static void phat_knob_update             (PhatKnob *knob);
-static void phat_knob_internal_adjustment_changed (GtkAdjustment *adjustment,
-                                                    gpointer data);
-static void phat_knob_internal_adjustment_value_changed(GtkAdjustment *adjustment,
-                                                         gpointer data);
 
-static void phat_knob_adjustment_changed(GtkAdjustment *adjustment,
-                                          gpointer data);
-static void phat_knob_adjustment_value_changed(GtkAdjustment *adjustment,
-                                                gpointer data);
 
-static void phat_knob_update_internal_adjustment(PhatKnob * knob);
 static void phat_knob_set_property      (GObject *object, 
 			                              guint prop_id, 
 			                        const GValue *value, 
@@ -111,7 +87,7 @@
 
 /* Local data */
 
-G_DEFINE_TYPE (PhatKnob, phat_knob, GTK_TYPE_WIDGET);
+G_DEFINE_TYPE (PhatKnob, phat_knob, GTK_TYPE_RANGE);
 
 static void phat_knob_class_init (PhatKnobClass *klass) {
     GtkObjectClass   *object_class;
@@ -130,57 +106,12 @@
     widget_class->realize =        phat_knob_realize;
     widget_class->expose_event =   phat_knob_expose;
     widget_class->size_request =   phat_knob_size_request;
-    widget_class->size_allocate =  phat_knob_size_allocate;
     widget_class->button_press_event = phat_knob_button_press;
     widget_class->button_release_event = phat_knob_button_release;
     widget_class->motion_notify_event = phat_knob_motion_notify;
     widget_class->scroll_event =   phat_knob_scroll;
 
-    /**
-     * PhatKnob::value-changed:
-     * @knob: the object on which the signal was emitted
-     *
-     * The "value-changed" signal is emitted when the value of the
-     * knobbutton's adjustment changes.
-     *
-     */
-    signals[VALUE_CHANGED_SIGNAL] =
-        g_signal_new ("value-changed",
-                      G_TYPE_FROM_CLASS (klass),
-                      G_SIGNAL_RUN_FIRST | G_SIGNAL_ACTION,
-                      G_STRUCT_OFFSET (PhatKnobClass, value_changed),
-                      NULL, NULL,
-                      g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
-    klass->value_changed = NULL;
-    
   /**
-    * PhatKnob:adjustment:
-    *
-    * The GtkAdjustment that contains the current values of this knob
-    */ 
-    g_object_class_install_property (g_object_class,
-                                      PROP_ADJUSTMENT,
-                                      g_param_spec_object ("adjustment",
-							          "Adjustment",
-							          "The GtkAdjustment that contains the current values of this knob",
-                                      GTK_TYPE_ADJUSTMENT,
-                                      G_PARAM_READWRITE|G_PARAM_CONSTRUCT));
-  /**
-    * PhatKnob:update-policy:
-    *
-    * The update policy for this knob
-    *
-    * Since: 4.2
-    */                               
-    g_object_class_install_property (g_object_class,
-                                      PROP_UPDATE_POLICY,
-                                      g_param_spec_enum ("update-policy",
-							          "Update Policy",
-							          "The update policy for this widget",
-                                      GTK_TYPE_UPDATE_TYPE,
-                                      GTK_UPDATE_CONTINUOUS,
-                                      G_PARAM_READWRITE|G_PARAM_CONSTRUCT));
-  /**
     * PhatKnob:log-mode:
     *
     * Whether log mode is enabled. log mode shifts the emphasis towards
@@ -215,20 +146,7 @@
     knob->state = STATE_IDLE;
     knob->saved_x = knob->saved_y = 0;
     knob->size = KNOB_SIZE;
-    knob->timer = 0;
     knob->pixbuf = NULL;
-    knob->old_value = 0.0;
-    knob->old_lower = 0.0;
-    knob->old_upper = 0.0;
-    knob->adjustment = NULL;
-    knob->adjustment_prv = (GtkAdjustment*) gtk_adjustment_new (0.0, 0.0, 1.0, 0.1, 0.1, 0.0);
-    
-    g_signal_connect(G_OBJECT (knob->adjustment_prv), "changed",
-                       G_CALLBACK(phat_knob_internal_adjustment_changed),
-                       (gpointer) knob);
-    g_signal_connect(G_OBJECT (knob->adjustment_prv), "value_changed",
-                       G_CALLBACK(phat_knob_internal_adjustment_value_changed),
-                       (gpointer) knob);
 }
 
 
@@ -248,7 +166,7 @@
 GtkWidget *phat_knob_new(GtkAdjustment *adjustment) {
 
     return g_object_new (PHAT_TYPE_KNOB,
-                          "adjustmnet",
+                          "adjustment",
                            adjustment,
                            NULL);
 }
@@ -280,24 +198,6 @@
     return phat_knob_new (adj);
 }
 
-/* Update internal adjustment from external one */
-static void
-phat_knob_update_internal_adjustment(
-    PhatKnob * knob)
-{
-    if (knob->is_log)
-    {   
-        gtk_adjustment_set_value(
-            (GtkAdjustment *)knob->adjustment_prv,
-            log(knob->adjustment->value - knob->adjustment->lower) / log(knob->adjustment->upper - knob->adjustment->lower));
-    }
-    else
-    {
-        gtk_adjustment_set_value(
-            (GtkAdjustment *)knob->adjustment_prv,
-            (knob->adjustment->value - knob->adjustment->lower) / (knob->adjustment->upper - knob->adjustment->lower));
-    }
-}
 
 /**
  * phat_knob_set_value:
@@ -313,13 +213,7 @@
 {
     g_return_if_fail (PHAT_IS_KNOB (knob));
 
-    value = CLAMP (value,
-                   knob->adjustment->lower,
-                   knob->adjustment->upper);
-
-    gtk_adjustment_set_value (knob->adjustment, value);
-
-    phat_knob_update_internal_adjustment(knob);
+    gtk_range_set_value( GTK_RANGE( knob ), value );
 }
 
 /**
@@ -335,6 +229,12 @@
 {
     g_return_val_if_fail (PHAT_IS_KNOB (knob), 0);
 
+    return gtk_range_get_value( GTK_RANGE( knob ) );
+
+    // XXX: well this is bad :( dunno how/where to the log dance
+    //      perhaps in the expose/mouse stuff... but its not nice there :(
+
+#if 0
     if(knob->is_log)
     {
         gtk_adjustment_set_value((GtkAdjustment *)knob->adjustment, exp((knob->adjustment_prv->value) * 
@@ -346,8 +246,11 @@
     }
 
     return knob->adjustment->value;
+#endif
 }
 
+#if 0
+
 /**
  * phat_knob_set_range:
  * @knob: a #PhatKnob
@@ -375,7 +278,10 @@
     gtk_adjustment_changed (knob->adjustment);
     gtk_adjustment_set_value (knob->adjustment, value);
 }
+#endif
 
+// XXX: this needs to use the property also....
+
 void phat_knob_set_log (PhatKnob* knob, gboolean is_log)
 {
     g_return_if_fail (PHAT_IS_KNOB (knob));
@@ -398,19 +304,6 @@
 
     knob = PHAT_KNOB(object);
 
-    if (knob->adjustment) {
-		// unref external adjustment rather than destroy it as it might be shared
-        g_object_unref(GTK_OBJECT(knob->adjustment));
-        knob->adjustment = NULL;
-    }
-
-    if (knob->adjustment_prv)
-    {
-        //didn't call ref on this one so just destroy
-        gtk_object_destroy ((GtkObject*)knob->adjustment_prv);
-        knob->adjustment_prv = NULL;
-    }
-
     if (knob->mask) {
         gdk_bitmap_unref(knob->mask);
         knob->mask = NULL;
@@ -433,61 +326,35 @@
     g_return_val_if_fail(knob != NULL, NULL);
     g_return_val_if_fail(PHAT_IS_KNOB(knob), NULL);
 
-    return knob->adjustment;
+    return gtk_range_get_adjustment( GTK_RANGE( knob ) );
 }
 
 void phat_knob_set_update_policy(PhatKnob *knob, GtkUpdateType policy) {
     g_return_if_fail (knob != NULL);
     g_return_if_fail (PHAT_IS_KNOB (knob));
 
-    knob->policy = policy;
+    gtk_range_set_update_policy( GTK_RANGE( knob ), policy );
 }
 
 void phat_knob_set_adjustment(PhatKnob *knob, GtkAdjustment *adjustment) {
     g_return_if_fail (knob != NULL);
     g_return_if_fail (PHAT_IS_KNOB (knob));
 
-    if (!GTK_IS_ADJUSTMENT (adjustment))
-        adjustment = (GtkAdjustment*) gtk_adjustment_new (0.0, 0.0, 10.0, 0.1, 0.1, 0.2);
-    
-    if (knob->adjustment)
-    {
-        g_signal_handlers_disconnect_matched(G_OBJECT(knob->adjustment),
-                                              G_SIGNAL_MATCH_DATA,
-                                              0, 0, NULL, NULL,
-                                              knob);
-        g_object_unref(G_OBJECT (knob->adjustment));
-    }
-    
-    knob->adjustment = adjustment;
-    g_object_ref_sink(G_OBJECT(adjustment));
-    
-    g_signal_connect(G_OBJECT (adjustment), "changed",
-                       G_CALLBACK(phat_knob_adjustment_changed),
-                       (gpointer) knob);
-    g_signal_connect(G_OBJECT (adjustment), "value_changed",
-                       G_CALLBACK(phat_knob_adjustment_value_changed),
-                       (gpointer) knob);
-
-    knob->old_value = adjustment->value;
-    knob->old_lower = adjustment->lower;
-    knob->old_upper = adjustment->upper;
-
-    phat_knob_update(knob);
+    gtk_range_set_adjustment( GTK_RANGE( knob ), adjustment );
 }
 
 
 static void phat_knob_realize(GtkWidget *widget) {
     PhatKnob *knob;
-    GdkWindowAttr attributes;
-    gint attributes_mask,i=0;
-    GdkColor color = { 0, 0xffff, 0, 0 };
     extern GdkPixbuf **pixbuf;
+    int i=0;
 
     g_return_if_fail(widget != NULL);
     g_return_if_fail(PHAT_IS_KNOB(widget));
 
-    GTK_WIDGET_SET_FLAGS(widget, GTK_REALIZED);
+    if (GTK_WIDGET_CLASS(phat_knob_parent_class)->realize)
+        (*GTK_WIDGET_CLASS(phat_knob_parent_class)->realize)(widget);
+
     knob = PHAT_KNOB(widget);
 
     /* FIXME keeps khagan from drawing knob */
@@ -495,27 +362,6 @@
     {
 		knob->size = widget->allocation.height;
     }
-
-    attributes.x = widget->allocation.x;
-    attributes.y = widget->allocation.y;
-    attributes.width = knob->size;
-    attributes.height = knob->size;
-    attributes.wclass = GDK_INPUT_OUTPUT;
-    attributes.window_type = GDK_WINDOW_CHILD;
-    attributes.event_mask =
-        gtk_widget_get_events (widget) | 
-        GDK_EXPOSURE_MASK | GDK_BUTTON_PRESS_MASK | 
-        GDK_BUTTON_RELEASE_MASK | GDK_POINTER_MOTION_MASK |
-        GDK_POINTER_MOTION_HINT_MASK | GDK_SCROLL_MASK;
-    attributes.visual = gtk_widget_get_visual(widget);
-    attributes.colormap = gtk_widget_get_colormap(widget);
-
-    attributes_mask = GDK_WA_X | GDK_WA_Y | GDK_WA_VISUAL | GDK_WA_COLORMAP;
-    widget->window = gdk_window_new(widget->parent->window, &attributes, attributes_mask);
-
-    widget->style = gtk_style_attach(widget->parent->style, widget->window);
-
-    gdk_window_set_user_data(widget->window, widget);
     
     /* init first pixbuf */
 	if(pixbuf == NULL){
@@ -538,17 +384,6 @@
     } else { /* if not NULL set fitting pixbuf */
 		knob->pixbuf = pixbuf[i];
     }
-
-    gtk_style_set_background(widget->style, widget->window, GTK_STATE_NORMAL);
-
-    knob->mask_gc = gdk_gc_new(widget->window);
-    gdk_gc_copy(knob->mask_gc, widget->style->bg_gc[GTK_STATE_NORMAL]);
-    gdk_gc_set_clip_mask(knob->mask_gc, knob->mask);
-
-    knob->red_gc = gdk_gc_new(widget->window);
-    gdk_gc_copy(knob->red_gc, widget->style->bg_gc[GTK_STATE_NORMAL]);
-    gdk_colormap_alloc_color(attributes.colormap, &color, FALSE, TRUE);
-    gdk_gc_set_foreground(knob->red_gc, &color);
 }
 
 static void phat_knob_size_request (GtkWidget *widget, GtkRequisition *requisition) {
@@ -559,24 +394,6 @@
     requisition->height = knob->size;
 }
 
-static void phat_knob_size_allocate (GtkWidget *widget, GtkAllocation *allocation) {
-    PhatKnob *knob;
-
-    g_return_if_fail(widget != NULL);
-    g_return_if_fail(PHAT_IS_KNOB(widget));
-    g_return_if_fail(allocation != NULL);
-
-    widget->allocation = *allocation;
-    knob = PHAT_KNOB(widget);
-
-    if (GTK_WIDGET_REALIZED(widget)) {
-        gdk_window_move_resize(widget->window,
-                               allocation->x, allocation->y,
-                               knob->size, knob->size);
-    }
-    
-}
-
 static gint phat_knob_expose(GtkWidget *widget, GdkEventExpose *event) {
     PhatKnob *knob;
     gfloat dx, dy, throw;
@@ -593,19 +410,25 @@
     // basically we need to work out if the step size is integer
     // if it is, centre the knob about the vertical
 
-    dx = knob->adjustment_prv->value - knob->adjustment_prv->lower;     // value, from 0
-    dy = knob->adjustment_prv->upper - knob->adjustment_prv->lower;     // range
+    GtkAdjustment *adj = gtk_range_get_adjustment( GTK_RANGE( knob ) );
 
-    if (knob->adjustment_prv->step_increment != 1.0f) {
+    dx = adj->value - adj->lower;     // value, from 0
+    dy = adj->upper - adj->lower;     // range
+
+    if (adj->step_increment != 1.0f) {
         dx=(int)(51*dx/dy)*knob->size;
     } else {
         throw=4;
         dx=(int)(51*dx/throw+(24-throw))*knob->size;
     }
 
-    gdk_draw_pixbuf(widget->window, knob->mask_gc, knob->pixbuf,
-                    dx, 0, 0, 0, knob->size, knob->size,GDK_RGB_DITHER_NONE,0,0);
+    gdk_pixbuf_render_to_drawable_alpha( knob->pixbuf, widget->window,
+	    dx, 0, widget->allocation.x, widget->allocation.y,
+	    knob->size, knob->size, GDK_PIXBUF_ALPHA_FULL, 0, 0,0,0 );
 
+//    gdk_draw_pixbuf(widget->window, knob->mask_gc, knob->pixbuf,
+//                    dx, 0, 0, 0, knob->size, knob->size,GDK_RGB_DITHER_NONE,0,0);
+
     return FALSE;
 }
 
@@ -649,6 +472,7 @@
     g_return_val_if_fail(event != NULL, FALSE);
 
     knob = PHAT_KNOB(widget);
+    GtkAdjustment *adj = gtk_range_get_adjustment( GTK_RANGE( knob ) );
 
     switch (knob->state) {
     case STATE_PRESSED:
@@ -657,15 +481,13 @@
 
         switch (event->button) {
         case 1:
-            knob->adjustment_prv->value -= knob->adjustment_prv->page_increment;
-            g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-            g_signal_emit_by_name(G_OBJECT(knob->adjustment_prv), "value_changed");
+            adj->value -= adj->page_increment;
+            g_signal_emit_by_name(G_OBJECT(adj), "value_changed");
             break;
 
         case 3:
-            knob->adjustment_prv->value += knob->adjustment_prv->page_increment;
-            g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-            g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
+            adj->value += adj->page_increment;
+            g_signal_emit_by_name(G_OBJECT (adj), "value_changed");
             break;
 
         default:
@@ -677,11 +499,6 @@
         gtk_grab_remove(widget);
         knob->state = STATE_IDLE;
 
-        if (knob->policy != GTK_UPDATE_CONTINUOUS && knob->old_value != knob->adjustment_prv->value)
-        {
-            g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-            g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
-        }
         break;
 
     default:
@@ -736,70 +553,42 @@
        gdouble lstep;
 
        knob = PHAT_KNOB(widget);
+    GtkAdjustment *adj = gtk_range_get_adjustment( GTK_RANGE( knob ) );
 
     gtk_widget_grab_focus (widget);
 
     knob->state = STATE_SCROLL;
 
-    lstep = knob->adjustment->step_increment*20/(knob->adjustment->upper - knob->adjustment->lower);
+    //lstep = knob->adjustment->step_increment*20/(knob->adjustment->upper - knob->adjustment->lower);
+    // XXX: implemant...
+    lstep = 1.0;
 
        if(event->direction == GDK_SCROLL_UP){
-               knob->adjustment_prv->value += lstep;
-               if(knob->adjustment_prv->value < 0.5 + lstep/2 && knob->adjustment_prv->value > 0.5 - lstep/2)
-                       knob->adjustment_prv->value =0.5;
+               adj->value += lstep;
+               if(adj->value < 0.5 + lstep/2 && adj->value > 0.5 - lstep/2)
+                       adj->value =0.5;
        } else if(event->direction == GDK_SCROLL_DOWN){
-               knob->adjustment_prv->value -= lstep;
-               if(knob->adjustment_prv->value < 0.5 + lstep/2 && knob->adjustment_prv->value > 0.5 - lstep/2)
-                       knob->adjustment_prv->value =0.5;
+               adj->value -= lstep;
+               if(adj->value < 0.5 + lstep/2 && adj->value > 0.5 - lstep/2)
+                       adj->value =0.5;
        } else if(event->direction == GDK_SCROLL_LEFT){
-               knob->adjustment_prv->value += lstep*3;
-               if(knob->adjustment_prv->value < 0.5 + 1.5*lstep && knob->adjustment_prv->value > 0.5 - 1.5*lstep)
-                       knob->adjustment_prv->value =0.5;
+               adj->value += lstep*3;
+               if(adj->value < 0.5 + 1.5*lstep && adj->value > 0.5 - 1.5*lstep)
+                       adj->value =0.5;
        } else {
-               knob->adjustment_prv->value -= lstep*3;
-               if(knob->adjustment_prv->value < 0.5 + 1.5*lstep && knob->adjustment_prv->value > 0.5 - 1.5*lstep)
-                       knob->adjustment_prv->value =0.5;
+               adj->value -= lstep*3;
+               if(adj->value < 0.5 + 1.5*lstep && adj->value > 0.5 - 1.5*lstep)
+                       adj->value =0.5;
        }
 
     knob->state = STATE_IDLE;
-       if(knob->adjustment_prv->value == 0.5)g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-    g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
+    g_signal_emit_by_name(G_OBJECT (adj), "value_changed");
 
        return TRUE;
 }
 
-static gint phat_knob_timer(PhatKnob *knob) {
-    g_return_val_if_fail(knob != NULL, FALSE);
-    g_return_val_if_fail(PHAT_IS_KNOB(knob), FALSE);
 
-    if (knob->policy == GTK_UPDATE_DELAYED)
-    {
-        g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-        g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
-    }
-    return FALSE;       /* don't keep running this timer */
-}
 
-static void phat_knob_update_mouse_update(PhatKnob *knob) {
-    if (knob->policy == GTK_UPDATE_CONTINUOUS)
-    {
-        g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
-        g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-    }
-    else 
-    {
-        gtk_widget_draw(GTK_WIDGET(knob), NULL);
-
-        if (knob->policy == GTK_UPDATE_DELAYED) {
-            if (knob->timer)
-                gtk_timeout_remove(knob->timer);
-
-            knob->timer = gtk_timeout_add (SCROLL_DELAY_LENGTH, (GtkFunction) phat_knob_timer,
-                                           (gpointer) knob);
-        }
-    }
-}
-
 static void phat_knob_update_mouse(PhatKnob *knob, gint x, gint y,
                                    gboolean absolute)
 {
@@ -808,8 +597,9 @@
 
     g_return_if_fail(knob != NULL);
     g_return_if_fail(PHAT_IS_KNOB(knob));
+    GtkAdjustment *adj = gtk_range_get_adjustment( GTK_RANGE( knob ) );
 
-    old_value = knob->adjustment_prv->value;
+    old_value = adj->value;
 
     angle = atan2(-y + (knob->size>>1), x - (knob->size>>1));
 
@@ -820,8 +610,8 @@
             angle += 2;
 
         new_value = -(2.0/3.0) * (angle - 1.25);   /* map [1.25pi, -0.25pi] onto [0, 1] */
-        new_value *= knob->adjustment_prv->upper - knob->adjustment_prv->lower;
-        new_value += knob->adjustment_prv->lower;
+        new_value *= adj->upper - adj->lower;
+        new_value += adj->lower;
 
     } else {
 
@@ -837,115 +627,35 @@
             dh *= angle * angle;
         }
 
-        new_value = knob->adjustment_prv->value +
-            dv * knob->adjustment_prv->step_increment +
-            dh * (knob->adjustment_prv->upper -
-                  knob->adjustment_prv->lower) / 200.0f;
+        new_value = adj->value +
+            dv * adj->step_increment +
+            dh * (adj->upper -
+                  adj->lower) / 200.0f;
     }
 
-    new_value = MAX(MIN(new_value, knob->adjustment_prv->upper),
-                    knob->adjustment_prv->lower);
+    new_value = MAX(MIN(new_value, adj->upper),
+                    adj->lower);
 
+#if 0
        /* keep knob from flipping between min and max */
        if (new_value ==1 && old_value == 0) {
-               knob->adjustment_prv->value = old_value;
+               adj->value = old_value;
        } else if (new_value ==0 && old_value == 1) {
-               knob->adjustment_prv->value = old_value;
+               adj->value = old_value;
        } else if (new_value - old_value > 0.2 || old_value - new_value > 0.2) {
-               knob->adjustment_prv->value = old_value;
+               adj->value = old_value;
        } else {
-               knob->adjustment_prv->value = new_value;
+               adj->value = new_value;
        }
+#endif
 
-    if (knob->adjustment_prv->value != old_value)
-        phat_knob_update_mouse_update(knob);
+    if (new_value != old_value)
+        gtk_range_set_value( GTK_RANGE( knob ), new_value );
 }
 
-static void phat_knob_update(PhatKnob *knob) {
-    gfloat new_value;
 
-    g_return_if_fail(knob != NULL);
-    g_return_if_fail(PHAT_IS_KNOB (knob));
 
-    new_value = knob->adjustment_prv->value;
-    if (knob->adjustment_prv->step_increment == 1) new_value = (int)(knob->adjustment_prv->value+0.5);
-
-    if (new_value < knob->adjustment_prv->lower)
-        new_value = knob->adjustment_prv->lower;
-
-    if (new_value > knob->adjustment_prv->upper)
-        new_value = knob->adjustment_prv->upper;
-
-    if (new_value != knob->adjustment_prv->value) {
-        knob->adjustment_prv->value = new_value;
-        g_signal_emit (G_OBJECT (knob), signals[VALUE_CHANGED_SIGNAL], 0);
-        g_signal_emit_by_name(G_OBJECT (knob->adjustment_prv), "value_changed");
-    }
-
-    gtk_widget_draw(GTK_WIDGET(knob), NULL);
-}
-
-static void phat_knob_internal_adjustment_changed(GtkAdjustment *adjustment, gpointer data) {
-    PhatKnob *knob;
-
-    g_return_if_fail(adjustment != NULL);
-    g_return_if_fail(data != NULL);
-
-    knob = PHAT_KNOB(data);
-
-    if ((knob->old_value != adjustment->value) ||
-        (knob->old_lower != adjustment->lower) ||
-        (knob->old_upper != adjustment->upper)) {
-        phat_knob_update (knob);
-
-        knob->old_value = adjustment->value;
-        knob->old_lower = adjustment->lower;
-        knob->old_upper = adjustment->upper;
-    }
-}
-
-static void phat_knob_internal_adjustment_value_changed (GtkAdjustment *adjustment, gpointer data) {
-    PhatKnob *knob;
-
-    g_return_if_fail(adjustment != NULL);
-    g_return_if_fail(data != NULL);
-
-    knob = PHAT_KNOB(data);
-
-    if (knob->old_value != adjustment->value) {
-        phat_knob_update (knob);
-
-        knob->old_value = adjustment->value;
-    }
-
-    phat_knob_get_value(knob);  /* update value of external adjustment */
-}
-
 static void
-phat_knob_adjustment_changed(
-    GtkAdjustment * adjustment,
-    gpointer data)
-{
-    PhatKnob *knob;
-
-    knob = PHAT_KNOB(data);
-
-    phat_knob_set_range(knob, knob->adjustment->lower, knob->adjustment->upper);
-}
-
-static void
-phat_knob_adjustment_value_changed(
-    GtkAdjustment * adjustment,
-    gpointer data)
-{
-    PhatKnob *knob;
-
-    knob = PHAT_KNOB(data);
-
-    phat_knob_update_internal_adjustment(knob);
-}
-
-static void
 phat_knob_set_property (GObject      *object, 
 			            guint         prop_id, 
 			            const GValue *value, 
@@ -955,15 +665,9 @@
 
   switch (prop_id) 
     {
-    case PROP_ADJUSTMENT:
-      phat_knob_set_adjustment (knob, g_value_get_object (value));
-      break;
     case PROP_LOG:
       phat_knob_set_log (knob, g_value_get_boolean (value));
       break;
-    case PROP_UPDATE_POLICY:
-      phat_knob_set_update_policy (knob, g_value_get_enum (value));
-      break;
     case PROP_INVERTED:
       // shite all at the moment
       break;
@@ -983,15 +687,9 @@
 	
     switch (prop_id) 
     {
-        case PROP_ADJUSTMENT:
-          g_value_set_object (value, knob->adjustment);
-          break;
         case PROP_LOG:
           g_value_set_boolean (value, knob->is_log);
           break;
-        case PROP_UPDATE_POLICY:
-          g_value_set_enum (value, knob->policy);
-          break;
         case PROP_INVERTED:
           // shite all at the moment
           break;
Index: phat/phatknob.h
===================================================================
--- phat/phatknob.h	(revision 83)
+++ phat/phatknob.h	(working copy)
@@ -24,8 +24,7 @@
 #define __PHAT_KNOB_H__
 
 #include <gdk/gdk.h>
-#include <gtk/gtkadjustment.h>
-#include <gtk/gtkwidget.h>
+#include <gtk/gtkrange.h>
 
 G_BEGIN_DECLS
 
@@ -39,14 +38,8 @@
 typedef struct _PhatKnobClass   PhatKnobClass;
 
 struct _PhatKnob {
-    GtkWidget widget;
-    /* The adjustment object that stores the data for this knob */
-    GtkAdjustment *adjustment;
-    GtkAdjustment* adjustment_prv;
+    GtkRange range;
 
-
-    /* update policy (GTK_UPDATE_[CONTINUOUS/DELAYED/DISCONTINUOUS]) */
-    guint policy : 2;
     gboolean is_log;
 
     /* State of widget (to do with user interaction) */
@@ -56,27 +49,16 @@
     /* size of the widget */
     gint size;
 
-    /* ID of update timer, or 0 if none */
-    guint32 timer;
-
     /* Pixmap for knob */
     GdkPixbuf *pixbuf;
     GdkBitmap *mask;
     GdkGC *mask_gc;
     GdkGC *red_gc;
-
-    /* Old values from adjustment stored so we know when something changes */
-    gfloat old_value;
-    gfloat old_lower;
-    gfloat old_upper;
-
 };
 
 struct _PhatKnobClass
 {
-    GtkWidgetClass parent_class;
-
-    void (*value_changed) (PhatKnob* knob);
+    GtkRangeClass parent_class;
 };
 
 GType phat_knob_get_type ( );

From zenadsl6252 at zen.co.uk  Sun Jul 15 17:09:32 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sun, 15 Jul 2007 16:09:32 +0100
Subject: [Phat-dev] pyphat
In-Reply-To: <87fy3r3pcq.fsf@arnaudov.name>
References: <87fy3r3pcq.fsf@arnaudov.name>
Message-ID: <1184512172.6101.28.camel@majesterium>

On Sat, 2007-07-14 at 19:46 +0300, Nedko Arnaudov wrote:
> What you think about having pyphat as subdir of phat and adding
> en/disable-pyphat to configure script? I see no need of having two
> complete autotoolized dirs.

there are benefits to having independent packages:

the build system for each is simple,

it's obvious to package maintainers that these are
independent projects with separate dependencies

releases can be independent too. (eg, fixing an important bug
in pyphat wouldn't require a new phat release.)

it's also more obvious when a package has failed to build.

an incorporated setup is easier for end users to
download and build but that's about it. on the down
side, we risk package maintainers just making one
package with all the dependencies thrown in. this
might even cause phat not to be included in distros
at all if the dependencies are too far out or unstable.
(this is only a factor if vanilla phat is used anywhere
without the extra packages. if practically all client
software requires say, the lv2 lib, then it nothing
was gained in that by separating it.)

we might also get people bugging us on the lists saying
"i built phat.. now where the hell are the python bindings!?!"
because they missed the message saying that they
weren't built for what ever reason. this wouldn't
happen with separate packages as each would only
built if it's requisite dependencies were met.

if there are other reasons for an incorporated setup,
please bring them up. i only prefer independent packages
because after thinking about it, they seem to give
us the most flexibility. 


> Do you know if there are projects other than khagan, jack_mixer
> and zynjacku that are using pyphat?

no clue sorry. google got nothin tho.




From zenadsl6252 at zen.co.uk  Sun Jul 15 23:55:10 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sun, 15 Jul 2007 22:55:10 +0100
Subject: [Phat-dev] PhatSlider is now derived from GtkRange
In-Reply-To: <20070714234544.GA14772@mobilat>
References: <1184360167.14579.6.camel@majesterium>
	<1184377619.15262.9.camel@majesterium> <20070714234544.GA14772@mobilat>
Message-ID: <1184536511.6194.5.camel@majesterium>

On Sun, 2007-07-15 at 01:45 +0200, torbenh at gmx.de wrote:
> On Sat, Jul 14, 2007 at 02:46:59AM +0100, pete shorthose wrote:
> > On Fri, 2007-07-13 at 21:56 +0100, pete shorthose wrote:
> > > i've committed changes to make PhatSlider derive from
> > > GtkRange. it works (here anyway) but it's probably not
> > > complete yet.
> > 
> > i still need to sort out a window to use in place of 
> > the parent window for events but there's a good reference
> > in GtkRange so it won't take long.
> > 
> > torben, as you've already said that you intend to convert the
> > PhatKnob into a no window range widget, i'll leave that to
> > you.  i don't mind doing it if you are busy though.
> > just let me know if so.
> 
> thats the missing top post you did not get...
> its a patch which is almost complete.
> 
> attached again...

thanks.

there's a track on ISDN by the future sound of london
called "just a fucking idiot".  which is pretty much what i am.
i'd left another system up and that was pulling in mail
before my laptop. just booted it and there they
all were. meh, sorry.

pete



From loki.davison at gmail.com  Mon Jul 16 13:34:26 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Mon, 16 Jul 2007 21:34:26 +1000
Subject: [Phat-dev] jack_mixer widgets
In-Reply-To: <87abty5304.fsf@arnaudov.name>
References: <87abty5304.fsf@arnaudov.name>
Message-ID: <ec9314860707160434t3943f18codded74dbcde319f2@mail.gmail.com>

On 7/15/07, Nedko Arnaudov <nedko at arnaudov.name> wrote:
> I'd like to move slider and meter widgets from jack_mixer to phat in the
> jack_mixer release following next one. They are currently implemented
> with pycairo. Reasoning behind this wish is that they have some features
> that are still missing in phat slider (ardour) and meterbridge
> widgets. For slider I'm missing system-wide (gtk theme) colors. For dpm
> i'm mising resizing. Are we using cairo for drawing widgets in phat? If
> yes then I'd port those two widgets. If no, what better alternative we
> are using? For those of you that haven't seen them - look at screenshots
> here:
>
> http://home.gna.org/jackmixer/
>

We are using cairo for widgets. However porting your dpm doesn't seem
to me like the best plan unless it's a better base for adding the
extra features on to. Making the current dpm and all the meters
resizeable is very easy. If you need something different looking then
we should make it flexable, because if you want something different
then other people might too. So adding features to the current dpm and
other widgets sounds better so a merge is more the aim.

Excuse me if i make little sense, went skiing all weekend and drove 4
hours back this morning after getting up at 5am. ARRG! ... ;)

Loki


From loki.davison at gmail.com  Mon Jul 16 13:40:18 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Mon, 16 Jul 2007 21:40:18 +1000
Subject: [Phat-dev] 3 layer idea?
Message-ID: <ec9314860707160440i14ea176fxff1e1d6457632e26@mail.gmail.com>

After discussion on IRC the other day Pete suggested the 3 layer idea
for rending vector/pixbuf widgets. Care to explain on list Pete and or
in code and then we can work on improving and getting all widgets
doing that and flexible?

Skiing good, driving bad, sleeping good. Sleeping now. Lots of snow at
Mt Hotham.

Loki


From zenadsl6252 at zen.co.uk  Mon Jul 16 14:48:41 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Mon, 16 Jul 2007 13:48:41 +0100
Subject: [Phat-dev] PhatRangeKnob
In-Reply-To: <1184423201.6107.29.camel@majesterium>
References: <20070713054247.GL23036@mobilat>  <87fy3rt8ul.fsf@arnaudov.name>
	<1184423201.6107.29.camel@majesterium>
Message-ID: <1184590121.7522.10.camel@majesterium>

On Sat, 2007-07-14 at 15:26 +0100, pete shorthose wrote:
> On Sat, 2007-07-14 at 16:26 +0300, Nedko Arnaudov wrote:
> > torbenh at gmx.de writes:
> > 
> > > however there were some problems, i chose to not tackle yet...
> > > namely the private adjustment and log-mode
> > >
> > > this needs some discussion... and i am too tired to make correct
> > > decisions now. 
> > >
> > > i dont really like the idea of having a private adjustment. Although
> > > this seems quite elegant for logmode...
> > 
> > I also dislike private adjustments. As for logarithmic mode, I think we
> > should have something more flexible. In particular I think it is only
> > useful for ranges starting from 0. I remember wanting to use it for
> > balance widgets (-1..1) in jack_mixer and after inspection of code I
> > gave up to make quick fix for that.
> > 
> > What you think about having separate object attachable to our
> > knob/slider/meter widgets that maps values? This will separate mapping
> > implementation from visualization.
> 
> either an adjustment or something like it does seem to be necessary.
> i hadn't thought of it like this before. every time i tried to avoid
> using
> a second adjustment, i found that i practically had to replicate it to
> do the job anyway so i too postponed dealing with it.
> 
> but if we actively extend /change it to cover more use cases
> and remove any unnecessary elements then it suddenly becomes
> worthwhile.
> 
> the question is, does this make deriving from GtkRange less
> useful? the range handles the adjustment stuff now.

i think there's a case for a PhatRange here. not only can we strip
out the stuff in GtkRange that we don't need, but we can also
put in the mapping object handling in at the base so all
derived objects get it for free. basically, we maintain editorial
control over all the significant widgets in phat.

pete



From mobarre at gmail.com  Mon Jul 16 20:48:19 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Mon, 16 Jul 2007 20:48:19 +0200
Subject: [Phat-dev] 3 layer idea?
In-Reply-To: <ec9314860707160440i14ea176fxff1e1d6457632e26@mail.gmail.com>
References: <ec9314860707160440i14ea176fxff1e1d6457632e26@mail.gmail.com>
Message-ID: <3c808a150707161148p27ae8eafq254a4a102f0ee6e@mail.gmail.com>

On 7/16/07, Loki Davison <loki.davison at gmail.com> wrote:
> After discussion on IRC the other day Pete suggested the 3 layer idea
> for rending vector/pixbuf widgets. Care to explain on list Pete and or
> in code and then we can work on improving and getting all widgets
> doing that and flexible?

Damn, I knew there was some secret #phat channel somewhere ;-)
__________________
Marc-Olivier Barre.


From zenadsl6252 at zen.co.uk  Mon Jul 16 23:15:50 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Mon, 16 Jul 2007 22:15:50 +0100
Subject: [Phat-dev] 3 layer idea?
In-Reply-To: <3c808a150707161148p27ae8eafq254a4a102f0ee6e@mail.gmail.com>
References: <ec9314860707160440i14ea176fxff1e1d6457632e26@mail.gmail.com>
	<3c808a150707161148p27ae8eafq254a4a102f0ee6e@mail.gmail.com>
Message-ID: <1184620551.7522.41.camel@majesterium>

On Mon, 2007-07-16 at 20:48 +0200, Marc-Olivier Barre wrote:
> On 7/16/07, Loki Davison <loki.davison at gmail.com> wrote:
> > After discussion on IRC the other day Pete suggested the 3 layer idea
> > for rending vector/pixbuf widgets. Care to explain on list Pete and or
> > in code and then we can work on improving and getting all widgets
> > doing that and flexible?
> 
> Damn, I knew there was some secret #phat channel somewhere ;-)

1. you didn't miss much

2. there is no phat channel and..

3. ..it's keyed anyway so you couldn't get in even if you knew it
existed.

;)

cheers,
pete.




















yes, we were in #lad :)



From zenadsl6252 at zen.co.uk  Tue Jul 17 01:57:24 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Tue, 17 Jul 2007 00:57:24 +0100
Subject: [Phat-dev] 3 layer idea RIP
In-Reply-To: <ec9314860707160440i14ea176fxff1e1d6457632e26@mail.gmail.com>
References: <ec9314860707160440i14ea176fxff1e1d6457632e26@mail.gmail.com>
Message-ID: <1184630244.7522.136.camel@majesterium>

On Mon, 2007-07-16 at 21:40 +1000, Loki Davison wrote:
> After discussion on IRC the other day Pete suggested the 3 layer idea
> for rending vector/pixbuf widgets. Care to explain on list Pete and or
> in code and then we can work on improving and getting all widgets
> doing that and flexible?


i've just written and scrapped about 800 words that can be
summed up as followed.

i think it's a bad idea now.

basically, how would we describe something like that in the
abstract? either we don't and make them static (hardcoded)
hybrid widgets or we do and we require some kind of markup 
language or other configuration file.
it's not like you can just set a pixmap property and be done.
pixmaps don't scale well anyway so you immediately introduce
restrictions by allowing them in conjunction with vector stuff.

i've got other ideas and i'll try to detail them along with some
background of the general problems we face (just for reference,
not because they aren't obvious) but i think that we should
concentrate on getting the widgets we want into svn, fixing them
up, reorganising the class structure to minimise duplication
(but don't get overzealous about it, it's not the end
of the world if the lib is a few hundred KB larger)
and then look to doing a release.

if a compelling solution comes up in the mean time and everyone
gets on board with it then fine, but otherwise it might be a
good idea to think about attempting more complex but flexible
solutions further down the line. (perhaps an unstable branch
when phat is stabilised again)

any thoughts?

pete.





From torbenh at gmx.de  Tue Jul 17 12:38:24 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Tue, 17 Jul 2007 12:38:24 +0200
Subject: [Phat-dev] PhatRangeKnob
In-Reply-To: <1184590121.7522.10.camel@majesterium>
References: <20070713054247.GL23036@mobilat> <87fy3rt8ul.fsf@arnaudov.name>
	<1184423201.6107.29.camel@majesterium>
	<1184590121.7522.10.camel@majesterium>
Message-ID: <20070717103824.GA7463@mobilat>

On Mon, Jul 16, 2007 at 01:48:41PM +0100, pete shorthose wrote:
> On Sat, 2007-07-14 at 15:26 +0100, pete shorthose wrote:
> > On Sat, 2007-07-14 at 16:26 +0300, Nedko Arnaudov wrote:
> > > torbenh at gmx.de writes:
> > > 
> > > > however there were some problems, i chose to not tackle yet...
> > > > namely the private adjustment and log-mode
> > > >
> > > > this needs some discussion... and i am too tired to make correct
> > > > decisions now. 
> > > >
> > > > i dont really like the idea of having a private adjustment. Although
> > > > this seems quite elegant for logmode...
> > > 
> > > I also dislike private adjustments. As for logarithmic mode, I think we
> > > should have something more flexible. In particular I think it is only
> > > useful for ranges starting from 0. I remember wanting to use it for
> > > balance widgets (-1..1) in jack_mixer and after inspection of code I
> > > gave up to make quick fix for that.
> > > 
> > > What you think about having separate object attachable to our
> > > knob/slider/meter widgets that maps values? This will separate mapping
> > > implementation from visualization.
> > 
> > either an adjustment or something like it does seem to be necessary.
> > i hadn't thought of it like this before. every time i tried to avoid
> > using
> > a second adjustment, i found that i practically had to replicate it to
> > do the job anyway so i too postponed dealing with it.
> > 
> > but if we actively extend /change it to cover more use cases
> > and remove any unnecessary elements then it suddenly becomes
> > worthwhile.
> > 
> > the question is, does this make deriving from GtkRange less
> > useful? the range handles the adjustment stuff now.
> 
> i think there's a case for a PhatRange here. not only can we strip
> out the stuff in GtkRange that we don't need, but we can also
> put in the mapping object handling in at the base so all
> derived objects get it for free. basically, we maintain editorial
> control over all the significant widgets in phat.

had some internet problems...
i almost came to the same conclusion :)
now i am conviced.

who is gonna do it ?


-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From zenadsl6252 at zen.co.uk  Tue Jul 17 18:53:31 2007
From: zenadsl6252 at zen.co.uk (pete)
Date: Tue, 17 Jul 2007 17:53:31 +0100
Subject: [Phat-dev] PhatRangeKnob
In-Reply-To: <20070717103824.GA7463@mobilat>
References: <20070713054247.GL23036@mobilat> <87fy3rt8ul.fsf@arnaudov.name>
	<1184423201.6107.29.camel@majesterium>
	<1184590121.7522.10.camel@majesterium> <20070717103824.GA7463@mobilat>
Message-ID: <1184691212.5850.20.camel@one>

On Tue, 2007-07-17 at 12:38 +0200, torbenh at gmx.de wrote:
> On Mon, Jul 16, 2007 at 01:48:41PM +0100, pete shorthose wrote:
> > On Sat, 2007-07-14 at 15:26 +0100, pete shorthose wrote:
> > > On Sat, 2007-07-14 at 16:26 +0300, Nedko Arnaudov wrote:
> > > > torbenh at gmx.de writes:

> > i think there's a case for a PhatRange here. not only can we strip
> > out the stuff in GtkRange that we don't need, but we can also
> > put in the mapping object handling in at the base so all
> > derived objects get it for free. basically, we maintain editorial
> > control over all the significant widgets in phat.
> 
> had some internet problems...
> i almost came to the same conclusion :)
> now i am conviced.
> 
> who is gonna do it ?


i'm not going to seriously attempt it without the
mapping object.
(nedko, are you interested in doing that?)

what i will do is phatize gtkrange.{c,h}
(rename everything basically)
import it and get it to build.
(i've already done the bulk of this so expect
it in svn later today)

after which, anyone who starts any significant
changes to it should mention that on the list.
then everyone else will know to leave it alone
for the time being.


pete.




From zenadsl6252 at zen.co.uk  Tue Jul 17 22:02:49 2007
From: zenadsl6252 at zen.co.uk (pete)
Date: Tue, 17 Jul 2007 21:02:49 +0100
Subject: [Phat-dev] PhatRange is in svn
Message-ID: <1184702569.5850.33.camel@one>

the basic port to phat of GtkRange is in.
it builds without errors here but i've not tested
it in use. (kinda tricky with an abstract type :)


i put some notes in the top of the c file which are as follows:

--
i've implemented the intl marcos as simple pass throughs. (P_ and I_)
this is because we don't use intl at the moment. although we probably
should now that property information is visible in glade. if we add
intl at a later date, we only need to delete the macro definitions
below and it should work
i replaced GTK_PARAM_READWRITE and GTK_PARAM_READABLE with G_*
but they aren't equivalent. the G*_STATIC_* variants included in
the GTK_* definitions in gtkprivate.h require gobject >= 2.8 so
we'd need to check for that to use them. which is probably what i'll do

the "change_value" signal registration is commented out as it requires
custom marshallers. we may not need it anyway but this serves as a
reminder to either add glib-genmarshal etc to the build system order
remove that signal.

we need to sort out the credits above too. 
--

i'd not noticed the "change_value" signal before. it's interesting
because
it provids a way to implement the mapping object on top of GtkRange.
(the signal is emitted before the adj value is changed and you can
interject with your own value and halt further processing by returning 
TRUE) 
still, it's probably a good idea to go ahead with PhatRange anyway.

in particular, we don't really need all the scrollbar stuff that is
littered throughout GtkRange. 

pete.





From torbenh at gmx.de  Thu Jul 19 11:02:20 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Thu, 19 Jul 2007 11:02:20 +0200
Subject: [Phat-dev] midi mapping and thoughts...
Message-ID: <20070719090220.GA29729@mobilat>


hi...

just to write up some thoughts here...

what do we want to control anyways ? mostly a softsynth or other
RT-processing beast. maybe a plugin ?

for LADPSA this would boil down to an array of floats.
with some ranges... mostly an attachment...

We could arrange them into a tree in Form of a GtkTreeModel
GtkTreeStore (the implementation) fits nicely here.

I already started the PhatAdjustment...
If we add some properties to it for MIDI CC and stuff
we could add some midi-input interface to it.

controlling floats from outside the RT thread is trivial.
however the mapping needs to be accessible from inside the RT thread
also (jack-midi) so we need to make sure there is a valid copy of
the mapping list owned by the RT thread.

we need a ringbuffer .... we should copy jacks ringbuffer.

do we also want to have a timeline with automation ?
or shall we depend on ardour to get this right in time ?

well the timeline is not as important as proper midi learn.
i am not sure how this all will fit together, but this is at least a
start.


-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


From zenadsl6252 at zen.co.uk  Sat Jul 21 07:42:12 2007
From: zenadsl6252 at zen.co.uk (pete)
Date: Sat, 21 Jul 2007 06:42:12 +0100
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <1184702569.5850.33.camel@one>
References: <1184702569.5850.33.camel@one>
Message-ID: <1184996532.9773.1.camel@one>

On Tue, 2007-07-17 at 21:02 +0100, pete wrote:
> the basic port to phat of GtkRange is in.

sorry fellas, i could have sworn that i committed
it before but apparently not. anyway, it's there now.

feel free to point and laugh.

pete. 



From mobarre at gmail.com  Sun Jul 22 13:03:47 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Sun, 22 Jul 2007 13:03:47 +0200
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <1184996532.9773.1.camel@one>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
Message-ID: <3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>

On 7/21/07, pete <zenadsl6252 at zen.co.uk> wrote:
> On Tue, 2007-07-17 at 21:02 +0100, pete wrote:
> > the basic port to phat of GtkRange is in.
>
> sorry fellas, i could have sworn that i committed
> it before but apparently not. anyway, it's there now.
>
> feel free to point and laugh.
>

seems I'm having some kind of trouble here... not sure what happens
though. sounds like a missing file.

 gcc -DHAVE_CONFIG_H -I. -I. -I. -O3 -I/usr/include/gtk-2.0
-I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo
-I/usr/include/pango-1.0 -I/usr/include/glib-2.0
-I/usr/lib/glib-2.0/include -I/usr/include/freetype2
-I/usr/include/libpng12 -I/usr/include/libgnomecanvas-2.0
-I/usr/include/libart-2.0 -I/usr/include/pango-1.0
-I/usr/include/freetype2 -I/usr/include/gtk-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
-I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo
-I/usr/include/libpng12 -Wall -Werror -std=c99 -I..
-DINSTALL_DIR=\"/usr/share\" -DSITE_PKGLIB_DIR=\"/usr/lib/phat\"
-DSITE_PKGDATA_DIR=\"/usr/share/phat\" -O3 -I/usr/include/gtk-2.0
-I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo
-I/usr/include/pango-1.0 -I/usr/include/glib-2.0
-I/usr/lib/glib-2.0/include -I/usr/include/freetype2
-I/usr/include/libpng12 -I/usr/include/libgnomecanvas-2.0
-I/usr/include/libart-2.0 -I/usr/include/pango-1.0
-I/usr/include/freetype2 -I/usr/include/gtk-2.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
-I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo
-I/usr/include/libpng12 -Wall -Werror -MT libphat_la-phatrange.lo -MD
-MP -MF .deps/libphat_la-phatrange.Tpo -c phatrange.c  -fPIC -DPIC -o
.libs/libphat_la-phatrange.o
phatrange.c:55:29: error: phatmarshallers.h: No such file or directory
phatrange.c: In function 'phat_range_class_init':
phatrange.c:331: error: 'phat_closure_marshal_BOOLEAN__ENUM_DOUBLE'
undeclared (first use in this function)
phatrange.c:331: error: (Each undeclared identifier is reported only once
phatrange.c:331: error: for each function it appears in.)
make[2]: *** [libphat_la-phatrange.lo] Error 1
make[2]: Leaving directory `/media/data/src/svn/phat/phat/phat'
make[1]: *** [all] Error 2
make[1]: Leaving directory `/media/data/src/svn/phat/phat/phat'
make: *** [all-recursive] Error 1
__________________
Marc-Olivier Barre.


From loki.davison at gmail.com  Sun Jul 22 13:28:26 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Sun, 22 Jul 2007 21:28:26 +1000
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
Message-ID: <ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>

On 7/22/07, Marc-Olivier Barre <mobarre at gmail.com> wrote:
> On 7/21/07, pete <zenadsl6252 at zen.co.uk> wrote:
> > On Tue, 2007-07-17 at 21:02 +0100, pete wrote:
> > > the basic port to phat of GtkRange is in.
> >
> > sorry fellas, i could have sworn that i committed
> > it before but apparently not. anyway, it's there now.
> >
> > feel free to point and laugh.
> >
>
> seems I'm having some kind of trouble here... not sure what happens
> though. sounds like a missing file.
>
>  gcc -DHAVE_CONFIG_H -I. -I. -I. -O3 -I/usr/include/gtk-2.0
> -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo
> -I/usr/include/pango-1.0 -I/usr/include/glib-2.0
> -I/usr/lib/glib-2.0/include -I/usr/include/freetype2
> -I/usr/include/libpng12 -I/usr/include/libgnomecanvas-2.0
> -I/usr/include/libart-2.0 -I/usr/include/pango-1.0
> -I/usr/include/freetype2 -I/usr/include/gtk-2.0
> -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
> -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo
> -I/usr/include/libpng12 -Wall -Werror -std=c99 -I..
> -DINSTALL_DIR=\"/usr/share\" -DSITE_PKGLIB_DIR=\"/usr/lib/phat\"
> -DSITE_PKGDATA_DIR=\"/usr/share/phat\" -O3 -I/usr/include/gtk-2.0
> -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo
> -I/usr/include/pango-1.0 -I/usr/include/glib-2.0
> -I/usr/lib/glib-2.0/include -I/usr/include/freetype2
> -I/usr/include/libpng12 -I/usr/include/libgnomecanvas-2.0
> -I/usr/include/libart-2.0 -I/usr/include/pango-1.0
> -I/usr/include/freetype2 -I/usr/include/gtk-2.0
> -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
> -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo
> -I/usr/include/libpng12 -Wall -Werror -MT libphat_la-phatrange.lo -MD
> -MP -MF .deps/libphat_la-phatrange.Tpo -c phatrange.c  -fPIC -DPIC -o
> .libs/libphat_la-phatrange.o
> phatrange.c:55:29: error: phatmarshallers.h: No such file or directory
> phatrange.c: In function 'phat_range_class_init':
> phatrange.c:331: error: 'phat_closure_marshal_BOOLEAN__ENUM_DOUBLE'
> undeclared (first use in this function)
> phatrange.c:331: error: (Each undeclared identifier is reported only once
> phatrange.c:331: error: for each function it appears in.)
> make[2]: *** [libphat_la-phatrange.lo] Error 1
> make[2]: Leaving directory `/media/data/src/svn/phat/phat/phat'
> make[1]: *** [all] Error 2
> make[1]: Leaving directory `/media/data/src/svn/phat/phat/phat'
> make: *** [all-recursive] Error 1
> __________________
> Marc-Olivier Barre.
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev
>

glib-genmarshal --header phatmarshallers.list  > phatmarshallers.h
should generate the missing header. Doesn't seem to fix the build
probs here though.

Loki


From zenadsl6252 at zen.co.uk  Sun Jul 22 14:41:11 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sun, 22 Jul 2007 13:41:11 +0100
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
Message-ID: <1185108071.25277.2.camel@majesterium>

On Sun, 2007-07-22 at 21:28 +1000, Loki Davison wrote:
> On 7/22/07, Marc-Olivier Barre <mobarre at gmail.com> wrote:
> > On 7/21/07, pete <zenadsl6252 at zen.co.uk> wrote:
> > > On Tue, 2007-07-17 at 21:02 +0100, pete wrote:

> > phatrange.c:55:29: error: phatmarshallers.h: No such file or directory
> > phatrange.c: In function 'phat_range_class_init':
> > phatrange.c:331: error: 'phat_closure_marshal_BOOLEAN__ENUM_DOUBLE'
> > undeclared (first use in this function)
> > phatrange.c:331: error: (Each undeclared identifier is reported only once
> > phatrange.c:331: error: for each function it appears in.)
> > make[2]: *** [libphat_la-phatrange.lo] Error 1
> > make[2]: Leaving directory `/media/data/src/svn/phat/phat/phat'
> > make[1]: *** [all] Error 2
> > make[1]: Leaving directory `/media/data/src/svn/phat/phat/phat'
> > make: *** [all-recursive] Error 1
> > __________________
> > Marc-Olivier Barre.
> > _______________________________________________
> > Phat-dev mailing list
> > Phat-dev at lists.berlios.de
> > https://lists.berlios.de/mailman/listinfo/phat-dev
> >
> 
> glib-genmarshal --header phatmarshallers.list  > phatmarshallers.h
> should generate the missing header. Doesn't seem to fix the build
> probs here though.

not sure. it works here. 
did you run ./bootstrap? (regens each Makefile.in)



From zenadsl6252 at zen.co.uk  Sun Jul 22 15:08:56 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Sun, 22 Jul 2007 14:08:56 +0100
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <1185108071.25277.2.camel@majesterium>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
	<1185108071.25277.2.camel@majesterium>
Message-ID: <1185109736.25277.9.camel@majesterium>

On Sun, 2007-07-22 at 13:41 +0100, pete shorthose wrote:
> On Sun, 2007-07-22 at 21:28 +1000, Loki Davison wrote:
> > On 7/22/07, Marc-Olivier Barre <mobarre at gmail.com> wrote:
> > > On 7/21/07, pete <zenadsl6252 at zen.co.uk> wrote:
> > > > On Tue, 2007-07-17 at 21:02 +0100, pete wrote:
> 
> > > phatrange.c:55:29: error: phatmarshallers.h: No such file or directory
> > > phatrange.c: In function 'phat_range_class_init':
> > > phatrange.c:331: error: 'phat_closure_marshal_BOOLEAN__ENUM_DOUBLE'
> > > undeclared (first use in this function)
> > > phatrange.c:331: error: (Each undeclared identifier is reported only once
> > > phatrange.c:331: error: for each function it appears in.)
> > > make[2]: *** [libphat_la-phatrange.lo] Error 1
> > > make[2]: Leaving directory `/media/data/src/svn/phat/phat/phat'
> > > make[1]: *** [all] Error 2
> > > make[1]: Leaving directory `/media/data/src/svn/phat/phat/phat'
> > > make: *** [all-recursive] Error 1

> > 
> > glib-genmarshal --header phatmarshallers.list  > phatmarshallers.h
> > should generate the missing header. Doesn't seem to fix the build
> > probs here though.

> not sure. it works here. 
> did you run ./bootstrap? (regens each Makefile.in)

i've added the generated files to BUILT_SOURCES in Makefile.am
this should guarantee that they are built. it won't help people
who don't run bootstrap though. you must do this when build
system files change.

the only real benefit to auto generating them is that people won't
be tempted to edit them directly. if we don't mind dealing 
with that on occasion then we can import the glib-genmarshal
output sources and just re run it when we add new 
marshallers to phatmarshallers.list

cheers,
pete.



From mobarre at gmail.com  Sun Jul 22 19:48:31 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Sun, 22 Jul 2007 19:48:31 +0200
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <1185109736.25277.9.camel@majesterium>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
	<1185108071.25277.2.camel@majesterium>
	<1185109736.25277.9.camel@majesterium>
Message-ID: <3c808a150707221048p79d4e377y2b5958edf7ecbaf6@mail.gmail.com>

On 7/22/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > not sure. it works here.
> > did you run ./bootstrap? (regens each Makefile.in)

Might have forgotten that :-)

> i've added the generated files to BUILT_SOURCES in Makefile.am
> this should guarantee that they are built. it won't help people
> who don't run bootstrap though. you must do this when build
> system files change.
>
> the only real benefit to auto generating them is that people won't
> be tempted to edit them directly. if we don't mind dealing
> with that on occasion then we can import the glib-genmarshal
> output sources and just re run it when we add new
> marshallers to phatmarshallers.list
>
> cheers,
> pete.

I can now go a little further. Although I would feel better if
everyone had this now :

gcc -O3 -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include
-I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
-I/usr/include/freetype2 -I/usr/include/libpng12
-I/usr/include/libgnomecanvas-2.0 -I/usr/include/libart-2.0
-I/usr/include/pango-1.0 -I/usr/include/freetype2
-I/usr/include/gtk-2.0 -I/usr/include/glib-2.0
-I/usr/lib/glib-2.0/include -I/usr/lib/gtk-2.0/include
-I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/libpng12
-Wall -Werror -o .libs/phatfanslider phatfanslider-fanslider.o
../phat/.libs/libphat.so /usr/lib/libgnomecanvas-2.so
/usr/lib/libart_lgpl_2.so /usr/lib/libgtk-x11-2.0.so
/usr/lib/libgdk-x11-2.0.so /usr/lib/libatk-1.0.so
/usr/lib/libgdk_pixbuf-2.0.so /usr/lib/libpangocairo-1.0.so
/usr/lib/libpangoft2-1.0.so /usr/lib/libpango-1.0.so
/usr/lib/libcairo.so /usr/lib/libfontconfig.so /usr/lib/libfreetype.so
/usr/lib/libxml2.so /usr/lib/libglitz.so /usr/lib/libpng12.so -lz
/usr/lib/libXrender.so /usr/lib/libX11.so /usr/lib/libxcb-xlib.so
/usr/lib/libxcb.so /usr/lib/libXau.so /usr/lib/libXdmcp.so -lm
/usr/lib/libgobject-2.0.so /usr/lib/libgmodule-2.0.so -ldl
/usr/lib/libglib-2.0.so
../phat/.libs/libphat.so: undefined reference to
`_gtk_boolean_handled_accumulator'
collect2: ld returned 1 exit status
make[1]: *** [phatfanslider] Error 1
make[1]: Leaving directory `/media/data/src/svn/phat/phat/demos'
make: *** [all-recursive] Error 1

Or is it just me ?
__________________
Marc-Olivier Barre.


From zenadsl6252 at zen.co.uk  Sun Jul 22 20:12:49 2007
From: zenadsl6252 at zen.co.uk (pete)
Date: Sun, 22 Jul 2007 19:12:49 +0100
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <3c808a150707221048p79d4e377y2b5958edf7ecbaf6@mail.gmail.com>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
	<1185108071.25277.2.camel@majesterium>
	<1185109736.25277.9.camel@majesterium>
	<3c808a150707221048p79d4e377y2b5958edf7ecbaf6@mail.gmail.com>
Message-ID: <1185127969.9495.7.camel@one>

On Sun, 2007-07-22 at 19:48 +0200, Marc-Olivier Barre wrote:
> On 7/22/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > not sure. it works here.
> > > did you run ./bootstrap? (regens each Makefile.in)
> 
> Might have forgotten that :-)
> 
> > i've added the generated files to BUILT_SOURCES in Makefile.am
> > this should guarantee that they are built. it won't help people
> > who don't run bootstrap though. you must do this when build
> > system files change.
> >
> > the only real benefit to auto generating them is that people won't
> > be tempted to edit them directly. if we don't mind dealing
> > with that on occasion then we can import the glib-genmarshal
> > output sources and just re run it when we add new
> > marshallers to phatmarshallers.list
> >
> > cheers,
> > pete.
> 
> I can now go a little further. Although I would feel better if
> everyone had this now :
> 
> gcc -O3 -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include
> -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0
> -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
> -I/usr/include/freetype2 -I/usr/include/libpng12
> -I/usr/include/libgnomecanvas-2.0 -I/usr/include/libart-2.0
> -I/usr/include/pango-1.0 -I/usr/include/freetype2
> -I/usr/include/gtk-2.0 -I/usr/include/glib-2.0
> -I/usr/lib/glib-2.0/include -I/usr/lib/gtk-2.0/include
> -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/libpng12
> -Wall -Werror -o .libs/phatfanslider phatfanslider-fanslider.o
> ../phat/.libs/libphat.so /usr/lib/libgnomecanvas-2.so
> /usr/lib/libart_lgpl_2.so /usr/lib/libgtk-x11-2.0.so
> /usr/lib/libgdk-x11-2.0.so /usr/lib/libatk-1.0.so
> /usr/lib/libgdk_pixbuf-2.0.so /usr/lib/libpangocairo-1.0.so
> /usr/lib/libpangoft2-1.0.so /usr/lib/libpango-1.0.so
> /usr/lib/libcairo.so /usr/lib/libfontconfig.so /usr/lib/libfreetype.so
> /usr/lib/libxml2.so /usr/lib/libglitz.so /usr/lib/libpng12.so -lz
> /usr/lib/libXrender.so /usr/lib/libX11.so /usr/lib/libxcb-xlib.so
> /usr/lib/libxcb.so /usr/lib/libXau.so /usr/lib/libXdmcp.so -lm
> /usr/lib/libgobject-2.0.so /usr/lib/libgmodule-2.0.so -ldl
> /usr/lib/libglib-2.0.so
> ../phat/.libs/libphat.so: undefined reference to
> `_gtk_boolean_handled_accumulator'
> collect2: ld returned 1 exit status
> make[1]: *** [phatfanslider] Error 1
> make[1]: Leaving directory `/media/data/src/svn/phat/phat/demos'
> make: *** [all-recursive] Error 1
> 
> Or is it just me ?

hmm probably both me and thee. i pulled gtkrange.{c,h} from a recent
gtk. perhaps that's a new function and being at least 3 parts moron,
i forgot to check for that kind of thing.

can you run:
 grep -r _gtk_boolean_handled_accumulator /usr/include/gtk-2.0/

and

 pkg-config --modversion gtk-2.0

and include the output of both?

pete.



From zenadsl6252 at zen.co.uk  Sun Jul 22 20:29:17 2007
From: zenadsl6252 at zen.co.uk (pete)
Date: Sun, 22 Jul 2007 19:29:17 +0100
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <1185127969.9495.7.camel@one>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
	<1185108071.25277.2.camel@majesterium>
	<1185109736.25277.9.camel@majesterium>
	<3c808a150707221048p79d4e377y2b5958edf7ecbaf6@mail.gmail.com>
	<1185127969.9495.7.camel@one>
Message-ID: <1185128957.9495.25.camel@one>

On Sun, 2007-07-22 at 19:12 +0100, pete wrote:
> On Sun, 2007-07-22 at 19:48 +0200, Marc-Olivier Barre wrote:
> > On 7/22/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:

> 
> can you run:
>  grep -r _gtk_boolean_handled_accumulator /usr/include/gtk-2.0/
> 
> and
> 
>  pkg-config --modversion gtk-2.0

aiiieeeenoooooo
i meant 
  pkg-config --modversion gtk+-2.0
sorry.

pete




From mobarre at gmail.com  Sun Jul 22 21:31:06 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Sun, 22 Jul 2007 21:31:06 +0200
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <1185128957.9495.25.camel@one>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
	<1185108071.25277.2.camel@majesterium>
	<1185109736.25277.9.camel@majesterium>
	<3c808a150707221048p79d4e377y2b5958edf7ecbaf6@mail.gmail.com>
	<1185127969.9495.7.camel@one> <1185128957.9495.25.camel@one>
Message-ID: <3c808a150707221231m22f398ddkdf7fb818b80ba169@mail.gmail.com>

On 7/22/07, pete <zenadsl6252 at zen.co.uk> wrote:
> On Sun, 2007-07-22 at 19:12 +0100, pete wrote:
> > On Sun, 2007-07-22 at 19:48 +0200, Marc-Olivier Barre wrote:
> > > On 7/22/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
>
> >
> > can you run:
> >  grep -r _gtk_boolean_handled_accumulator /usr/include/gtk-2.0/
> >
> > and
> >
> >  pkg-config --modversion gtk-2.0
>
> aiiieeeenoooooo
> i meant
>   pkg-config --modversion gtk+-2.0
> sorry.
>
> pete

Here you go :

marco at michel:/usr/src/svn/phat/phat$ grep -r
gtk_boolean_handled_accumulator /usr/include/gtk-2.0/
/usr/include/gtk-2.0/gtk/gtkmain.h:gboolean
_gtk_boolean_handled_accumulator (GSignalInvocationHint *ihint,

marco at michel:/usr/src/svn/phat/phat$ pkg-config --modversion gtk+-2.0
2.10.11

__________________
Marc-Olivier Barre.


From loki.davison at gmail.com  Mon Jul 23 03:43:05 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Mon, 23 Jul 2007 11:43:05 +1000
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <1185127969.9495.7.camel@one>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
	<1185108071.25277.2.camel@majesterium>
	<1185109736.25277.9.camel@majesterium>
	<3c808a150707221048p79d4e377y2b5958edf7ecbaf6@mail.gmail.com>
	<1185127969.9495.7.camel@one>
Message-ID: <ec9314860707221843o6e419f3fo7216c99d54410956@mail.gmail.com>

On 7/23/07, pete <zenadsl6252 at zen.co.uk> wrote:
> On Sun, 2007-07-22 at 19:48 +0200, Marc-Olivier Barre wrote:
> > On 7/22/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > > > not sure. it works here.
> > > > did you run ./bootstrap? (regens each Makefile.in)
> >
> > Might have forgotten that :-)
> >
> > > i've added the generated files to BUILT_SOURCES in Makefile.am
> > > this should guarantee that they are built. it won't help people
> > > who don't run bootstrap though. you must do this when build
> > > system files change.
> > >
> > > the only real benefit to auto generating them is that people won't
> > > be tempted to edit them directly. if we don't mind dealing
> > > with that on occasion then we can import the glib-genmarshal
> > > output sources and just re run it when we add new
> > > marshallers to phatmarshallers.list
> > >
> > > cheers,
> > > pete.
> >
> > I can now go a little further. Although I would feel better if
> > everyone had this now :
> >
> > gcc -O3 -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include
> > -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0
> > -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
> > -I/usr/include/freetype2 -I/usr/include/libpng12
> > -I/usr/include/libgnomecanvas-2.0 -I/usr/include/libart-2.0
> > -I/usr/include/pango-1.0 -I/usr/include/freetype2
> > -I/usr/include/gtk-2.0 -I/usr/include/glib-2.0
> > -I/usr/lib/glib-2.0/include -I/usr/lib/gtk-2.0/include
> > -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/libpng12
> > -Wall -Werror -o .libs/phatfanslider phatfanslider-fanslider.o
> > ../phat/.libs/libphat.so /usr/lib/libgnomecanvas-2.so
> > /usr/lib/libart_lgpl_2.so /usr/lib/libgtk-x11-2.0.so
> > /usr/lib/libgdk-x11-2.0.so /usr/lib/libatk-1.0.so
> > /usr/lib/libgdk_pixbuf-2.0.so /usr/lib/libpangocairo-1.0.so
> > /usr/lib/libpangoft2-1.0.so /usr/lib/libpango-1.0.so
> > /usr/lib/libcairo.so /usr/lib/libfontconfig.so /usr/lib/libfreetype.so
> > /usr/lib/libxml2.so /usr/lib/libglitz.so /usr/lib/libpng12.so -lz
> > /usr/lib/libXrender.so /usr/lib/libX11.so /usr/lib/libxcb-xlib.so
> > /usr/lib/libxcb.so /usr/lib/libXau.so /usr/lib/libXdmcp.so -lm
> > /usr/lib/libgobject-2.0.so /usr/lib/libgmodule-2.0.so -ldl
> > /usr/lib/libglib-2.0.so
> > ../phat/.libs/libphat.so: undefined reference to
> > `_gtk_boolean_handled_accumulator'
> > collect2: ld returned 1 exit status
> > make[1]: *** [phatfanslider] Error 1
> > make[1]: Leaving directory `/media/data/src/svn/phat/phat/demos'
> > make: *** [all-recursive] Error 1
> >
> > Or is it just me ?
>
> hmm probably both me and thee. i pulled gtkrange.{c,h} from a recent
> gtk. perhaps that's a new function and being at least 3 parts moron,
> i forgot to check for that kind of thing.
>
> can you run:
>  grep -r _gtk_boolean_handled_accumulator /usr/include/gtk-2.0/
>
> and
>
>  pkg-config --modversion gtk-2.0
>
> and include the output of both?
>
> pete.
>
>

I've got the same prob, can't look at versions now though, on GF's machine.

Loki


From loki.davison at gmail.com  Mon Jul 23 03:52:41 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Mon, 23 Jul 2007 11:52:41 +1000
Subject: [Phat-dev] x composite fan sliders.
Message-ID: <ec9314860707221852s551b7fbfic84b1d1a73674ac3@mail.gmail.com>

Hi all,
after many, many rewrites of the fan slider drawing code in attempt to
remove flicker we now have sucess. Drawing code has been ported to
cairo and xcomposite extension, so we have translucency and other good
stuff! I'll have basic cleanup and finishing off done today and
commited. Next thing i'm adding the look from Thorstens blog posts and
text over sliders support.

http://thorwil.wordpress.com/2007/05/01/fan-sliders/
http://thorwil.wordpress.com/2007/05/01/sliders-with-text/

Anyone with ideas for the design i'd love to hear.

One minor issue. Does anyone actually run Xcomposite? Current code
doesn't have a fall back option but i am going to work on coding
one... ;)

Loki


From zenadsl6252 at zen.co.uk  Mon Jul 23 10:06:16 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Mon, 23 Jul 2007 09:06:16 +0100
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <ec9314860707221843o6e419f3fo7216c99d54410956@mail.gmail.com>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
	<1185108071.25277.2.camel@majesterium>
	<1185109736.25277.9.camel@majesterium>
	<3c808a150707221048p79d4e377y2b5958edf7ecbaf6@mail.gmail.com>
	<1185127969.9495.7.camel@one>
	<ec9314860707221843o6e419f3fo7216c99d54410956@mail.gmail.com>
Message-ID: <1185177976.5995.5.camel@majesterium>

On Mon, 2007-07-23 at 11:43 +1000, Loki Davison wrote:
> On 7/23/07, pete <zenadsl6252 at zen.co.uk> wrote:
> > On Sun, 2007-07-22 at 19:48 +0200, Marc-Olivier Barre wrote:
> > > On 7/22/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:

> > > ../phat/.libs/libphat.so: undefined reference to
> > > `_gtk_boolean_handled_accumulator'
> > > collect2: ld returned 1 exit status
> > > make[1]: *** [phatfanslider] Error 1
> > > make[1]: Leaving directory `/media/data/src/svn/phat/phat/demos'
> > > make: *** [all-recursive] Error 1
> > >
> > > Or is it just me ?
> >
> > hmm probably both me and thee. i pulled gtkrange.{c,h} from a recent
> > gtk. perhaps that's a new function and being at least 3 parts moron,
> > i forgot to check for that kind of thing.
> >
> > can you run:
> >  grep -r _gtk_boolean_handled_accumulator /usr/include/gtk-2.0/
> >
> > and
> >
> >  pkg-config --modversion gtk-2.0
> >
> > and include the output of both?
> >
> > pete.
> >
> >
> 
> I've got the same prob, can't look at versions now though, on GF's machine.

still not sure why it works here but not for you. i've changed
_gtk_boolean_handled_accumulator for
g_signal_accumulator_true_handled though. 
see if that helps. 
we aren't using phatrange for anything yet so if it doesn't, i'll
remove it from the make files but leave it in svn until it's sorted.

pete.



From zenadsl6252 at zen.co.uk  Mon Jul 23 10:09:54 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Mon, 23 Jul 2007 09:09:54 +0100
Subject: [Phat-dev] x composite fan sliders.
In-Reply-To: <ec9314860707221852s551b7fbfic84b1d1a73674ac3@mail.gmail.com>
References: <ec9314860707221852s551b7fbfic84b1d1a73674ac3@mail.gmail.com>
Message-ID: <1185178194.5995.9.camel@majesterium>

On Mon, 2007-07-23 at 11:52 +1000, Loki Davison wrote:
> Hi all,
> after many, many rewrites of the fan slider drawing code in attempt to
> remove flicker we now have sucess. Drawing code has been ported to
> cairo and xcomposite extension, so we have translucency and other good
> stuff! 

werd. did xcomposite fix the flicker though?

> I'll have basic cleanup and finishing off done today and
> commited. Next thing i'm adding the look from Thorstens blog posts and
> text over sliders support.
> 
> http://thorwil.wordpress.com/2007/05/01/fan-sliders/
> http://thorwil.wordpress.com/2007/05/01/sliders-with-text/
> 
> Anyone with ideas for the design i'd love to hear.
> 
> One minor issue. Does anyone actually run Xcomposite? Current code
> doesn't have a fall back option but i am going to work on coding
> one... ;)

not me. i'll enable it for testing though.

pete.



From t_w_ at freenet.de  Mon Jul 23 10:20:08 2007
From: t_w_ at freenet.de (Thorsten Wilms)
Date: Mon, 23 Jul 2007 10:20:08 +0200
Subject: [Phat-dev] x composite fan sliders.
In-Reply-To: <ec9314860707221852s551b7fbfic84b1d1a73674ac3@mail.gmail.com>
References: <ec9314860707221852s551b7fbfic84b1d1a73674ac3@mail.gmail.com>
Message-ID: <20070723082008.GA4194@charly.SWORD>

On Mon, Jul 23, 2007 at 11:52:41AM +1000, Loki Davison wrote:
> 
> One minor issue. Does anyone actually run Xcomposite? Current code
> doesn't have a fall back option but i am going to work on coding
> one... ;)

I enabled it in xorg.conf.
Metacity has a "compositing_manager" option. Will try that.
So I guess generaly it's about the X option and WM support?
 

-- 
Thorsten Wilms

Thorwil's Design for Free Software:
http://thorwil.wordpress.com


From damon at karuna.eclipse.co.uk  Mon Jul 23 12:45:02 2007
From: damon at karuna.eclipse.co.uk (Damon Chaplin)
Date: Mon, 23 Jul 2007 11:45:02 +0100
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <1185177976.5995.5.camel@majesterium>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
	<1185108071.25277.2.camel@majesterium>
	<1185109736.25277.9.camel@majesterium>
	<3c808a150707221048p79d4e377y2b5958edf7ecbaf6@mail.gmail.com>
	<1185127969.9495.7.camel@one>
	<ec9314860707221843o6e419f3fo7216c99d54410956@mail.gmail.com>
	<1185177976.5995.5.camel@majesterium>
Message-ID: <1185187502.3311.5.camel@localhost.localdomain>

On Mon, 2007-07-23 at 09:06 +0100, pete shorthose wrote:

> still not sure why it works here but not for you. i've changed
> _gtk_boolean_handled_accumulator for
> g_signal_accumulator_true_handled though. 
> see if that helps. 

Symbols in GTK+ starting with '_' are private, and aren't exported
usually, so you can't use them in apps.

I don't know why it works for you - maybe you compiled GTK+ yourself
with -g, so the symbol was still included in the library.

Damon




From zenadsl6252 at zen.co.uk  Mon Jul 23 13:45:51 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Mon, 23 Jul 2007 12:45:51 +0100
Subject: [Phat-dev] PhatRange is in svn (well, it is now)
In-Reply-To: <1185187502.3311.5.camel@localhost.localdomain>
References: <1184702569.5850.33.camel@one> <1184996532.9773.1.camel@one>
	<3c808a150707220403h50fe5ac4tca403594c68f9912@mail.gmail.com>
	<ec9314860707220428m69463ff8hccdf94435f6562de@mail.gmail.com>
	<1185108071.25277.2.camel@majesterium>
	<1185109736.25277.9.camel@majesterium>
	<3c808a150707221048p79d4e377y2b5958edf7ecbaf6@mail.gmail.com>
	<1185127969.9495.7.camel@one>
	<ec9314860707221843o6e419f3fo7216c99d54410956@mail.gmail.com>
	<1185177976.5995.5.camel@majesterium>
	<1185187502.3311.5.camel@localhost.localdomain>
Message-ID: <1185191151.20551.5.camel@majesterium>

On Mon, 2007-07-23 at 11:45 +0100, Damon Chaplin wrote:
> On Mon, 2007-07-23 at 09:06 +0100, pete shorthose wrote:
> 
> > still not sure why it works here but not for you. i've changed
> > _gtk_boolean_handled_accumulator for
> > g_signal_accumulator_true_handled though. 
> > see if that helps. 
> 
> Symbols in GTK+ starting with '_' are private, and aren't exported
> usually, so you can't use them in apps.
> 
> I don't know why it works for you - maybe you compiled GTK+ yourself
> with -g, so the symbol was still included in the library.

good to know, ty.

i saw that it was marked private in gtkmain.h which is why i changed
it but figured that it wasn't a literal restriction as i can use it.

pete.



From mobarre at gmail.com  Mon Jul 23 15:13:39 2007
From: mobarre at gmail.com (Marc-Olivier Barre)
Date: Mon, 23 Jul 2007 15:13:39 +0200
Subject: [Phat-dev] x composite fan sliders.
In-Reply-To: <20070723082008.GA4194@charly.SWORD>
References: <ec9314860707221852s551b7fbfic84b1d1a73674ac3@mail.gmail.com>
	<20070723082008.GA4194@charly.SWORD>
Message-ID: <3c808a150707230613we319f89xdea438d0c26886f8@mail.gmail.com>

On 7/23/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
> On Mon, Jul 23, 2007 at 11:52:41AM +1000, Loki Davison wrote:
> >
> > One minor issue. Does anyone actually run Xcomposite? Current code
> > doesn't have a fall back option but i am going to work on coding
> > one... ;)
>
> I enabled it in xorg.conf.
> Metacity has a "compositing_manager" option. Will try that.
> So I guess generaly it's about the X option and WM support?

And support from your graphic card drivers. fglrx users are screewed
since ATI uses an outdated version of the X API (surprise,
surprise...)
__________________
Marc-Olivier Barre.


From loki.davison at gmail.com  Mon Jul 23 16:28:47 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Tue, 24 Jul 2007 00:28:47 +1000
Subject: [Phat-dev] x composite fan sliders.
In-Reply-To: <3c808a150707230613we319f89xdea438d0c26886f8@mail.gmail.com>
References: <ec9314860707221852s551b7fbfic84b1d1a73674ac3@mail.gmail.com>
	<20070723082008.GA4194@charly.SWORD>
	<3c808a150707230613we319f89xdea438d0c26886f8@mail.gmail.com>
Message-ID: <ec9314860707230728v400e8c52w60d34082707f7498@mail.gmail.com>

On 7/23/07, Marc-Olivier Barre <mobarre at gmail.com> wrote:
> On 7/23/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
> > On Mon, Jul 23, 2007 at 11:52:41AM +1000, Loki Davison wrote:
> > >
> > > One minor issue. Does anyone actually run Xcomposite? Current code
> > > doesn't have a fall back option but i am going to work on coding
> > > one... ;)
> >
> > I enabled it in xorg.conf.
> > Metacity has a "compositing_manager" option. Will try that.
> > So I guess generaly it's about the X option and WM support?
>
> And support from your graphic card drivers. fglrx users are screewed
> since ATI uses an outdated version of the X API (surprise,
> surprise...)
> __________________
> Marc-Olivier Barre.
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev
>

Some ati driver help is here

http://gentoo-wiki.com/TIP_Xorg_X11_and_Transparency#ATi_.2B_Xorg

not sure if it helps much ;) Works fine here with my nvidia card...

Here is a screenshot anyway! ;)
https://developer.berlios.de/dbimage.php?id=3674

Loki


From eric at zhevny.com  Tue Jul 24 14:33:33 2007
From: eric at zhevny.com (Eric Dantan Rzewnicki)
Date: Tue, 24 Jul 2007 08:33:33 -0400
Subject: [Phat-dev] x composite fan sliders.
In-Reply-To: <ec9314860707230728v400e8c52w60d34082707f7498@mail.gmail.com>
References: <ec9314860707221852s551b7fbfic84b1d1a73674ac3@mail.gmail.com>
	<20070723082008.GA4194@charly.SWORD>
	<3c808a150707230613we319f89xdea438d0c26886f8@mail.gmail.com>
	<ec9314860707230728v400e8c52w60d34082707f7498@mail.gmail.com>
Message-ID: <20070724123332.GC3444@zhevny.com>

On Tue, Jul 24, 2007 at 12:28:47AM +1000, Loki Davison wrote:
> On 7/23/07, Marc-Olivier Barre <mobarre at gmail.com> wrote:
> > On 7/23/07, Thorsten Wilms <t_w_ at freenet.de> wrote:
> > > On Mon, Jul 23, 2007 at 11:52:41AM +1000, Loki Davison wrote:
> > > > One minor issue. Does anyone actually run Xcomposite? Current code
> > > > doesn't have a fall back option but i am going to work on coding
> > > > one... ;)
> > > I enabled it in xorg.conf.
> > > Metacity has a "compositing_manager" option. Will try that.
> > > So I guess generaly it's about the X option and WM support?
> > And support from your graphic card drivers. fglrx users are screewed
> > since ATI uses an outdated version of the X API (surprise,
> > surprise...)
> Some ati driver help is here
> 
> http://gentoo-wiki.com/TIP_Xorg_X11_and_Transparency#ATi_.2B_Xorg
> 
> not sure if it helps much ;) Works fine here with my nvidia card...
> 
> Here is a screenshot anyway! ;)
> https://developer.berlios.de/dbimage.php?id=3674

Excellent. Thanks Loki.


-Eric Rz.


From zenadsl6252 at zen.co.uk  Wed Jul 25 03:49:12 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Wed, 25 Jul 2007 02:49:12 +0100
Subject: [Phat-dev] irc channel
Message-ID: <1185328152.11040.9.camel@majesterium>

i regged the #phat channel on freenode. i've locked the topic
to:
":: welcome to #phat ::  http://phat.berlios.de/ :: this channel is not
regularly used, please see the mailing lists for development discussion
http://developer.berlios.de/mail/?group_id=6271::"

and added thorwil and nedko and torbenh4 to the access lists.
i don't know anyone else's nicks (or even if they have any) but
either me, (paugh) loki (LFactor) nedko (nedko) torben (torbenh4)
or thorsten (thorwil) can, in theory, add devs to the access list.
doing so is merely a convenience for changing the topic etc.

while we aren't using it then it doesn't really matter but
i thought i'd let everyone know.

at least people who check out #phat can be redirected to where
the action is and we do have a dedicated channel for in depth
live discussion.


cheers,
pete.



From zenadsl6252 at zen.co.uk  Wed Jul 25 18:11:55 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Wed, 25 Jul 2007 17:11:55 +0100
Subject: [Phat-dev] phat class hierarchy
Message-ID: <1185379915.13676.26.camel@one>

i'm still not sure of the best way to layout all the
phat widgets so i'll outline a few ideas and
then you can all pull them apart or make other suggestions.

we have, in some cases, many different widget presentations
within a specific type.

eg for sliders, we have the following possibilities:

pixmap belt slider
pixmap generic slider
pixmap fan slider
native belt slider
native generic slider
native belt slider

we could simply move common code into
a parent class and then have smaller classes,
each in their own file to describe the specifics.

or, we could incorporate some or all aspects into
one or two widgets, with properties to select which is
desired and inline switch statements would determine
which chunk of code is called.

another possibility to add some flexibility would be
to define an interface that draws that actual widget,
add a plugin or callback initialiser and
let the widget rely on the supplied interface 
implementation to draw itself.
(we would write and ship the defaults but this
allows application supplied widget designs for
both pixmap and native widgets. even hybrid
widgets would be possible too.)

there are benefits and problems with each approach
which should be obvious so i won't detail them.

can anyone identify any show stopping problems
with any of the above options? are there any
better ways of reconciling the different options
into a sane api?



pete.
 





From loki.davison at gmail.com  Thu Jul 26 16:16:34 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Fri, 27 Jul 2007 00:16:34 +1000
Subject: [Phat-dev] cairo fan slider and what the hell are we doing about
	themeing?
Message-ID: <ec9314860707260716o6109fa1cjf08529bea33dc1f6@mail.gmail.com>

thought we might need a more obvious subject line that Pete's post.
What are we doing about themes? I've changed the drawing code in the
fan slider to cairo now and tried to implement Thorsten's new look but
it's not themed sensitive at all at the moment. Anyone know about
themes and cairo? Is there a way to get gdkgc or styles as cairo
context stuff? I'm not sure about what we should do with the
plugin/switch expose handler stuff but I guess working cairo theme
support might be a first step.

Loki


From zenadsl6252 at zen.co.uk  Thu Jul 26 21:36:57 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Thu, 26 Jul 2007 20:36:57 +0100
Subject: [Phat-dev] cairo fan slider and what the hell are we
	doing	about themeing?
In-Reply-To: <ec9314860707260716o6109fa1cjf08529bea33dc1f6@mail.gmail.com>
References: <ec9314860707260716o6109fa1cjf08529bea33dc1f6@mail.gmail.com>
Message-ID: <1185478617.6328.12.camel@majesterium>

On Fri, 2007-07-27 at 00:16 +1000, Loki Davison wrote:
> thought we might need a more obvious subject line that Pete's post.
> What are we doing about themes? I've changed the drawing code in the
> fan slider to cairo now and tried to implement Thorsten's new look but
> it's not themed sensitive at all at the moment. Anyone know about
> themes and cairo? Is there a way to get gdkgc or styles as cairo
> context stuff? I'm not sure about what we should do with the
> plugin/switch expose handler stuff but I guess working cairo theme
> support might be a first step.


it's pretty easy to use gtk style colours:

gdk_cairo_set_source_color (cr,
&widget->style->light[GTK_STATE_NORMAL]);

but making nice looking stuff that works well on all themes with
only the colours found in the theme isn't so easy.

in particular, the themes normally do the drawing (in many cases)
and so impart their own look on what is drawn. we bypass that
with cairo and i'm not sure if an alternative exists yet. 

still, colours we can do, no problem. 

pete.







From loki.davison at gmail.com  Fri Jul 27 02:22:57 2007
From: loki.davison at gmail.com (Loki Davison)
Date: Fri, 27 Jul 2007 10:22:57 +1000
Subject: [Phat-dev] cairo fan slider and what the hell are we doing
	about themeing?
In-Reply-To: <1185478617.6328.12.camel@majesterium>
References: <ec9314860707260716o6109fa1cjf08529bea33dc1f6@mail.gmail.com>
	<1185478617.6328.12.camel@majesterium>
Message-ID: <ec9314860707261722k4aa2be38k3ca917849fb8ca90@mail.gmail.com>

On 7/27/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> On Fri, 2007-07-27 at 00:16 +1000, Loki Davison wrote:
> > thought we might need a more obvious subject line that Pete's post.
> > What are we doing about themes? I've changed the drawing code in the
> > fan slider to cairo now and tried to implement Thorsten's new look but
> > it's not themed sensitive at all at the moment. Anyone know about
> > themes and cairo? Is there a way to get gdkgc or styles as cairo
> > context stuff? I'm not sure about what we should do with the
> > plugin/switch expose handler stuff but I guess working cairo theme
> > support might be a first step.
>
>
> it's pretty easy to use gtk style colours:
>
> gdk_cairo_set_source_color (cr,
> &widget->style->light[GTK_STATE_NORMAL]);
>
> but making nice looking stuff that works well on all themes with
> only the colours found in the theme isn't so easy.
>
> in particular, the themes normally do the drawing (in many cases)
> and so impart their own look on what is drawn. we bypass that
> with cairo and i'm not sure if an alternative exists yet.
>
> still, colours we can do, no problem.
>
> pete.
>

Yeah, as i said, gtkgc and styles. So should we be sensitive to line
width etc? Or just ignore some of that?

Loki


From zenadsl6252 at zen.co.uk  Fri Jul 27 04:27:00 2007
From: zenadsl6252 at zen.co.uk (pete shorthose)
Date: Fri, 27 Jul 2007 03:27:00 +0100
Subject: [Phat-dev] cairo fan slider and what the hell are we
	doing	about themeing?
In-Reply-To: <ec9314860707261722k4aa2be38k3ca917849fb8ca90@mail.gmail.com>
References: <ec9314860707260716o6109fa1cjf08529bea33dc1f6@mail.gmail.com>
	<1185478617.6328.12.camel@majesterium>
	<ec9314860707261722k4aa2be38k3ca917849fb8ca90@mail.gmail.com>
Message-ID: <1185503221.17933.25.camel@one>

On Fri, 2007-07-27 at 10:22 +1000, Loki Davison wrote:
> On 7/27/07, pete shorthose <zenadsl6252 at zen.co.uk> wrote:
> > On Fri, 2007-07-27 at 00:16 +1000, Loki Davison wrote:
> > > thought we might need a more obvious subject line that Pete's post.
> > > What are we doing about themes? I've changed the drawing code in the
> > > fan slider to cairo now and tried to implement Thorsten's new look but
> > > it's not themed sensitive at all at the moment. Anyone know about
> > > themes and cairo? Is there a way to get gdkgc or styles as cairo
> > > context stuff? I'm not sure about what we should do with the
> > > plugin/switch expose handler stuff but I guess working cairo theme
> > > support might be a first step.
> >
> >
> > it's pretty easy to use gtk style colours:
> >
> > gdk_cairo_set_source_color (cr,
> > &widget->style->light[GTK_STATE_NORMAL]);
> >
> > but making nice looking stuff that works well on all themes with
> > only the colours found in the theme isn't so easy.
> >
> > in particular, the themes normally do the drawing (in many cases)
> > and so impart their own look on what is drawn. we bypass that
> > with cairo and i'm not sure if an alternative exists yet.
> >
> > still, colours we can do, no problem.
> >
> > pete.
> >
> 
> Yeah, as i said, gtkgc and styles. So should we be sensitive to line
> width etc? Or just ignore some of that?

didn't know before, still don't now. anyone else?

are the line width, line style et al ever used in 
practise when drawing widgets?

the thing is, even if we intercept them, we can't
replicate the actual theme drawing methods which
are not exposed in any uniform way (if at all).
not to mention the funky hacks that many themes employ.

my hunch is that it's a waste of time. if anyone
knows differently then i'll happily print out and
eat my hunch. 

one thing to consider though, much of the
distinctiveness of any given theme comes from
the line styles and depth cues (highlights
and shadows) this begs the question, why do we
need to use cairo for straight edges anyway?
why not just defer to the gdk funcs that
hook the theme engines in those cases?

i'm not aware of any themes that do anything
special with the arc or arbitrary lines anyway
so by using cairo in only those instances
where there are tangible benefits to doing so,
we probably don't lose anything.

rambling on.. what we could do is add theme
properties to the widgets, respect those in
the drawing code then at least themers
can leverage some degree control over the
appearance of phat stuff. albeit belatedly.

whether they would add contingencies for non
standard widgets is another matter.

cheeorz
pete




From torbenh at gmx.de  Sat Jul 28 18:01:27 2007
From: torbenh at gmx.de (torbenh at gmx.de)
Date: Sat, 28 Jul 2007 18:01:27 +0200
Subject: [Phat-dev] phat class hierarchy
In-Reply-To: <1185379915.13676.26.camel@one>
References: <1185379915.13676.26.camel@one>
Message-ID: <20070728160127.GA7341@mobilat>

On Wed, Jul 25, 2007 at 05:11:55PM +0100, pete shorthose wrote:

there should be some sort of Global Pixmap or Animation cache.
this seems to be my only ShowStopper concern with any design.

But we can just make this cache a global singleton. It need not be a
class member of one PhatBaseClass.


> i'm still not sure of the best way to layout all the
> phat widgets so i'll outline a few ideas and
> then you can all pull them apart or make other suggestions.
> 
> we have, in some cases, many different widget presentations
> within a specific type.
> 
> eg for sliders, we have the following possibilities:
> 
> pixmap belt slider
> pixmap generic slider
> pixmap fan slider
> native belt slider
> native generic slider
> native belt slider
> 
> we could simply move common code into
> a parent class and then have smaller classes,
> each in their own file to describe the specifics.
> 
> or, we could incorporate some or all aspects into
> one or two widgets, with properties to select which is
> desired and inline switch statements would determine
> which chunk of code is called.

this makes the code somewhat (not much ;) more complex to read.
ie. you need to look which code is currently executed.
with a sepatrate class you would directly look at the current expose
method.... 

however begin able to change the behaviour with properties directly
yields configurability via gtkStyles (style properties)


> 
> another possibility to add some flexibility would be
> to define an interface that draws that actual widget,
> add a plugin or callback initialiser and
> let the widget rely on the supplied interface 
> implementation to draw itself.
> (we would write and ship the defaults but this
> allows application supplied widget designs for
> both pixmap and native widgets. even hybrid
> widgets would be possible too.)

mhm... i sort of like the interface idea.
> 
> there are benefits and problems with each approach
> which should be obvious so i won't detail them.
> 
> can anyone identify any show stopping problems
> with any of the above options? are there any
> better ways of reconciling the different options
> into a sane api?
> 
> 
> 
> pete.
>  
> 
> 
> 
> _______________________________________________
> Phat-dev mailing list
> Phat-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/phat-dev

-- 
torben Hohn
http://galan.sourceforge.net -- The graphical Audio language


